{"version":3,"sources":["webpack:///webpack/bootstrap cec844c5efb35df2f50c","webpack:///./src/util/constraint.js","webpack:///./src/util/constraint-def.js","webpack:///./src/ui/core/widget.js","webpack:///./src/ui/dial.js","webpack:///./src/util/util-math.js","webpack:///./src/ui/core/widget-mixin-svgns.js","webpack:///./src/ui/core/widget-mixin-state.js","webpack:///./src/ui/core/widget-mixin-options.js","webpack:///./src/ui/core/widget-mixin-observer.js","webpack:///./src/ui/slider.js","webpack:///./src/audio_modules/channel-strip.js","webpack:///./src/audio_modules/core/audio-module.js","webpack:///./src/audio_modules/core/util.js","webpack:///./src/audio_modules/Envelope.js","webpack:///./src/audio_modules/core/verify-audio-context-features.js","webpack:///./test/manual_test/audio_modules/manual-test.js","webpack:///./src/audio_modules/core/audio-module-manager.js","webpack:///./src/audio_modules/core/audio-patch.js","webpack:///./src/audio_modules/AdditiveSynth.js","webpack:///./src/audio_modules/AdditiveSynthVoice.js","webpack:///./src/audio_modules/core/shim-web-audio-connect.js","webpack:///./src/audio_modules/Overtone.js","webpack:///./src/audio_modules/StereoFeedbackDelay.js","webpack:///./src/audio_modules/stereo-panner-shim.js"],"names":["Constraint","spec","min","max","enum","transform","ConstraintSpec","specDefObj","constraintMap","_parseMap","targetObj","_this","forEach","_constrainBranch","keyBranch","target","constraint","key","undefined","Math","Array","find","c","cMap","push","Object","parentBranch","map","x","keys","keyIdx","newKeyBranch","curKey","length","arrFlag","i","keyBranchSlice","slice","j","_applyConstraint","Widget","container","o","Element","Error","svg","document","createElementNS","SVG_NS","appendChild","setAttribute","getBoundingClientRect","width","height","svgEls","handlers","state","stateConstraints","observers","_initOptions","_initStateConstraints","_initState","_initSvgEls","_initHandlers","values","appendSvgEls","svgEl","child","arrEl","newVal","newState","_getLeft","y","_getTop","top","left","assign","prototype","Dial","val","setInternalState","setState","stepPrecision","getPrecision","stepInterval","minVal","maxVal","needleColor","activeColor","mouseSensitivity","quantize","num","bgArc","activeArc","needle","_calcSvgArcPath","_calcNeedleCenter","_calcDialRadius","PI","_calcArcStrokeWidth","_calcNeedleEnd","_calcNeedleWidth","_appendSvgEls","_update","y0","yD","getState","touch","ev","clientY","addEventListener","move","release","preventDefault","_calcMovePrecision","removeEventListener","_calcNeedleAngle","radius","_getWidth","_getHeight","trunc","sin","cos","cx","cy","r","startAngle","endAngle","x1","y1","x2","y2","largeArc","sweep","join","precision","MathUtil","decStr","split","round","factor","pow","q","qVal","abs","WidgetStateMixin","isChanged","hasOwnProperty","constrain","_notifyObservers","WidgetOptionsMixin","getOptions","setOptions","WidgetObserverMixin","addObserver","newObserver","observer","removeObserver","targetObserver","idx","splice","getVal","Slider","sliderBodyColor","sliderHandleColor","toFixed","dims","offsetBottom","offsetTop","bodyWidth","handleWidth","handleHeight","body","overlay","handle","touchBody","stopPropagation","_calcTouchVal","touchHandle","moveHandle","releaseHandle","sliderBodyPos","_calcSliderBodyPos","_calcSliderBodyHeight","sliderHandlePoints","_calcSliderHandlePoints","sliderBodyHeight","x0","valRange","bodyY","_getRelativeY","touchVal","ChannelStrip","audioCtx","audioComponents","inputGain","input","panner","createStereoPanner","outputGain","output","connect","err","console","error","gain","pan","value","AudioModule","numInputs","numOutputs","isAudioModule","isWebAudioConnectShimmed","createGain","_initAudioComponents","_initAudioParams","destination","outputIndex","inputIndex","disconnect","AudioModuleUtil","midiToFreq","midiPitch","a4tuning","freq","noteNameToMidi","noteName","noteNameFormat","test","log","capture","exec","note","accidental","octave","noteFundamentalMap","noteFundamental","noteNameToFreq","Envelope","_audioCtx","_envGain","_audioModuleInput","_audioModuleOutput","_aEnv","aEnv","attackEnv","attackEnvelope","aEnvelope","_rEnv","rEnv","releaseEnv","releaseEnvelope","rEnvelope","startTime","currentTime","env","envLength","setValueAtTime","linearRampToValueAtTime","cancelScheduledValues","newEnv","VerifyAudioContextFeatures","features","feature","createAnalyser","createBuffer","createBufferSource","createBiquadFilter","createChannelMerger","createChannelSplitter","createConvolver","createDelay","createDynamicsCompressor","createIIRFilter","createOscillator","createPannerr","StereoPannerShim","warn","amm","AudioContext","DEST","AUDIO_CTX","getOscFreq","testNum","stereoPanner","oscillator","frequency","start","panDial","getElementById","checked","channelStrip","osc","querySelector","inputGainSlider","setInputGain","setPan","outputGainSlider","setOutputGain","AudioModuleManager","shimWebAudioConnect","initObj","moduleMapObj","modules","audioModuleSpec","audioModuleName","newAudioModule","toLowerCase","replace","createChannelStrip","createDestination","createAdditiveSynth","createStereoFeedbackDelay","connections","isArray","connectionPath","currentModule","nextModule","e","AudioPatch","moduleMap","audioModuleManager","MODULE_MAP","AUDIO_MODULE_MANAGER","getAudioContext","AdditiveSynth","numVoices","_numOvertones","numOvertones","_voices","_availableVoices","_busyVoices","_channelStrip","newNumVoices","newNumOvertones","newGain","newPan","voiceNum","otNum","getOvertoneAmplitude","newAmp","setOvertoneAmplitude","voice","setOvertoneAttackEnvelope","setOvertoneReleaseEnvelope","selectedVoice","shift","releaseVoice","attackVoice","selectedBusyNodeIndex","findIndex","busyVoice","setFrequency","attack","deleteAvailableVoices","numVoicesToDelete","voiceToDelete","pitch","deleteBusyVoices","numBusyVoicesToDelete","numAvailableVoices","AdditiveSynthVoice","_envelope","numberOfOvertones","_overtones","options","newFreq","amplitude","func","n","fundFreq","sampleRate","pop","freqCeil","audioNodePrototype","getPrototypeOf","webAudioConnect","webAudioDisconnect","Oscillator","_oscillator","curTime","StereoFeedbackDelay","_maxDelayTime","maxDelayTime","_input","_channelSplitter","_dryMixL","_dryMixR","_wetMixL","_wetMixR","_delayL","_delayR","_feedbackL","_feedbackR","_crossfeedL","_crossfeedR","_channelMerger","_output","_connectAudioNodes","_setAudioDefaults","delayTime","delayTimeL","delayTimeR","dryMixL","dryMixR","wetMixL","wetMixR","feedbackL","feedbackR","crossfeedL","crossfeedR","time","generatePanSetter","Number","defineProperty","set","gainL","gainR","merger"],"mappings":"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","file":"/test/manual_test/audio_modules/manual-test-bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 38);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap cec844c5efb35df2f50c","/**\n * @class\n * Constraint object represents constraints on a value.\n * Instances of Constraint are used as leaves on a ConstraintSpec definition.\n * A ConstraintSpec useses Constraints to apply a constraint to leaves of an\n * arbitrarily nested object, whose leaves represent values that may be constrained.\n */\nclass Constraint {\n\n  /**\n   * @constructor\n   * @param {object} [spec] - Spec specifying the constraints.\n   * @param {number} [spec.min] - Minimum value.\n   * @param {number} [spec.max] - Maximum value.\n   * @param {array} [spec.enum] - Array of possible enumerable values.\n   * @param {function} [spec.transform] - A transformation function to apply to the value.\n   */\n  constructor(spec) {\n    spec = spec || {};\n\n    this.min = spec.min;\n    this.max = spec.max;\n    this.enum = spec.enum;\n    this.transform = spec.transform;\n  }\n}\n\nexport default Constraint;\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/constraint.js","import Constraint from \"./constraint\";\n\n/**\n * ConstraintSpec is used to apply a constraining function to a state object of arbitrary nestedness,\n * whose leaves are values that need to be constrained (i.e. to min or max values).\n * In order for ConstraintSpec to work properly, it's constructor must be given an object that\n * exactly mirrors the nested structure of the object to be constrained, with the leaves\n * containing instances of the Constraint class. Additional requirements (i.e. how to deal with nested arrays)\n * are outlined below.\n * TODO: expand explanation\n *\n * @class\n */\nclass ConstraintSpec {\n\n  /**\n   * @constructor\n   * @param {object} specDefObj - The constraint spec definition object, which defines the nesting\n   *                              structure of the objects that need to be constrained. The leaves\n   *                              of this specDef object must be objects of type Constraint, which\n   *                              act as the constraint definitions for each leaf.\n   */\n  constructor(specDefObj) {\n    this.constraintMap = [[]];\n    this._parseMap(specDefObj, this.constraintMap[0], this.constraintMap);\n  }\n\n  /**\n   * Check a constraint map for constraint specs and apply them to obj.\n   * Note: will not mutate the original object. New value is returned.\n   * @public\n   * @param {object} targetObj - The state object to check\n   * @return {number | string | object | array} val - The constrained value.\n   */\n  constrain(targetObj) {\n    const _this = this;\n    _this.constraintMap.forEach(keyBranch => {\n      _this._constrainBranch(targetObj, keyBranch);\n    });\n  }\n\n  /**\n   * Apply a constraint.\n   * @private\n   * @param {object} target - The target object to constrain\n   * @param {Constraint} constraint - The constraint object to use.\n   * @param {symbol} key - The key to use to access the constraint.\n   * @return {number | string | object | array} val - The constrained value.\n   */\n  _applyConstraint(target, constraint, key) {\n    if (constraint.min !== undefined) {\n      target[key] = Math.max(target[key], constraint.min);\n    }\n    if (constraint.max !== undefined) {\n      target[key] = Math.min(target[key], constraint.max);\n    }\n    if (constraint.enum !== undefined && constraint.enum instanceof Array) {\n      target[key] = (constraint.enum.find(target[key]) !== undefined) ? target[key] : constraint.enum[0];\n    }\n    if (constraint.transform !== undefined && typeof constraint.transform === \"function\") {\n      target[key] = constraint.transform(target[key]);\n    }\n\n    return target;\n  }\n\n  /**\n   * Parse a constraint map\n   * @private\n   * @param {object} c - The map object currently being examined.\n   *                     At the top level, this would be the whole map.\n   *                     At the terminal level, this would be an instance of Constraint object.\n   * @param {array} keyBranch - An array of keys that will specify how to get to each Constraint.\n   *                            The last element in this array will be the constraint itself.\n   * @param {array} cMap - An mutable array of key branches.\n   */\n  _parseMap(c, keyBranch, cMap) {\n    const _this = this;\n\n    if (c instanceof Array) {\n      /* if c is an array, add \"_arr_\" to the current map, and examine the first element.\n       * all elements in an array are required to have identical structure, so examining\n       * the first one is enough.\n       */\n      keyBranch.push(\"_arr_\");\n      _this._parseMap(c[0], keyBranch, cMap);\n    } else if (c instanceof Object && !(c instanceof Constraint)) {\n      // keep a copy of the parent branch to create new branches from\n      let parentBranch = keyBranch.map(x=>x);\n\n      // create new branch for each key after the first key using the parentBranch clone\n      Object.keys(c).forEach((key, keyIdx) => {\n        if (keyIdx === 0) {\n          keyBranch.push(key);\n          _this._parseMap(c[key], keyBranch, cMap);\n        } else {\n          let newKeyBranch = parentBranch.map(x=>x);\n          cMap.push(newKeyBranch);\n          newKeyBranch.push(key);\n          _this._parseMap(c[key], newKeyBranch, cMap);\n        }\n      });\n    } else if (c instanceof Constraint) {\n\n      // this will be the last element in the branch - the Constraint object itself\n      keyBranch.push(c);\n    }\n  }\n\n  /**\n   * Apply constraints to one branch of the constraint map.\n   * @private\n   * @param {object} targetObj - The state object to apply the constraint to\n   * @param {object} defObj - The constraint definition object to use.\n   * @param {array} keyBranch - An array of keys representing a path to a constraint object.\n   */\n  _constrainBranch(targetObj, keyBranch) {\n    const _this = this;\n\n    let curKey;\n    let constraint = keyBranch[keyBranch.length - 1];\n    let arrFlag = false;\n\n    /* Drill into targetObj and defObj following keyBranch keys\n     * We go to length - 2, because the next-to-last element might be an\n     * array, and the last element is the Constraint object itself.\n     */\n    for (let i = 0; i < keyBranch.length - 2 && !arrFlag; ++i) {\n      curKey = keyBranch[i];\n\n      // if we encounter an array, drill into each corresponding arry element in targetObj\n      if (curKey === \"_arr_\") {\n        arrFlag = true;\n\n        let keyBranchSlice = keyBranch.slice(i + 1, keyBranch.length);\n\n        for (let j = 0; j < targetObj.length; ++j) {\n          _this._constrainBranch(targetObj[j], keyBranchSlice);\n        }\n      } else {\n        targetObj = targetObj[curKey];\n      }\n    }\n\n    // if arrFlag is set, we've encountered an array somewhere other than on the leaves\n    // in this case we don't need to operate on it\n    if (!arrFlag) {\n      // Apply the constraints\n      curKey = keyBranch[keyBranch.length - 2];\n\n      if (curKey === \"_arr_\") {\n        for (let i = 0; i < targetObj.length; ++i) {\n          _this._applyConstraint(targetObj, constraint, i);\n        }\n      } else {\n        _this._applyConstraint(targetObj, constraint, curKey);\n      }\n    }\n  }\n}\n\nexport default ConstraintSpec;\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/constraint-def.js","import WidgetSvgNsMixin from \"./widget-mixin-svgns\";\nimport WidgetStateMixin from \"./widget-mixin-state\";\nimport WidgetOptionsMixin from \"./widget-mixin-options\";\nimport WidgetObserverMixin from \"./widget-mixin-observer\";\n\n'use strict';\n\n/**\n * Abstract base class representing an SVG widget that can be placed inside a DOM container.\n * @class\n * @abstract\n */\nclass Widget {\n\n  /**\n   * @constructor\n   * @mixes WidgetSvgNsMixin\n   * @mixes WidgetStateMixin\n   * @mixes WidgetOptionsMixin\n   * @mixes WidgetObserverMixin\n   * @param {DOM element} container - DOM element that will contain the widget.\n   * @param {object=} o - Options.\n   */\n  constructor(container, o) {\n    if (container === undefined || !(container instanceof Element)) {\n      throw new Error(\"widget requires a DOM element specifying its container as the first argument\");\n    }\n\n    this.container = container;\n\n    o = o || {};\n\n    this.svg = document.createElementNS(this.SVG_NS, \"svg\");\n    this.container.appendChild(this.svg);\n    this.svg.setAttribute(\"width\", this.container.getBoundingClientRect().width);\n    this.svg.setAttribute(\"height\", this.container.getBoundingClientRect().height);\n\n    /* Manifest of containers and namespaces */\n    this.o = {};                 // options namespace\n    this.svgEls = {};            // svg element namespace\n    this.handlers = {};          // mouse and touch event handler namespace\n    this.state = {};             // state namespace\n    this.stateConstraints = {};  // state constraints namespace\n    this.observers = [];         // observer callback container\n\n    this._initOptions(o);\n    this._initStateConstraints();\n    this._initState();\n    this._initSvgEls();\n    this._initHandlers();\n  }\n\n  /**\n   * Initialize the options\n   * @abstract\n   * @protected\n   */\n  _initOptions(o) {}\n\n  /**\n   * Initialize state constraints\n   * @abstract\n   * @protected\n   */\n  _initStateConstraints() {}\n\n  /**\n   * Initialize state\n   * @abstract\n   * @protected\n   */\n  _initState() {}\n\n  /**\n   * Initialize the svg elements.\n   * Each implementation of this method must end with calls to _appendSvgEls() and _update(),\n   * in that order, as shown in this template\n   * @abstract\n   * @protected\n   */\n  _initSvgEls() {}\n\n  /**\n   * Append the newly created svg elements to the svg container.\n   * This method should be called exctly once by each implementation of the _initSvgEls() method.\n   * @protected\n   */\n  _appendSvgEls() {\n    const _this = this;\n\n    Object.values(_this.svgEls).forEach(svgEl => {\n      appendSvgEls(svgEl);\n    });\n\n    function appendSvgEls(child) {\n      if (child instanceof Array) {\n        child.forEach(arrEl => appendSvgEls(arrEl));\n      } else {\n        _this.svg.appendChild(child);\n        child.setAttribute(\"shape-rendering\", \"geometricPrecision\");\n      }\n    }\n  }\n\n  /**\n   * Initialize mouse and touch event handlers\n   * @abstract\n   * @protected\n   */\n  _initHandlers() {}\n\n  /**\n   * Update (redraw) component based on state\n   * @abstract\n   * @protected\n   */\n  _update() {}\n\n  /* ===========================================================================\n  *  PUBLIC API\n  */\n\n  /**\n   * Get public representation of the state.\n   * @abstract\n   * @public\n   */\n  getVal() {}\n\n  /**\n   * Set the current state in a format specific to each widget.\n   * Same as setVal(), but will not cause an observer callback trigger.\n   * @abstract \n   * @public\n   */\n  setInternalVal(newVal) {}\n\n  /**\n   * Set the current state in a format specific to each widget.\n   * Same as setInternalVal(), but will cause an observer callback trigger.\n   * @abstract @public\n   */\n  setVal(newVal) {}\n\n  /**\n   * Get the current state.\n   * @abstract\n   * @public\n   * @returns {object} - Copy of this.state\n   */\n  getState() {}\n\n  /**\n   * Set the current state and redraw.\n   * @description If no new state argument is provided, will reassign old state, taking into account the stateConstraints.\n   * As opposed to setState(), setInternalState() does not trigger observer notification.\n   * Will use Widget.stateConstraints to constrain each state value to each constraints min, max, or enum\n   * @abstract\n   * @public\n   * @param {object} [newState] - The new state.\n   * @returns {boolean} A flag indicating whether the state has been changed.\n   */\n  setInternalState(newState) {}\n\n  /**\n   * Sets the current state and redraws.\n   * @description As opposed to setInternalState(), setState() will call the observer callback functions,\n   * so may lead to an infinate loop if an observer calls this method.\n   * @abstract\n   * @public\n   * @param {object} [newState] - The new state.\n   * @returns {boolean} A flag indicating whether the state has been changed.\n   */\n  setState(newState) {}\n  \n  /* ===========================================================================\n  *  HELPER METHODS\n  */\n\n  /** Helper method: get x relative to the container */\n  _getRelativeX(x) {\n    return x - this._getLeft();\n  }\n\n  /** Helper method: get y relative to the container */\n  _getRelativeY(y) {\n    return y - this._getTop();\n  }\n\n   /** Helper method: get the width of the svg container */\n   _getWidth() {\n     return this.svg.getBoundingClientRect().width;\n   }\n\n   /** Helper method: get the height of the svg container */\n   _getHeight() {\n     return this.svg.getBoundingClientRect().height;\n   }\n\n   /** Helper method: get the top edge position of the svg container */\n   _getTop() {\n     return this.svg.getBoundingClientRect().top;\n   }\n\n   /** Helper method: get the left edge position of the svg container */\n   _getLeft() {\n     return this.svg.getBoundingClientRect().left;\n   }\n}\n\nObject.assign(Widget.prototype, WidgetSvgNsMixin);\nObject.assign(Widget.prototype, WidgetStateMixin);\nObject.assign(Widget.prototype, WidgetOptionsMixin);\nObject.assign(Widget.prototype, WidgetObserverMixin);\n\nexport default Widget;\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget.js","'use strict';\n\nimport Widget from \"ui/core/widget\";\nimport Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\nimport MathUtil from \"util/util-math\";\n\n/**\n * Class representing an SVG Dial widget.\n * @class\n * @implements {Widget}\n */\nclass Dial extends Widget {\n\n  /**\n   * @constructor\n   * @param {object} container - DOM container for the widget.\n   * @param {object=} o - options.\n   * @param {number=0} o.minVal - Minimum value constraint.\n   * @param {number=127} o.maxVal - Maximum value constraint.\n   * @param {number=1} o.stepInterval - Interval of the steps in which the dial changes value. \n   * @param {string=\"#000\"} o.needleColor - Dial needle color.\n   * @param {string=\"#f40\"} o.activeColor - Dial active color.\n   */\n  constructor(container, o) {\n    super(container, o);\n  }\n\n  /* ===========================================================================\n  *  PUBLIC API\n  */\n\n  /**\n   * Returns the dial value.\n   * @public @override\n   * @returns {number} - Value of the dial.\n   */\n  getVal() {\n    return this.state.val;\n  }\n\n  /**\n   * Sets the dial value.\n   * Same as setVal(), but will not trigger observer callbacks.\n   * @public @override\n   * @param {number} newVal - The new value.\n   */\n  setInternalVal(newVal) {\n    this.setInternalState({ val: newVal });\n  }\n\n  /**\n   * Sets the dial value.\n   * Same as setInternalVal(), but will trigger observer callbacks.\n   * @public @override\n   * @param {number} newVal - The new value.\n   */\n  setVal(newVal) {\n    this.setState({ val: newVal });\n  }\n\n  /**\n   * Sets the options. \n   * @public @override\n   * @param {object} o - Options.\n   */\n  setOptions(o) {\n    super.setOptions(o);\n    this.o.stepPrecision = MathUtil.getPrecision(this.o.stepInterval);\n  }\n\n  /* ==============================================================================================\n  *  INITIALIZATION METHODS\n  */\n\n  /**\n   * Initializes the options.\n   * @override\n   * @private\n   */\n  _initOptions(o) {\n    // set the defaults\n    this.o = {\n      minVal: 0,\n      maxVal: 127,\n      stepInterval: 1,\n      needleColor: \"#414141\",\n      activeColor: \"#f40\",\n      mouseSensitivity: 1.2\n    };\n\n    // override defaults with provided options\n    super._initOptions(o);\n\n    // set the precision based on the step interval\n    this.o.stepPrecision =  MathUtil.getPrecision(this.o.stepInterval);\n  }\n\n  /**\n   * Initializes state constraints.\n   * @override\n   * @private\n   */\n  _initStateConstraints() {\n    const _this = this;\n\n    this.stateConstraints = new ConstraintSpec({\n      val: new Constraint({\n        min: _this.o.minVal,\n        max: _this.o.maxVal,\n        transform: num => MathUtil.quantize(num, _this.o.stepInterval, _this.o.stepPrecision)\n      })\n    });\n  }\n\n  /**\n   * Initializes state.\n   * @override\n   * @private\n   */\n  _initState() {\n    this.state = {\n      val: 0\n    };\n  }\n\n  /**\n   * Initializes the svg elements.\n   * @override\n   * @private\n   */\n  _initSvgEls() {\n    const _this = this;\n\n    this.svgEls = {\n      bgArc: document.createElementNS(this.SVG_NS, \"path\"),\n      activeArc: document.createElementNS(this.SVG_NS, \"path\"),\n      needle: document.createElementNS(this.SVG_NS, \"line\")\n    };\n\n    // draw the background arc\n    this.svgEls.bgArc.setAttribute(\"d\",\n      _this._calcSvgArcPath(\n        _this._calcNeedleCenter().x,\n        _this._calcNeedleCenter().y,\n        _this._calcDialRadius(),\n        0.67 * Math.PI,\n        2.35 * Math.PI\n    ));\n    this.svgEls.bgArc.setAttribute(\"stroke-width\", _this._calcArcStrokeWidth());\n    this.svgEls.bgArc.setAttribute(\"stroke\", _this.o.needleColor);\n    this.svgEls.bgArc.setAttribute(\"fill\", \"transparent\");\n    this.svgEls.bgArc.setAttribute(\"stroke-linecap\", \"round\");\n\n    // draw the active arc\n    this.svgEls.activeArc.setAttribute(\"stroke-width\", _this._calcArcStrokeWidth());\n    this.svgEls.activeArc.setAttribute(\"stroke\", _this.o.activeColor);\n    this.svgEls.activeArc.setAttribute(\"fill\", \"transparent\");\n    this.svgEls.activeArc.setAttribute(\"stroke-linecap\", \"round\");\n\n    // draw the needle\n    this.svgEls.needle.setAttribute(\"x1\", _this._calcNeedleCenter().x);\n    this.svgEls.needle.setAttribute(\"y1\", _this._calcNeedleCenter().y);\n    this.svgEls.needle.setAttribute(\"x2\", _this._calcNeedleEnd().x);\n    this.svgEls.needle.setAttribute(\"y2\", _this._calcNeedleEnd().y);\n    this.svgEls.needle.setAttribute(\"stroke-width\", _this._calcNeedleWidth());\n    this.svgEls.needle.setAttribute(\"stroke\", _this.o.needleColor);\n    this.svgEls.needle.setAttribute(\"z-index\", \"1000\");\n    this.svgEls.needle.setAttribute(\"stroke-linecap\", \"round\");\n\n    this._appendSvgEls();\n    this._update();\n  }\n\n  /**\n   * Initializes mouse and touch event handlers.\n   * @override\n   * @private\n   */\n   _initHandlers() {\n      const _this = this;\n\n      let y0 = 0;\n      let yD = 0;\n      let newVal = _this.getState().val;\n\n      this.handlers = {\n       touch: function(ev) {\n         y0 = ev.clientY;\n\n         document.addEventListener(\"mousemove\", _this.handlers.move);\n         document.addEventListener(\"touchmove\", _this.handlers.move);\n         document.addEventListener(\"mouseup\", _this.handlers.release);\n         document.addEventListener(\"touchend\", _this.handlers.release);\n       },\n       move: function(ev) {\n         ev.preventDefault();\n\n         yD = y0 - ev.clientY;\n         y0 = ev.clientY;\n\n         newVal = _this.state.val + (yD * _this.o.mouseSensitivity * _this._calcMovePrecision());\n         newVal = Math.max(newVal, _this.o.minVal);\n         newVal = Math.min(newVal, _this.o.maxVal);\n\n         _this.setState({\n           val: newVal\n         });\n       },\n       release: function() {\n         document.removeEventListener(\"mousemove\", _this.handlers.move);\n         document.removeEventListener(\"touchmove\", _this.handlers.move);\n       }\n      };\n\n      this.svg.addEventListener(\"mousedown\", _this.handlers.touch);\n      this.svg.addEventListener(\"touchstart\", _this.handlers.touch);\n   }\n\n  /**\n   * Updates (redraws) components based on state.\n   * @override\n   * @private\n   */\n   _update() {\n     // change the needle angle\n     this.svgEls.needle.setAttribute(\"x1\", this._calcNeedleCenter().x);\n     this.svgEls.needle.setAttribute(\"y1\", this._calcNeedleCenter().y);\n     this.svgEls.needle.setAttribute(\"x2\", this._calcNeedleEnd().x);\n     this.svgEls.needle.setAttribute(\"y2\", this._calcNeedleEnd().y);\n\n     // change the active arc length\n     this.svgEls.activeArc.setAttribute(\"d\",\n       this._calcSvgArcPath(\n         this._calcNeedleCenter().x,\n         this._calcNeedleCenter().y,\n         this._calcDialRadius(),\n         0.65 * Math.PI,\n         this._calcNeedleAngle() - 0.5 * Math.PI\n     ));\n\n     // if the value is at min, change the color to match needle color\n     // - otherwise the active part will be visible beneath the needle\n     if (this.state.val === this.o.minVal) {\n       this.svgEls.activeArc.setAttribute(\"stroke\", this.o.needleColor);\n     } else {\n       this.svgEls.activeArc.setAttribute(\"stroke\", this.o.activeColor);\n     }\n   }\n\n  /* ==============================================================================================\n  *  INTERNAL FUNCTIONALITY METHODS\n  */\n\n   /** \n    * Calcultes the stroke width for the background and active arcs.\n    * @private\n    * @returns {number} - Arc stroke width;\n    */\n   _calcArcStrokeWidth() {\n     return this._calcDialRadius() / 5;\n   }\n\n   /** \n    * Calculates the dial radius.\n    * @private\n    * @returns {number} - Radius of the dial.\n    */\n   _calcDialRadius() {\n     let radius = (Math.min(this._getWidth(), this._getHeight()) / 2) * 0.89;\n     radius = Math.trunc(radius);\n     return radius;\n   }\n\n   /** \n    * Calculates the needle angle for a given state val.\n    * @private\n    * @returns {number} - Angle of the needle.\n    */\n   _calcNeedleAngle() {\n     const _this = this;\n\n     return (\n              // protect against divide by 0:\n              ((this.o.maxVal - _this.o.minVal) !== 0) ?\n                  (  \n                    (_this.state.val - _this.o.minVal) / (_this.o.maxVal - _this.o.minVal) * (1.7 * Math.PI) + \n                    (1.15 * Math.PI)\n                  )  \n                : ( 0.5 * (1.7 * Math.PI) + (1.15 * Math.PI) )\n            );\n   }\n\n   /** \n    * Calculates the center of the needle.\n    * @private\n    * @returns {object} - {x, y} object representing the needle center coordinates.\n    */\n   _calcNeedleCenter() {\n     const _this = this;\n     return {\n       x: Math.trunc(_this._getWidth() / 2),\n       y: Math.trunc(_this._getHeight() / 2)\n     };\n   }\n\n   /** \n    * Calculates the position of end of the needle\n    * @private\n    * @returns {object} - {x, y} object representing the end of the needle. \n    */\n   _calcNeedleEnd() {\n     const _this = this;\n     return {\n       x: _this._calcNeedleCenter().x + (Math.sin(_this._calcNeedleAngle()) * _this._calcDialRadius()),\n       y: _this._calcNeedleCenter().y - (Math.cos(_this._calcNeedleAngle()) * _this._calcDialRadius())\n     };\n   }\n\n   /** \n    * Calculates the needle width.\n    * @private\n    * @returns {number} - The width of the needle in px.\n    */\n   _calcNeedleWidth() {\n     return this._calcDialRadius() / 5;\n   }\n\n   /** \n    * Calculates the path for an svg arc based on cx, cy, r, startAngle, endAngle.\n    * The input parameters are the way arcs are represented in HTML canvas.\n    * @private\n    * @param {number} cx - Center X.\n    * @param {number} cy - Center Y.\n    * @param {number} r - Radius.\n    * @param {number} startAngle - Start angle in radians.\n    * @param {number} endAngle - End angle in radians.\n    * @returns {string} - A string to be used for the arc path by an SVG arc object.\n    */\n   _calcSvgArcPath(cx, cy, r, startAngle, endAngle) {\n     let x1 = cx + (r * Math.cos(startAngle));\n     let y1 = cy + (r * Math.sin(startAngle));\n     let x2 = cx + (r * Math.cos(endAngle));\n     let y2 = cy + (r * Math.sin(endAngle));\n     let largeArc = (endAngle - startAngle) < Math.PI ? 0 : 1;\n     let sweep = (endAngle - startAngle) < Math.PI ? 1 : 1;\n\n     return [\"M\", x1, y1, \"A\", r, r, 0, largeArc, sweep, x2, y2].join(\" \");\n   }\n\n   /**\n    * Calculates the precision with which the state value changes when moved.\n    */\n   _calcMovePrecision() {\n     let precision = (this.o.maxVal - this.o.minVal) / 127;\n     return precision;\n   }\n}\n\nexport default Dial;\n\n\n// WEBPACK FOOTER //\n// ./src/ui/dial.js","/**\n * Useful Math Utility functions\n */\nlet MathUtil = {\n\n  /**\n   * Returns the decimal precision of a number.\n   * @param {number} val - The value whose precision to check.\n   * @returns {number} - Number of decimal places.\n   */\n  getPrecision(val) {\n    let decStr = (''+val).split('.')[1];\n    return (decStr ? decStr.length : 0);\n  },\n\n  /**\n   * Round a number to specified decimal precision.\n   * Same as Number.prototype.toFixed, but does not use toString.\n   * @param {nubmer} val - Value to be rounded.\n   * @param {precision} val - \n   * @returns  \n   */\n  round: function round(val, precision) {\n    let factor = Math.pow(10, precision);\n    return Math.round(val * factor) / factor;\n  },\n\n  /**\n   * Quantize a value (set it to the closest value matching the interval)\n   * Note: result will not necessarily reflect the same number of places of\n   * as the q input due to floating point arithmetic.\n   * @param {number} val - Value to quantize.\n   * @param {number} q - The quantization interval.\n   * @param {number} precision - The decimal precision of the result.\n   * @returns {number} qVal - Quantized val.\n   */\n  quantize: function quantize(val, q, precision) {\n    let qVal;\n\n    if (q == 0) {\n      return 0;\n    } else if (q < 0) {\n      q = Math.abs(q);\n    }\n\n    // quantize\n    qVal = ~~(val / q) * q;\n\n    qVal = Math.abs(val - qVal) > (q / 2) ? \n            qVal > 0 ? \n              qVal + q\n            : qVal - q\n          : qVal;\n\n    if (precision !== undefined) {\n      qVal = MathUtil.round(qVal, precision);\n    }\n\n    return qVal;\n  },\n\n  /**\n   * Alias for quantize(val, q)\n   * @param {number} val - Value to quantize\n   * @param {number} q - The quantization interval\n   * @param {number} precision - The decimal precision of the result.\n   * @returns {number} qVal - Quantized val\n   */\n  q: function q(val, q, precision) {\n    return MathUtil.quantize(val, q, precision);\n  }\n};\n\nexport default MathUtil;\n\n\n// WEBPACK FOOTER //\n// ./src/util/util-math.js","/**\n * Mixin specifying the xml namespace for SVG\n * @mixin\n */\nconst SVG_NS = { SVG_NS: \"http://www.w3.org/2000/svg\" };\n\nexport default SVG_NS;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget-mixin-svgns.js","import Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\n\n/**\n * Mixin for methods related to state management\n * @mixin\n */\nlet WidgetStateMixin = {\n\n  /**\n   * Get the current state.\n   *\n   * @public\n   * @returns {object} - Copy of this.state\n   */\n  getState: function getState() {\n    return Object.assign({}, this.state);\n  },\n\n  /**\n   * Set the current state and redraw.\n   *\n   * @description If no new state argument is provided, will reassign old state, taking into account the stateConstraints.\n   * As opposed to setState(), setInternalState() does not trigger observer notification.\n   * Will use Widget.stateConstraints to constrain each state value to each constraints min, max, or enum\n   *\n   * @protected\n   * @param {object=} newState - The new state.\n   * @return {boolean} isChanged - Returns a boolean indicating whether the state has been changed\n   */\n  setInternalState: function setInternalState(newState) {\n    const _this = this;\n    let isChanged = false;\n\n    newState = newState || this.getState();\n\n    Object.keys(newState).forEach(key => {\n      if (_this.state.hasOwnProperty(key) && _this.state[key] !== newState[key]) {\n        _this.state[key] = newState[key];\n        isChanged = true;\n      }\n    });\n\n    _this.stateConstraints.constrain(_this.state);\n    this._update();\n\n    return isChanged;\n  },\n\n  /**\n   * Set the current state and redraw.\n   *\n   * @description As opposed to setInternalState(), setState() will call the observer callback functions,\n   * so may lead to an infinate loop if an observer calls this method.\n   *\n   * @protected\n   * @param {object=} newState - The new state.\n   * @return {boolean} isChanged - Returns a boolean indicating whether the state has been changed\n   */\n  setState: function setState(newState) {\n    const _this = this;\n    let isChanged = false;\n\n    isChanged = this.setInternalState(newState);\n\n    this._notifyObservers();\n\n    return isChanged;\n  }\n};\n\nexport default WidgetStateMixin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget-mixin-state.js","/**\n * Mixin for methods related to options\n * @mixin\n */\nlet WidgetOptionsMixin = {\n\n  /**\n   * Initializes the options.\n   * @private\n   * @param {object} o - Options.\n   */\n  _initOptions: function _initOptions(o) {\n    const _this = this;\n    o = o || {};\n\n    Object.keys(o).forEach(key => {\n      if (_this.o.hasOwnProperty(key) && _this.o[key] !== o[key]) {\n        _this.o[key] = o[key];\n      }\n    });\n  },\n\n  /**\n   * Get the options object\n   * @public\n   * @return {object} this.o - Options\n   */\n  getOptions: function getOptions() {\n    return Object.assign({}, this.o);\n  },\n\n  /**\n   * Set the options\n   * Uses a diffing function, so only specified keys that have new values will be changed\n   * @public\n   * @param {object} o - options\n   * @return {boolean} isChanged - Returns a boolean indicating whether any option has been changed\n   */\n  setOptions: function setOptions(o) {\n    const _this = this;\n    o = o || {};\n    let isChanged = false;\n\n    Object.keys(o).forEach(key => {\n      if (_this.o.hasOwnProperty(key) && _this.o[key] !== o[key]) {\n        _this.o[key] = o[key];\n        isChanged = true;\n      }\n    });\n\n    if (isChanged) {\n      this.setState();\n    }\n\n    return isChanged;\n  }\n};\n\nexport default WidgetOptionsMixin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget-mixin-options.js","/**\n * Mixin for methods related to observer callback support\n * @mixin\n */\nlet WidgetObserverMixin = {\n\n  /**\n   * Register a new observer function that will recieve the state value every time the state is updated.\n   * @public\n   * @param {function} newObserver - The new observer function to be notified every time the state changes.\n   * @return {boolean} isChanged - Indicates whether an observer was added.\n   */\n  addObserver: function addObserver(newObserver) {\n    let isChanged = false;\n\n    if (!(this.observers.find(observer => observer === newObserver))) {\n      this.observers.push(newObserver);\n      isChanged = true;\n    }\n\n    return isChanged;\n  },\n\n  /**\n   * Remove an observer function from being notified when the state changes.\n   * @public\n   * @param {function} targetObserver - The observer function to be removed.\n   * @return {boolean} isChanged - Indicates whether an observer has been removed\n   */\n  removeObserver: function removeObserver(targetObserver) {\n    const _this = this;\n    let isChanged = false;\n\n    this.observers.forEach((observer, idx) => {\n      if (observer === targetObserver) {\n        _this.observers.splice(idx, 1);\n        isChanged = true;\n      }\n    });\n\n    return isChanged;\n  },\n\n  /**\n   * Notify all observers of new state\n   * @protected\n   */\n  _notifyObservers() {\n    const _this = this;\n    this.observers.forEach(observer => observer(_this.getVal()));\n  }\n};\n\nexport default WidgetObserverMixin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget-mixin-observer.js","import Widget from \"ui/core/widget\";\nimport Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\n\n/**\n * Class representing a Slider widget.\n * @class\n * @implements {Widget}\n */\nclass Slider extends Widget {\n\n  /**\n   * @constructor\n   * @param {object} container - DOM container for the widget.\n   * @param {object} [o] - Options.\n   * @param {number} [o.minVal=0] - The minimum possible value the slider can represent.\n   * @param {number} [o.maxVal=127] - The maximum possible value teh slider can represent.\n   * @param {string} [o.sliderBodyColor=\"#484848\"] - The color of the slider bar.\n   * @param {string} [o.sliderHandleColor=\"#484848\"] - The color of the triangle used as the slider's needle.\n   */\n  constructor(container, o) {\n    super(container, o);\n  }\n\n  /* ===========================================================================\n  *  INITIALIZATION METHODS\n  */\n\n  /**\n   * Initialize the options\n   * @override\n   * @protected\n   */\n  _initOptions(o) {\n    // set the defaults\n    this.o = {\n      minVal: 0,\n      maxVal: 127,\n      sliderBodyColor: \"#484848\",\n      sliderHandleColor: \"#484848\",\n      mouseSensitivity: 1.2\n    };\n\n    // override defaults with provided options\n    super._initOptions(o);\n  }\n\n  /**\n   * Initialize state constraints\n   * @override\n   * @protected\n   */\n  _initStateConstraints() {\n    const _this = this;\n\n    this.stateConstraints = new ConstraintSpec({\n      val: new Constraint({ min: _this.o.minVal, max: _this.o.maxVal, transform: (num) => num.toFixed(0) })   \n    });\n  }\n\n  /**\n   * Initialize state.\n   * @override\n   * @protected\n   */\n  _initState() {\n    this.state = {\n      val: this.o.minVal\n    };\n\n    // keep track of dimensions\n    this.dims = {\n      offsetBottom: 5,\n      offsetTop: 5,\n      bodyWidth: 2,\n      handleWidth: 10,\n      handleHeight: 10\n    };\n  }\n\n  /**\n   * Initialize the svg elements\n   * @override\n   * @protected\n   */\n  _initSvgEls() {\n    const _this = this;\n\n    this.svgEls = {\n      body: document.createElementNS(_this.SVG_NS, \"rect\"),\n      overlay: document.createElementNS(_this.SVG_NS, \"rect\"),\n      handle: document.createElementNS(_this.SVG_NS, \"polygon\")\n    };\n\n    this._appendSvgEls();\n    this._update();\n  }\n\n  /**\n   * Initialize mouse and touch event handlers\n   * @override\n   * @protected\n   */\n  _initHandlers() {\n    const _this = this;\n\n    this.handlers = {\n\n      touchBody: function touchBody(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        let newVal = _this._calcTouchVal(ev.clientY);\n        _this.setState({ val: newVal });\n        \n        _this.handlers.touchHandle(ev);\n      },\n\n      touchHandle: function touchHandle(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n        \n        document.body.addEventListener(\"mousemove\", _this.handlers.moveHandle);\n        document.body.addEventListener(\"touchmove\", _this.handlers.moveHandle);\n        document.body.addEventListener(\"mouseup\", _this.handlers.releaseHandle); \n        document.body.addEventListener(\"touchend\", _this.handlers.releaseHandle); \n      },\n\n      moveHandle: function moveHandle(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        let newVal = _this._calcTouchVal(ev.clientY);\n        _this.setState({ val: newVal });\n      },\n\n      releaseHandle: function releaseHandle(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        document.body.removeEventListener(\"touchmove\", _this.handlers.moveHandle); \n        document.body.removeEventListener(\"mousemove\", _this.handlers.moveHandle);\n        document.body.removeEventListener(\"mouseup\", _this.handlers.releaseHandle); \n        document.body.removeEventListener(\"touchend\", _this.handlers.releaseHandle); \n      }\n    };\n\n    this.svgEls.overlay.addEventListener(\"mousedown\", _this.handlers.touchBody);\n    this.svgEls.overlay.addEventListener(\"touchstart\", _this.handlers.touchBody);\n    this.svgEls.handle.addEventListener(\"mousedown\", _this.handlers.touchHandle);\n    this.svgEls.handle.addEventListener(\"touchstart\", _this.handlers.touchHandle);\n  }\n\n  /**\n   * Update (redraw) component based on state\n   * @override\n   * @protected\n   */\n  _update() {\n    const _this = this;\n\n    let sliderBodyPos = _this._calcSliderBodyPos();\n\n    this.svgEls.body.setAttribute(\"x\", sliderBodyPos.x);\n    this.svgEls.body.setAttribute(\"y\", sliderBodyPos.y);\n    this.svgEls.body.setAttribute(\"width\", _this.dims.bodyWidth);\n    this.svgEls.body.setAttribute(\"height\", _this._calcSliderBodyHeight());\n    this.svgEls.body.setAttribute(\"fill\", _this.o.sliderBodyColor);\n\n    this.svgEls.overlay.setAttribute(\"x\", sliderBodyPos.x);\n    this.svgEls.overlay.setAttribute(\"y\", sliderBodyPos.y);\n    this.svgEls.overlay.setAttribute(\"width\", _this.dims.bodyWidth + _this.dims.handleWidth);\n    this.svgEls.overlay.setAttribute(\"height\", _this._calcSliderBodyHeight());\n    this.svgEls.overlay.setAttribute(\"fill\", \"transparent\");\n\n    let sliderHandlePoints = _this._calcSliderHandlePoints();\n\n    this.svgEls.handle.setAttribute(\"points\", sliderHandlePoints);\n    this.svgEls.handle.setAttribute(\"fill\", _this.o.sliderHandleColor);\n  }\n\n  /* ===========================================================================\n  *  PUBLIC API\n  */\n\n  /**\n   * Get the slider value.\n   * @public\n   */\n  getVal() {\n    return this.state.val;\n  }\n\n  /**\n   * Set the current slider value.\n   * Same as setVal(), but will not cause an observer callback trigger.\n   * @public\n   * @param {number} newVal - The new slider value.\n   */\n  setInternalVal(newVal) {\n    this.setInternalState({ val: newVal });\n  }\n\n  /**\n   * Set the current slider value.\n   * Same as setInternalVal(), but will cause an observer callback trigger.\n   * @public\n   * @param {number} newVal - The new slider value.\n   */\n  setVal(newVal) {\n    this.setState({ val: newVal });\n  }\n\n  /* ===========================================================================\n  *  HELPER METHODS\n  */\n\n  /**\n   * Returns the position and dimensions for the slider body.\n   * @private\n   * @returns {object} - {x, y} position.\n   */\n  _calcSliderBodyPos() {\n    const _this = this;\n\n    return {\n      x: _this._getWidth() / 2 - 1,\n      y: _this.dims.offsetTop\n    };\n  }\n\n  /**\n   * Returns the height of the slider body.\n   * @private\n   * @returns {number} - Height of the slider body.\n   */\n  _calcSliderBodyHeight() {\n    return this._getHeight() - this.dims.offsetTop - this.dims.offsetBottom;\n  }\n\n  /**\n   * Returns the height of the slider body.\n   * @private\n   * @returns {number} - Width of the slider body.\n   */\n  _calcSliderBodyWidth() {\n    return this.dims.bodyWidth;\n  }\n\n    /**\n   * Returns the position and dimensions for the slider body.\n   * @private\n   * @returns {object} - {x, y} position.\n   */\n  _calcSliderHandlePoints() {\n    const _this = this;\n\n    let sliderBodyHeight = _this._calcSliderBodyHeight();\n\n    let x0 = (_this._getWidth() / 2) + 1;\n    let y0 = (sliderBodyHeight - (_this.state.val / (_this.o.maxVal - _this.o.minVal)) * sliderBodyHeight) + _this.dims.offsetBottom;\n    let x1 = x0 + this.dims.handleWidth;\n    let y1 = y0 - this.dims.handleHeight / 2;\n    let x2 = x1;\n    let y2 = y0 + this.dims.handleHeight / 2;\n\n    return x0 + \",\" + y0 + \" \" +\n           x1 + \",\" + y1 + \" \" +\n           x2 + \",\" + y2;\n  }\n\n  /**\n   * Calculate the value of the slider touched at position y.\n   * @private\n   * @param {number} y - Y-value of the touch location.\n   * @returns {number} - Value of the slider at the touched location.\n   */\n  _calcTouchVal(y) {\n    let valRange = this.o.maxVal - this.o.minVal;\n    let bodyY = (this._getHeight() - this._getRelativeY(y)) - this.dims.offsetBottom;\n    let touchVal = ((bodyY / this._calcSliderBodyHeight()) * valRange) + this.o.minVal; \n    \n    return touchVal;\n  }\n}\n\nexport default Slider;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/slider.js","import AudioModule from \"audio_modules/core/audio-module\";\nimport verifyAudioContextFeatures from \"audio_modules/core/verify-audio-context-features\";\n\n'use strict';\n\n/**\n * Class representing a Channel Strip.\n * A Channel Strip is a processing component similar to a channel strip found on a mixing board.\n * It facilitates control over input gain, output gain, and pan of a signal.\n * @class\n */\nclass ChannelStrip extends AudioModule {\n\n  /**\n   * @constructor\n   * @param {AudioContext} audioCtx \n   */\n  constructor(audioCtx) {\n    super(audioCtx);\n  }\n\n  /* ============================================================================================= */\n  /*  INITIALIZATION METHODS\n  /* ============================================================================================= */\n  \n  /**\n   * Initialize audio components and their connections.\n   * @private @override\n   */\n  _initAudioComponents() {\n    const _this = this;\n\n    try {\n      verifyAudioContextFeatures(_this.audioCtx, [\"Gain\", \"StereoPanner\"]);\n\n      this.audioComponents = {\n        inputGain: _this.input,\n        panner: _this.audioCtx.createStereoPanner(),\n        outputGain: _this.output\n      };\n\n      this.audioComponents.inputGain.connect(this.audioComponents.panner);\n      this.audioComponents.panner.connect(this.audioComponents.outputGain);\n    \n    } catch(err) {\n      console.error(err);\n    }\n  }\n\n  /**\n   * Initialize and expose Audio Params.\n   * @private @abstract\n   */\n  _initAudioParams() {\n    this.inputGain = this.audioComponents.inputGain.gain;\n    this.outputGain = this.audioComponents.outputGain.gain;\n    this.pan = this.audioComponents.panner.pan;\n  }\n  \n  /* ============================================================================================= */\n  /*  GETTERS AND SETTERS\n  /* ============================================================================================= */ \n  \n  /**\n   * Get input gain value.\n   * @returns {number} - Input gain value.\n   */\n  getInputGain() {\n    return this.audioComponents.inputGain.gain.value;\n  }\n\n  /**\n   * Set input gain value.\n   * @param {number} newVal - The new input gain value.\n   */\n  setInputGain(newVal) {\n    this.audioComponents.inputGain.gain.value = newVal;\n  }\n\n  /**\n   * Get pan value.\n   * @returns {number} - Pan value.\n   */\n  getPan() {\n    return this.audioComponents.panner.pan.value;\n  }\n\n  /**\n   * Set pan value.\n   * @param {number} newVal - The new pan value.\n   */\n  setPan(newVal) {\n    this.audioComponents.panner.pan.value = newVal;\n  }\n\n  /**\n   * Get output gain value.\n   * @returns {number} - Output gain value.\n   */\n  getOutputGain() {\n    return this.audioComponents.outputGain.gain.value;\n  }\n\n  /**\n   * Set output gain value.\n   * @param {number} newVal - The new output gain value.\n   */\n  setOutputGain(newVal) {\n    this.audioComponents.outputGain.gain.value = newVal;\n  }\n}\n\nexport default ChannelStrip;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/channel-strip.js","import AudioModuleUtil from \"./util\";\nimport shimWebAudioConnect from \"./shim-web-audio-connect\";\n\n'use strict';\n\n/**\n * Base class representing an Audio Module.\n * An AudioModule wraps a set of AudioNodes to provide a higher-order component that can itself be\n * used as an AudioNode.\n * @abstract @class\n */\nclass AudioModule {\n\n  /**\n   * @constructor\n   * @param {AudioContext} - The Audio Context that the module participates in.\n   * @param {number} numInputs - Number of inputs.\n   * @param {number} numOutputs - Number of outputs.\n   */\n  constructor(audioCtx, numInputs, numOutputs) {\n    this.audioCtx = audioCtx;\n\n    // marker boolean to distinguish current object from an AudioNode\n    this.isAudioModule = true;\n\n    // shim the connect method for the Audio Context so that AudioNodes can connect to AudioModules\n    if (this.audioCtx.isWebAudioConnectShimmed !== true) {\n      shimWebAudioConnect(this.audioCtx);\n    }\n\n    this.input = audioCtx.createGain();\n    this.output = audioCtx.createGain();\n\n    this.audioComponents = {};\n\n    this._initAudioComponents();\n    this._initAudioParams();\n  }\n\n  /* ============================================================================================= */\n  /*  INITIALIZATION METHODS\n  /* ============================================================================================= */\n\n  /**\n   * Initialize audio components and their connections.\n   * @private @abstract\n   */\n  _initAudioComponents() {}\n\n  /**\n   * Initialize and expose Audio Params.\n   * @private @abstract\n   */\n  _initAudioParams() {}\n\n  /* ============================================================================================ */\n  /*  PUBLIC API\n  /* ============================================================================================ */\n  \n  /**\n   * Returns the AudioContext that the Audio Module is participating in.\n   * @returns {AudioContext} - the AudioContext that the Audio Module is participating in. \n   */\n  getContext() {\n    return this.audioCtx;\n  }\n  \n  /**\n   * Connect to another AudioNode or AudioModule\n   * @public\n   * @param {AudioNode | AudioModule} destination - AudioNode or AudioModule to connect to.\n   * @param {number} outputIndex - Channel of the output to connect.\n   * @param {number} outputIndex - Channel of the destintation to connect to. \n   */\n  connect(destination, outputIndex, inputIndex) {\n    // if destination has an input property, connect to it (destination is an AudioModule)\n    if (destination.isAudioModule === true) {\n      this.output.connect(destination.input);\n    }\n    // else destination is an AudioNode and can be connected to directly\n    else {\n      this.output.connect(destination);\n    }\n  }\n\n  /**\n   * Disconnect from an AudioNode or AudioModule\n   * @param {AudioNode | AudioModule} destination - AudioNode or AudioModule to disconnect from.\n   * @param {number} outputIndex - Channel of the output to disconnect.\n   * @param {number} outputIndex - Channel of the destintation to disconnect from. \n   */\n  disconnect(destination, outputIndex, inputIndex) {\n    // if destination has an input property, disconnect from it (destination is an AudioModule)\n    if (destination.isAudioModule === true) {\n      this.output.disconnect(destination.input);\n    // else destination is an AudioNode and can be disconnected from directly\n    } else {\n      this.output.disconnect(destination);\n    }\n  }\n}\n\nexport default AudioModule;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/core/audio-module.js","'use strict';\n\n/**\n * A collection of static utility methods for Audio Modules\n */\nlet AudioModuleUtil = {\n\n  /**\n   * Convert MIDI pitch to frequency\n   * @param {number} midiPitch - The midi pitch number.\n   * @param {number} [a4tuning=440] - Tuning of the note A4 (midi pitch 69) in Hz, 440Hz by default.\n   * @return {number} freq - Frequency for the given MIDI pitch.\n   */\n  midiToFreq: function (midiPitch, a4tuning) {\n    a4tuning = a4tuning || 440;\n    let freq = -1;\n\n    if (midiPitch !== -1) freq = Math.pow(2, (midiPitch - 69) / 12) * 440;\n    return freq;\n  },\n\n  /**\n   * Convert note name to MIDI pitch\n   * @param {string} noteName - The note name to convert\n   * @return {number} midiPitch - MIDI pitch for the given note name. Return -1 if invalid argument format.\n   */\n  noteNameToMidi: function (noteName) {\n    let noteNameFormat = /^([a-g]|[A-G])(#|b)?([0-9]|10)$/;\n\n    if(noteNameFormat.test(noteName) === false) {\n      console.log('AudioModuleUtil.noteNameToMidi: invalid note name format');\n      return -1;\n    } else {\n      let capture = noteNameFormat.exec(noteName);\n\n      let note = capture[1];\n      let accidental = capture[2];\n      let octave = capture[3];\n\n      let noteFundamentalMap = {\n        'A': 9,\n        'a': 9,\n        'B': 11,\n        'b': 11,\n        'C': 0,\n        'c': 0,\n        'D': 2,\n        'd': 2,\n        'E': 4,\n        'e': 4,\n        'F': 5,\n        'f': 5,\n        'G': 7,\n        'g': 7\n      };\n\n      let noteFundamental = noteFundamentalMap[note];\n\n      if(accidental === '#') {\n        noteFundamental++;\n      } else if (accidental === 'b') {\n        noteFundamental--;\n      }\n\n      let midiPitch = noteFundamental + (12 * octave);\n\n      return midiPitch;\n    }\n  },\n\n  /**\n   * Convert note name to frequency\n   * @param {string} noteName - The note name to convert\n   * @param {number} [a4tuning=440] - Tuning of the note A4 (midi pitch 69) in Hz, 440Hz by default.\n   * @return {number} freq - Frequency for the given MIDI pitch.\n   */\n  noteNameToFreq: function (noteName, a4tuning) {\n    a4tuning = a4tuning || 440;\n    return AudioModuleUtil.midiToFreq(AudioModuleUtil.noteNameToMidi(noteName), a4tuning);\n  }\n}\n\nexport default AudioModuleUtil;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/core/util.js","'use strict';\n\nclass Envelope {\n\n  /**\n   * Envelope\n   * <p>\n   * Envelope values are specified as 2D arrays in the form\n   * <b>[ [t(0), a(0)], [t(1), a(1)], ... [t(i), a(i)] ]</b>,\n   * where <b>t(i)</b> specifies the time, in seconds,\n   * and <b>a(i)</b> specifies the amplitude of the envelope at the vertex <b>i</b>.\n   * </p>\n   * @param {object} o - Options\n   * @param {AudioContext} o.audioCtx - The audio context to be used.\n   * @param {array} o.attackEnvelope - 2D array specifying the attack envelope\n   * @param {array} o.releaseEnvelope - 2D array specifying the release envelope\n   */\n  constructor (audioCtx, o) {\n    o = o || {};\n\n    this._audioCtx = audioCtx;\n\n    this._envGain = this._audioCtx.createGain();\n    this._envGain.gain.value = 0;\n\n    this.input = this._envGain;\n    this.output = this._envGain;\n    this._audioModuleInput = this.input;\n    this._audioModuleOutput = this.output;\n\n    this._aEnv = o.aEnv || o.attackEnv || o.attackEnvelope || o.aEnvelope || [[0, 0], [0.05, 1], [1, 1]];\n    this._rEnv = o.rEnv || o.releaseEnv || o.releaseEnvelope || o.rEnvelope || [[0, 1], [0.5, 1], [1, 0]];\n  }\n\n  /* =================== */\n  /* --- Audio setup --- */\n  /* =================== */\n\n  /**\n   * Connect to another AudioNode or AudioModule\n   */\n  connect (destination) {\n    // if destination has an input property, connect to it (destination is an AudioModule)\n    if (typeof destination.input === \"object\") {\n      this.output.connect(destination.input);\n    }\n    // else destination is an AudioNode and can be connected to directly\n    else {\n      this.output.connect(destination);\n    }\n  }\n\n  /**\n   * Disconnect from an AudioNode or AudioModule\n   */\n  disconnect (destination) {\n    // if destination has an input property, disconnect from it (destination is an AudioModule)\n    if (typeof destination.input === \"object\") {\n      this.output.disconnect(destination.input);\n    // else destination is an AudioNode and can be disconnected from directly\n    } else {\n      this.output.disconnect(destination);\n    }\n  }\n\n  /* ============================= */\n  /* --- Get/set the envelopes --- */\n  /* ============================= */\n\n  /** The attack envelope */\n  get attackEnvelope () {\n    return this._aEnv;\n  }\n  set attackEnvelope (newEnv) {\n    this._aEnv = newEnv;\n    return this;\n  }\n\n  /** The release envelope */\n  get releaseEnvelope () {\n    return this._rEnv;\n  }\n  set releaseEnvelope (newEnv) {\n    this._rEnv = newEnv;\n    return this;\n  }\n\n  /* ========================== */\n  /* --- Envelope execution --- */\n  /* ========================== */\n\n  /** Execute the attack envelope */\n  attack () {\n    var startTime = this._audioCtx.currentTime;\n    var env = this._aEnv;\n    var envLength = env.length;\n\n    // ramp from 0 to the first value in the envelope\n    this._envGain.gain.setValueAtTime(0, startTime);\n    this._envGain.gain.linearRampToValueAtTime(env[0][1], startTime + env[0][0]);\n\n    // ramp to each subsequent value\n    for (var i = 0; i < (envLength - 1); i++) {\n      this._envGain.gain.setValueAtTime(env[i][1], startTime + env[i][0]);\n      this._envGain.gain.linearRampToValueAtTime(env[i+1][1], startTime + env[i+1][0]);\n    }\n\n    // set the final value\n    this._envGain.gain.setValueAtTime(env[envLength-1][1], startTime + env[envLength-1][0]);\n  }\n\n  /** Execute the release envelope */\n  release () {\n    var startTime = this._audioCtx.currentTime;\n    var env = this._rEnv;\n    var envLength = env.length;\n\n    // cancel scheduled values in case attack is still happening\n    this._envGain.gain.cancelScheduledValues(startTime);\n\n    // ramp to each subsequent value\n    for (var i = 0; i < (envLength - 1); i++) {\n      this._envGain.gain.setValueAtTime(env[i][1], startTime + env[i][0]);\n      this._envGain.gain.linearRampToValueAtTime(env[i+1][1], startTime + env[i+1][0]);\n    }\n\n    // if the gain value at the end is not 0, ramp it down to 0 in 1ms\n    if(env[envLength-1][1] !== 0) {\n      this._envGain.gain.linearRampToValueAtTime(0, startTime + env[envLength-1][0] + 0.001);\n    }\n  }\n}\n\nexport default Envelope\n\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/Envelope.js","/**\n * Verifies that the given audio context has the requested features and attempts to shim features that are\n * missing.\n * @param {AudioContext} audioCtx - The Audio Context to check.\n * @param {array} features - Array of features to detect, listed as strings (i.e. \"Gain\", \"Oscillator\", \"Analyser\", etc.) \n */\nfunction VerifyAudioContextFeatures(audioCtx, features) {\n\n  features.forEach(feature => {\n\n    switch(feature) {\n\n      case \"Analyser\":\n        if (typeof audioCtx.createAnalyser !== \"function\") {\n          throw new Error(\"Required module AnalyserNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"AudioBuffer\":\n        if (typeof audioCtx.createBuffer !== \"function\") {\n          throw new Error(\"Required module AudioBufferNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n      \n      case \"AudioBufferSource\":\n        if (typeof audioCtx.createBufferSource !== \"function\") {\n          throw new Error(\"Required module AudioBufferSourceNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"BiquadFilter\":\n        if (typeof audioCtx.createBiquadFilter !== \"function\") {\n          throw new Error(\"Required module BiquadFilterNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"ChannelMerger\":\n        if (typeof audioCtx.createChannelMerger !== \"function\") {\n          throw new Error(\"Required module ChannelMergerNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n      \n      case \"ChannelSplitter\":\n        if (typeof audioCtx.createChannelSplitter !== \"function\") {\n          throw new Error(\"Required module ChannelSplitterNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"Convolver\":\n        if (typeof audioCtx.createConvolver !== \"function\") {\n          throw new Error(\"Required module ConvolverNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"Delay\":\n        if (typeof audioCtx.createDelay !== \"function\") {\n          throw new Error(\"Required module DelayNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"DynamicsCompressor\":\n        if (typeof audioCtx.createDynamicsCompressor !== \"function\") {\n          throw new Error(\"Required module DynamicsCompressorNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n       \n      case \"Gain\":\n        if (typeof audioCtx.createGain !== \"function\") {\n          throw new Error(\"Required module GainNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"IIRFilter\":\n        if (typeof audioCtx.createIIRFilter !== \"function\") {\n          throw new Error(\"Required module IIRFilterNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"Oscillator\":\n        if (typeof audioCtx.createOscillator !== \"function\") {\n          throw new Error(\"Required module OscillatorNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n        \n      case \"Panner\":\n        if (typeof audioCtx.createPannerr !== \"function\") {\n          throw new Error(\"Required module PannerNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"StereoPanner\":\n        if (typeof audioCtx.createStereoPanner !== \"function\") {\n          audioCtx.createStereoPanner = function() { return new StereoPannerShim(audioCtx); };\n        }\n        break;\n\n      default:\n        console.warn(\"A check for AudioContext feature \", feature, \"is being requested, but no matching check is implemented\");\n        break;\n    }\n  });\n}\n\nexport default VerifyAudioContextFeatures;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/core/verify-audio-context-features.js","import AudioModuleManager from \"audio_modules/core/audio-module-manager\";\nimport AudioModule from \"audio_modules/core/audio-module\";\nimport StereoPannerShim from \"audio_modules/stereo-panner-shim\";\nimport ChannelStrip from \"audio_modules/channel-strip\";\n\nimport Dial from \"ui/dial\";\nimport Slider from \"ui/slider\";\n\nconst amm = new AudioContext();\nconst DEST = AUDIO_CTX.destination;\n\n// get a different frequency for each test so that you can listen to several tests together\nfunction getOscFreq(testNum) {\n  return 55 * (testNum + 3);\n}\n\n/* ============================================================================================= */\n/* STEREO PANNER SHIM TEST\n/* ============================================================================================= */\n\n(function() {\n\n  AUDIO_CTX.createStereoPanner = function() {\n    console.log(\"Creating stereo panner...\"); \n    return new StereoPannerShim(AUDIO_CTX); \n  };\n\n  let stereoPanner = AUDIO_CTX.createStereoPanner();\n  let oscillator = AUDIO_CTX.createOscillator();\n  let gain = AUDIO_CTX.createGain();\n\n  oscillator.connect(stereoPanner);\n  stereoPanner.connect(gain);\n  gain.connect(DEST);\n\n  gain.gain.value = 0;\n\n  oscillator.frequency.value = getOscFreq(1);\n  oscillator.start();\n\n  // pan dial\n  var panDial = new Dial(document.getElementById(\"pan-dial\"), {\n    minVal: -1,\n    maxVal: 1,\n    stepInterval: 0.01\n  });\n\n  panDial.addObserver(val => {\n    stereoPanner.pan.value = val;\n  });\n\n  // audio on/off toggle\n  document.getElementById(\"stereo-panner-audio-toggle\").addEventListener(\"change\", function(ev) {\n    gain.gain.value = ev.target.checked ? 0.5 : 0;\n  });\n\n})();\n\n/* ============================================================================================= */\n/* CHANNEL STRIP TEST\n/* ============================================================================================= */\n\n(function() {\n  \n  let channelStrip = new ChannelStrip(AUDIO_CTX);\n  let osc = AUDIO_CTX.createOscillator();\n  let gain = AUDIO_CTX.createGain();\n\n  osc.connect(channelStrip);\n  channelStrip.connect(gain);\n  gain.connect(DEST);\n\n  gain.gain.value = 0;\n  osc.frequency.value = getOscFreq(2);\n  osc.start();\n\n  document.querySelector(\".channel-strip .audio-toggle\").addEventListener(\"change\", ev => {\n    gain.gain.value = ev.target.checked ? 0.5 : 0;\n  });\n\n  // input gain slider\n  let inputGainSlider = new Slider(document.querySelector(\".channel-strip .input-gain-slider\"), {\n    minVal: 0,\n    maxVal: 1,\n    stepInterval: 0.01\n  });\n  inputGainSlider.addObserver(gain => { channelStrip.setInputGain(gain); });\n\n  // pan dial;\n  let panDial = new Dial(document.querySelector(\".channel-strip .pan-dial\"), {\n    minVal: -1,\n    maxVal: 1,\n    stepInterval: 0.01\n  });\n  panDial.addObserver(pan => { channelStrip.setPan(pan); });\n\n  // output gain slider\n  let outputGainSlider = new Slider(document.querySelector(\".channel-strip .output-gain-slider\"), {\n    minVal: 0,\n    maxVal: 1,\n    stepInterval: 0.01\n  });\n  outputGainSlider.addObserver(gain => { channelStrip.setOutputGain(gain); });\n\n\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./test/manual_test/audio_modules/manual-test.js","'use strict';\n\nimport AudioPatch from './audio-patch';\nimport AudioModuleUtil from 'audio_modules/core/util';\nimport AdditiveSynth from 'audio_modules/AdditiveSynth';\nimport ChannelStrip from 'audio_modules/channel-strip';\nimport Envelope from 'audio_modules/Envelope';\nimport StereoFeedbackDelay from 'audio_modules/StereoFeedbackDelay';\n\n/**\n * Class representing an Audio Module Manager.\n * Audio Module Managers facilitate creating and managing Audio Patches.\n * @class\n */\nclass AudioModuleManager {\n  \n  /**\n   * @constructor\n   * @param {AudioContext} [audioCtx] - The Audio Context to use. If this argument is not provided,\n   *                                    a new Audio Context will be created and associated with this\n   *                                    Audio Module Manager.\n   */\n  constructor(audioCtx) {\n    this.AUDIO_CTX = (typeof audioCtx === \"undefined\") ? new AudioContext() : audioCtx;\n\n    // Shim the WebAudio connect and disconnect methods so that we can connect and\n    // disconnect AudioModules the same way as WebAudio AudioNodes and use AudioNodes\n    // interchangably with AudioModules\n    AudioModuleUtil.shimWebAudioConnect(this.AUDIO_CTX);\n  }\n\n  /**\n   * Return the Audio Context associated with this Module Manager.\n   * @returns {AudioContext} - The Audio Context associated with this Module Manager.\n   */\n  getContext() {\n    return this.AUDIO_CTX;\n  }\n\n  /**\n   * An audio patch is a collection of connected audio modules that form a meaningful unit\n   * @param {object} initObj - An object specifying the initialization parameters,\n   *                            containing two properties: modules, and connectionPaths\n   * @param {object} initObj.modules - An object representing the named audio modules used in this patch\n   * @param {array} initObj.connectionPaths - An 2D array of strings, where each string represents the name of\n   *                              an Audio Module (matching the way it is named in the 'modules' object),\n   *                              and the sequence of these names represents an audio path.\n   *                              For example, the following is one possibility:\n   *                                [[\"synth1\", \"delay\", \"reverb\", \"output\"],\n   *                                [\"synth2\", \"reverb\"]]\n   *                              This connection specifies two connection paths:\n   *                                synth1 -> delay -> reverb -> output\n   *                              And the second, where synth2 is connected to the same reverb used\n   *                              in the first paths\n   *                                synth2 -> reverb -> output\n   *                              Note that since the reverb is already connected to the output by the\n   *                              first path, it does not need to be redundantly connected in the second path\n   * @return {object} moduleMapObj - an object used as a map where keys are strings used to name each module,\n   *                                 and values are the module objects themselves\n   */\n  createAudioPatch(initObj) {\n    const _this = this;\n\n    initObj = initObj || {};\n\n    // moduleMap will store the modules created keyed by the names given to them\n    // keys are arbitrary strings used as names for each module\n    // values are the module objects themselves\n    let moduleMapObj = {};\n\n    try {\n      // try to create the modules requested in the initObj and store them in moduleMapObj\n      if (typeof initObj.modules !== \"object\") throw (\"Exception in initAudioPatch: no audio modules provided in initiation object\");\n\n      Object.keys(initObj.modules).forEach(audioModuleName => {\n        let audioModuleSpec = initObj.modules[audioModuleName];\n\n        // if the audio module type is specified as a string, create the corresponding modules\n        if (typeof audioModuleSpec === \"string\") {\n          // placeholder to use when creating the new module\n          let newAudioModule = null;\n\n          // use name in lowercase with whitespace removed\n          switch (audioModuleSpec.toLowerCase().replace(/\\W+/g, \"\")) {\n            case \"channelstrip\":\n              newAudioModule = _this.createChannelStrip();\n              break;\n            case \"destination\":\n              newAudioModule = _this.createDestination()\n              break;\n            case \"envelope\":\n              newAudioModule = _this.createBiquadFilter();\n              break;\n            case \"additivesynth\":\n              newAudioModule = _this.createAdditiveSynth();\n              break;\n            case \"stereofeedbackdelay\":\n            case \"delay\":\n              newAudioModule = _this.createStereoFeedbackDelay();\n              break;\n            case \"biquadfilter\":\n            case \"filter\":\n              newAudioModule = _this.createBiquadFilter();\n              break;\n            default:\n              throw (\"Exception in initAudioPatch: no such module \" + audioModuleSpec);\n              break;\n          }\n\n          moduleMapObj[audioModuleName] = newAudioModule;\n        }\n      });\n\n      // try to connect the modules\n      if (typeof initObj.connections === \"object\" && Array.isArray(initObj.connections)) {\n        initObj.connections.forEach(connectionPath => {\n          for (let i = 0; i < connectionPath.length - 1; i++) {\n            let currentModule = moduleMapObj[connectionPath[i]];\n            let nextModule = moduleMapObj[connectionPath[i + 1]];\n            currentModule.connect(nextModule);\n          }\n        });\n      }\n    }\n    catch (e) {\n      console.log(e);\n      moduleMapObj = null;\n    }\n\n    return new AudioPatch(moduleMapObj, _this.AUDIO_CTX, _this);\n  }\n\n  /**\n   * Create an Additive Synth Audio Module\n   */\n  createAdditiveSynth(o) {\n    o = o || {};\n    return new AdditiveSynth(this.AUDIO_CTX, o);\n  }\n\n  /**\n   * Create a Biquad Filter Audio Module\n   */\n  createBiquadFilter() {\n    return this.AUDIO_CTX.createBiquadFilter();\n  }\n\n  /**\n   * Create a Channel Strip Audio Module\n   */\n  createChannelStrip(o) {\n    o = o || {};\n    return new ChannelStrip(this.AUDIO_CTX, o);\n  }\n\n  /**\n   * Create a destination node\n   */\n  createDestination() {\n    return this.AUDIO_CTX.destination;\n  }\n\n  /**\n   * Create an Envelope Audio Module\n   */\n  createEnvelope(o) {\n    o = o || {};\n    return new Envelope(this.AUDIO_CTX, o);\n  }\n\n  /**\n   * Create a Stereo Feedback Delay Audio Module\n   */\n  createStereoFeedbackDelay(o) {\n    o = o || {};\n    return new StereoFeedbackDelay(this.AUDIO_CTX, o);\n  }\n}\n\nexport default AudioModuleManager;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/core/audio-module-manager.js","'use strict';\n\n/**\n * Class representing an Audio Patch created by an Audio Module Manager.\n * @class \n */\nclass AudioPatch {\n\n  /**\n   * @constructor\n   * @param {Object} moduleMap\n   * @param {AudioContext} audioCtx\n   * @param {AudioModuleManager} audioModuleManager\n   */\n  constructor(moduleMap, audioCtx, audioModuleManager) {\n    this.MODULE_MAP = moduleMap;\n    this.AUDIO_CTX = audioCtx;\n    this.AUDIO_MODULE_MANAGER = audioModuleManager;\n    \n    // a more consise alias\n    this.modules = this.MODULE_MAP;\n  }\n\n  /**\n   * Returns the Audio Context\n   * @returns {AudioContext}\n   */\n  getAudioContext() {\n    return this.AUDIO_CTX;\n  }\n\n  /**\n   * Alias for {getAudioContext}.\n   * @returns {AudioContext}\n   */\n  getAudioCtx() {\n    return this.getAudioContext();\n  }\n\n  /**\n   * Returns the module map.\n   * @returns {object} - Object representing the module map.\n   */\n  getModuleMap() {\n    return this.MODULE_MAP;\n  }\n\n  /**\n   * Alias for {getModuleMap}. Returns the module map.\n   * @returns {object} - Object representing the module map.\n   */\n  modules() {\n    return this.MODULE_MAP;\n  }\n\n  /**\n   * Returns the Audio Module Manager associated with this patch.\n   * @returns {AudioModuleManager} - The Audio Module Manager associated with this patch.\n   */\n  getAudioModuleManager() {\n    return this.AUDIO_MODULE_MANAGER;\n  }\n}\n\nexport default AudioPatch;\n\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/core/audio-patch.js","import AdditiveSynthVoice from './AdditiveSynthVoice';\nimport ChannelStrip from './channel-strip';\nimport AudioModuleUtil from './core/util';\n\n'use strict';\n\nclass AdditiveSynth {\n  constructor (audioCtx, o) {\n      o = o || {};\n\n      this._audioCtx = audioCtx;\n\n      var numVoices = o.numVoices || 16;\n      this._numOvertones = o.numOvertones || 20;\n\n      this._voices = [];\n      this._availableVoices = [];\n      this._busyVoices = []; // { voiceNum: {number}, pitch: {number} }\n      this._channelStrip = new ChannelStrip(this._audioCtx);\n\n      for (var i = 0; i < numVoices; i++) {\n        this._voices.push(new AdditiveSynthVoice(this._audioCtx, { numOvertones: this._numOvertones }));\n        this._voices[i].connect(this._channelStrip.input);\n        this._availableVoices.push(i);\n      }\n\n      this.output = this._channelStrip.output;\n      this._audioModuleOutput = this.output;\n  }\n\n  /* =================== */\n  /* --- Audio setup --- */\n  /* =================== */\n\n  /**\n   * Connect to another AudioNode or AudioModule\n   */\n  connect (destination) {\n    // if destination has an input property, connect to it (destination is an AudioModule)\n    if (typeof destination.input === \"object\") {\n      this.output.connect(destination.input);\n    }\n    // else destination is an AudioNode and can be connected to directly\n    else {\n      this.output.connect(destination);\n    }\n  }\n\n  /**\n   * Disconnect from an AudioNode or AudioModule\n   */\n  disconnect (destination) {\n    // if destination has an input property, disconnect from it (destination is an AudioModule)\n    if (typeof destination.input === \"object\") {\n      this.output.disconnect(destination.input);\n    // else destination is an AudioNode and can be disconnected from directly\n    } else {\n      this.output.disconnect(destination);\n    }\n  }\n\n  /* =========================================================================================== */\n  /* GETTERS AND SETTERS                                                                         */\n  /* =========================================================================================== */\n\n  /** Number of voices */\n  get numVoices () {\n    return this._voices.length;\n  }\n  set numVoices (newNumVoices) {\n    const _this = this;\n\n    // if the new number of voices is more than previous number, we add voices\n    if (newNumVoices > this.numVoices) {\n      for (var i = this.numVoices; i < newNumVoices; i++) {\n        this._voices.push(new AdditiveSynthVoice(this._audioCtx, { numOvertones: this._numOvertones }));\n        this._voices[i].connect(this._channelStrip.input);\n        this._availableVoices.push(i);\n      }\n\n    // if the new number is less than previous, remove voices\n    } else if (newNumVoices < this.numVoices) {\n      let numVoicesToDelete = this.numVoices - newNumVoices;\n      let numAvailableVoices = this._availableVoices.length;\n\n      // if the number of voices to delete is less then or equal to the number of available (inactive) voices, delete these voices\n      if (numVoicesToDelete <= numAvailableVoices) {\n        deleteAvailableVoices(numVoicesToDelete);\n      }\n\n      // else delete all available (inactive) voices and also required number of busy voices\n      else {\n        let numBusyVoicesToDelete = numVoicesToDelete - numAvailableVoices;\n\n        deleteAvailableVoices(numAvailableVoices);\n        deleteBusyVoices(numBusyVoicesToDelete);\n      }\n\n      function deleteAvailableVoices (numVoicesToDelete) {\n        for(let i = 0; i < numVoicesToDelete; i++) {\n          let voiceToDelete = _this._availableVoices[i];\n\n          _this._voices.splice(voiceToDelete, 1);\n          _this._availableVoices.splice(i, 1);\n\n          // remap the available and busy voices because we modified the voices stack\n          _this._availableVoices = _this._availableVoices.map(voice => {\n            return (voice > voiceToDelete) ? voice - 1 : voice;\n          });\n          _this._busyVoices = _this._busyVoices.map(voice => {\n            return {\n              voiceNum: (voice.voiceNum > voiceToDelete) ? voice.voiceNum - 1 : voice.voiceNum,\n              pitch: voice.pitch\n            };\n          });\n        }\n      }\n\n      function deleteBusyVoices (numBusyVoicesToDelete) {\n        // delete the required number of busy voices\n        for (let i = 0; i < numBusyVoicesToDelete; i++) {\n          let voiceToDelete = _this._busyVoices[i].voiceNum;\n\n          _this.releaseVoice(voiceToDelete);\n          _this._voices.splice(voiceToDelete, 1);\n          _this._busyVoices.splice(i, 1);\n\n          // remap the busy voices pointer stack because we modified the voices stack\n          _this._busyVoices = _this._busyVoices.map(voice => {\n            return {\n              voiceNum: (voice.voiceNum > voiceToDelete) ? voice.voiceNum - 1 : voice.voiceNum,\n              pitch: voice.pitch\n            };\n          });\n        }\n      }\n    }\n    console.log('newNumVoices: ' + this.numVoices);\n    return this;\n  }\n  setNumVoices (newNumVoices) {\n    this.numVoices = newNumVoices;\n  }\n\n  /** Number of overtones */\n  get numOvertones () {\n    return this._numOvertones;\n  }\n  set numOvertones (newNumOvertones) {\n    this._voices.forEach(voice => {\n      voice.numOvertones = newNumOvertones;\n    });\n    this._numOvertones = newNumOvertones;\n    return this;\n  }\n  setNumOvertones (newNumOvertones) {\n    this.numOvertones = newNumOvertones;\n  }\n\n  /** Gain */\n  get gain () {\n    return this._channelStrip.outputGain;\n  }\n  set gain (newGain) {\n    this._channelStrip.outputGain = newGain;\n    return this;\n  }\n  setGain (newGain) {\n    this.gain = newGain;\n  }\n\n  /** Pan */\n  get pan () {\n    return this._channelStrip.pan;\n  }\n  set pan (newPan) {\n    this._channelStrip.pan = newPan;\n    return this;\n  }\n  setPan (newPan) {\n    this.pan = newPan;\n  }\n\n  /** Get overtone amplitude */\n  getOvertoneAmplitude (voiceNum, otNum) {\n    this._voices[voiceNum].getOvertoneAmplitude(otNum);\n    return this;\n  }\n\n  /** Overtone amplitude */\n  setOvertoneAmplitude (voiceNum, otNum, newAmp) {\n    this._voices[voiceNum].setOvertoneAmplitude(otNum, newAmp);\n    return this;\n  }\n\n  /* ========================= */\n  /* --- Envelope controls --- */\n  /* ========================= */\n\n  /** Attack envelope */\n  set attackEnvelope (newEnv) {\n    this._voices.forEach(voice => {\n      voice.attackEnvelope = newEnv;\n    });\n  }\n\n  /** Release envelope */\n  set releaseEnvelope (newEnv) {\n    this._voices.forEach(voice => {\n      voice.releaseEnvelope = newEnv;\n    });\n  }\n\n  /** Set the attack envelope for an overtone\n   *  @param {number} otNum - Number of overtone for which to set envelope\n   *  @param {array} newEnv - 2D array representing the new envelope\n   */\n  setOvertoneAttackEnvelope (otNum, newEnv) {\n    this._voices.forEach(voice => {\n      voice.setOvertoneAttackEnvelope(otNum, newEnv);\n    });\n    return this;\n  }\n\n  /** Set the release envelope for an overtone\n   *  @param {number} otNum - Number of overtone for which to set envelope\n   *  @param {array} newEnv - 2D array representing the new envelope\n   */\n  setOvertoneReleaseEnvelope (otNum, newEnv) {\n    this._voices.forEach(voice => {\n      voice.setOvertoneReleaseEnvelope(otNum, newEnv);\n    });\n    return this;\n  }\n\n  /**\n   * Play a note using the current attack envelope\n   * @param {(number|string)} note - MIDI pitch value or note name (i.e. A0 or F#8)\n   */\n  playNote (note) {\n    var noteNameFormat = /^([a-g]|[A-G])(#|b)?([0-9]|10)$/;\n    var selectedVoice = -1;\n    var freq = -1;\n\n    // check for correct note format and convert to freq\n    if (typeof note === 'number'\n        && note >= 0 && note <= 127) {\n      freq = AudioModuleUtil.midiToFreq(note);\n    } else if (typeof note === 'string'\n               && noteNameFormat.test(note) === true) {\n      note = AudioModuleUtil.noteNameToMidi(note); // convert to MIDI so we can keep track of active note in _busyVoices\n      freq = AudioModuleUtil.midiToFreq(note);\n    }\n\n    // if the correct format for note was received\n    if (freq !== -1) {\n      //pick a voice\n      if (this._availableVoices.length > 0) {\n        selectedVoice = this._availableVoices.shift();\n      } else {\n        selectedVoice = this._busyVoices.shift().voiceNum;\n        this.releaseVoice(selectedVoice);\n      }\n      this._busyVoices.push({ voiceNum: selectedVoice, note: note });\n\n      this.attackVoice(selectedVoice, freq);\n    }\n  }\n\n  /**\n   * Release a currently playing note\n   * @param {(number|string)} note - MIDI pitch value or note name (i.e. A0 or F#8)\n   */\n  releaseNote (note) {\n    var noteNameFormat = /^([a-g]|[A-G])(#|b)?([0-9]|10)$/;\n    var selectedVoice = -1;\n\n    // check for correct note format and convert to freq\n    if (typeof note === 'number'\n        && note >= 0 && note <= 127) {\n    } else if (typeof note === 'string'\n               && noteNameFormat.test(note) === true) {\n      note = AudioModuleUtil.noteNameToMidi(note);\n    } else {\n      note = -1;\n    }\n\n    if (note !== -1) {\n      var selectedBusyNodeIndex = this._busyVoices.findIndex((busyVoice) => {\n        return busyVoice.note === note;\n      });\n\n      if (selectedBusyNodeIndex !== -1) {\n        selectedVoice = this._busyVoices[selectedBusyNodeIndex].voiceNum;\n\n        this._availableVoices.push(selectedVoice);\n        this._busyVoices.splice(selectedBusyNodeIndex, 1);\n      }\n    }\n\n    if (selectedVoice !== -1) {\n      this.releaseVoice(selectedVoice);\n    } else return this;\n  }\n\n  /**\n   * Execute the attack for a given voice with a given frequency\n   **/\n  attackVoice (voiceNum, freq) {\n    this._voices[voiceNum].setFrequency(freq);\n    this._voices[voiceNum].attack();\n  }\n\n  /**\n   * Execute the release for a given voice\n   **/\n  releaseVoice (voiceNum) {\n    this._voices[voiceNum].release();\n  }\n}\n\nexport default AdditiveSynth\n\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/AdditiveSynth.js","import ChannelStrip from './channel-strip';\nimport Envelope from './Envelope';\nimport Overtone from './Overtone';\n\n'use strict';\n\nclass AdditiveSynthVoice {\n  constructor (audioCtx, o) {\n    o = o || {};\n\n    this._audioCtx = audioCtx;\n\n    this._channelStrip = new ChannelStrip(this._audioCtx);\n    this._envelope = new Envelope(this._audioCtx);\n\n    var numOvertones = o.numOvertones || o.numberOfOvertones || 20;\n    this._overtones = [];\n    for (var i = 0; i < numOvertones; i++) {\n      this._overtones.push(new Overtone(this._audioCtx));\n      this._overtones[i].connect(this._envelope.input);\n      this._envelope.connect(this._channelStrip.input);\n      this._overtones[i].gain = 1 / numOvertones;\n    }\n\n    this.output = this._channelStrip.output;\n    this._audioModuleOutput = this.output;\n\n    // this.frequency = o.frequency || o.freq || 440;\n    // this.pan = o.pan || 0; // -1: hard left, 1: hard right\n    // this.gain = o.gain || 1;\n  }\n\n  /* =================== */\n  /* --- Audio setup --- */\n  /* =================== */\n\n  /**\n   * Connect to another AudioNode or AudioModule\n   */\n  connect (destination) {\n    // if destination has an input property, connect to it (destination is an AudioModule)\n    if (typeof destination.input === \"object\") {\n      this.output.connect(destination.input);\n    }\n    // else destination is an AudioNode and can be connected to directly\n    else {\n      this.output.connect(destination);\n    }\n  }\n\n  /**\n   * Disconnect from an AudioNode or AudioModule\n   */\n  disconnect (destination) {\n    // if destination has an input property, disconnect from it (destination is an AudioModule)\n    if (typeof destination.input === \"object\") {\n      this.output.disconnect(destination.input);\n    // else destination is an AudioNode and can be disconnected from directly\n    } else {\n      this.output.disconnect(destination);\n    }\n  }\n\n  /* =========================== */\n  /* --- Getters and setters --- */\n  /* =========================== */\n\n  /** Options */\n  get options () {\n    return {\n      numOvertones: this.numOvertones,\n      frequency: this.frequency,\n      gain: this.gain,\n      pan: this.pan\n    }\n  }\n  set options (o) {\n    o = o || {};\n\n    if (o.numOvertones) this.numOvertones = o.numOvertones;\n    if (o.frequency) this.frequency = o.frequency;\n    if (o.gain) this.gain = o.gain;\n    if (o.pan) this.pan = o.pan;\n\n    return this;\n  }\n  setOptions (o) {\n    o = o || {};\n    this.options = o;\n  }\n\n  /** Number of overtones (including the fundamental) */\n  get numOvertones () {\n    return this._overtones.length;\n  }\n  set numOvertones (newNumOvertones) {\n    if (newNumOvertones > this.numOvertones) {\n      var fundFreq = this.frequency;\n      for (var i = this.numOvertones; i < newNumOvertones && (i + 1) * fundFreq < this._audioCtx.sampleRate / 2; i++) {\n        this._overtones.push(new Overtone(this._audioCtx));\n        this._overtones[i].frequency = (i + 1) * fundFreq;\n        this._overtones[i].gain = 1 / newNumOvertones;\n      }\n    } else if (newNumOvertones < this.numOvertones) {\n      for (var i = this.numOvertones; i > this.newNumOvertones; i--) {\n        this._overtones.pop();\n        this._overtones[i].gain = 1 / newNumOvertones;\n      }\n    }\n    return this;\n  }\n  setNumOvertones (newNumOvertones) {\n    this.numOvertones = newNumOvertones;\n  }\n\n  /** Fundamental frequency */\n  get frequency () {\n    return this._overtones[0].frequency;\n  }\n  set frequency (newFreq) {\n    var freqCeil = this._audioCtx.sampleRate / 2;\n    var numOvertones = this.numOvertones;\n\n    for (var i = this.numOvertones - 1; i >= 0; i--) {\n      if ( (i + 1) * newFreq < freqCeil ) {\n        this._overtones[i].frequency = (i + 1) * newFreq;\n        this._overtones[i].gain = 1 / numOvertones;\n      } else {\n        this._overtones[i].gain = 0;\n      }\n    }\n    return this;\n  }\n  setFrequency (newFreq) {\n    this.frequency = newFreq;\n  }\n\n  /** Gain */\n  get gain () {\n    return this._channelStrip.outputGain;\n  }\n  set gain (newGain) {\n    this._channelStrip.outputGain = newGain;\n    return this;\n  }\n  setGain (newGain) {\n    this.gain = newGain;\n  }\n\n  /** Pan */\n  get pan () {\n    return this._channelStrip.pan;\n  }\n  set pan (newPan) {\n    this._channelStrip.pan = newPan;\n    return this;\n  }\n  setPan (newPan) {\n    this.pan = newPan;\n  }\n\n  /** Get overtone amplitude\n   * @param {number} otNum - Overtone number (0 for the fundamental).\n   */\n  getOvertoneAmplitude (otNum) {\n    return this._overtones[otNum].amplitude;\n  }\n  /** Set overtone amplitude\n   * @param {number} otNum - Overtone number (0 for the fundamental).\n   * @param {number} newAmp - New amplitude (useful range: 0.0 - 1.0).\n   */\n  setOvertoneAmplitude (otNum, newAmp) {\n    const _this = this;\n\n    try {\n      if (this._overtones[otNum] !== undefined) {\n        this._overtones[otNum].amplitude = newAmp;\n      } else {\n        throw (\"Illegal overtone number\");\n      }\n    } catch (e) {\n      console.log(e);\n    }\n\n    return this;\n  }\n\n  /** Set overtone amplitudes by a formula function\n   * @param {function} func - The function specifying the amplitude of each overtone number n.\n   */\n  setOvertoneAmplitudesByFormula (func) {\n    for (var n = this.numOvertones - 1; n >= 0; n--) {\n      this.setOvertoneAmplitude(n, func(n + 1));\n    }\n    return this;\n  }\n\n  /** Attack envelope */\n  get attackEnvelope () {\n    return this._envelope.attackEnvelope;\n  }\n  set attackEnvelope (newEnv) {\n    this._envelope.attackEnvelope = newEnv;\n    return this;\n  }\n  setAttackEnvelope (newEnv) {\n    this.attackEnvelope = newEnv;\n  }\n\n  /** Release envelope */\n  get releaseEnvelope () {\n    return this._envelope.releaseEnvelope;\n  }\n  set releaseEnvelope (newEnv) {\n    this._envelope.releaseEnvelope = newEnv;\n    return this;\n  }\n  setReleaseEnvelope (newEnv) {\n    this.releaseEnvelope = newEnv;\n  }\n\n  /** Set the attack envelope for an overtone\n   *  @param {number} otNum - Number of overtone for which to set envelope\n   *  @param {array} newEnv - 2D array representing the new envelope\n   */\n  setOvertoneAttackEnvelope (otNum, newEnv) {\n    this._overtones[otNum].attackEnvelope = newEnv;\n    return this;\n  }\n\n  /** Set the release envelope for an overtone\n   *  @param {number} otNum - Number of overtone for which to set envelope\n   *  @param {array} newEnv - 2D array representing the new envelope\n   */\n  setOvertoneReleaseEnvelope (otNum, newEnv) {\n    this._overtones[otNum].releaseEnvelope = newEnv;\n    return this;\n  }\n\n  /* ========================= */\n  /* --- Envelope controls --- */\n  /* ========================= */\n\n  /**\n   * Execute the attack envelope.\n   * Individual envelopes are executed for each overtone, and the envelope for this voice is executed.\n   */\n  attack (o) {\n    if (o) this.options = o;\n\n    for (var i = this.numOvertones - 1; i >= 0; i--) {\n      this._overtones[i].attack();\n    }\n    this._envelope.attack();\n  }\n\n  /**\n   * Execute the release envelope\n   * Individual envelopes are executed for each overtone, and the envelope for this voice is executed.\n   */\n  release () {\n    for (var i = this.numOvertones - 1; i >= 0; i--) {\n      this._overtones[i].release();\n    }\n    this._envelope.release();\n  }\n}\n\nexport default AdditiveSynthVoice\n\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/AdditiveSynthVoice.js","/**\n * Shim the WebAudio connect and disconnect methods to allow WebAudio nodes to connect to Audio Modules.\n * @param {AudioContext} audioCtx - The Audio Context to shim.\n */\nfunction shimWebAudioConnect(audioCtx) {\n  let audioNodePrototype = Object.getPrototypeOf(Object.getPrototypeOf(audioCtx.createGain()));\n\n  // keep a reference to the original connect and disconnect methods as webAudioConnect and webAudioDisconnect\n  audioNodePrototype.webAudioConnect = audioNodePrototype.connect;\n  audioNodePrototype.webAudioDisconnect = audioNodePrototype.disconnect;\n\n  // if the destination object has an 'input' property, it is an Audio Module - connect to 'input'\n  // else it is an AudioNode - connect directly\n  audioNodePrototype.connect = function (destination, outputIndex, inputIndex) {\n    if (destination.isAudioModule === true) {\n      this.webAudioConnect(destination.input, outputIndex, inputIndex);\n    } else {\n      this.webAudioConnect(destination, outputIndex, inputIndex);\n    }\n  };\n\n  audioNodePrototype.disconnect = function (destination, outputIndex, inputIndex) {\n    if (destination.isAudioModule === true) {\n      this.webAudioDisconnect(destination.input, outputIndex, inputIndex);\n    } else {\n      this.webAudioDisconnect(destination, outputIndex, inputIndex);\n    }\n  };\n\n  // flag marking the webAudioConnect feature as shimmed\n  audioCtx.isWebAudioConnectShimmed = true;\n}\n\nexport default shimWebAudioConnect;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/core/shim-web-audio-connect.js","import AudioModule from \"./core/audio-module\";\nimport ChannelStrip from './channel-strip';\nimport Envelope from './Envelope';\n\n'use strict';\n\n/**\n * \n */\nclass Oscillator extends AudioModule {\n  constructor (audioCtx, o) {\n    super(audioCtx)\n\n    o = o || {};\n\n    this._audioCtx = audioCtx;\n\n    this._oscillator = this._audioCtx.createOscillator();\n    this._envelope = new Envelope(this._audioCtx);\n    this._channelStrip = new ChannelStrip(this._audioCtx);\n\n    this._oscillator.connect(this._envelope.input);\n    this._envelope.connect(this._channelStrip.input);\n\n    this._oscillator.start();\n\n    this.output = this._channelStrip.output;\n    this._audioModuleOutput = this.output;\n\n    // this.frequency = o.frequency || 440;\n    // this.pan = o.pan || 1;\n    // this.amplitude = o.amplitude || 1;\n  }\n\n  /* =========================== */\n  /* --- Getters and setters --- */\n  /* =========================== */\n\n  /** Oscillator frequency */\n  get frequency () {\n    return this._oscillator.frequency;\n  }\n  set frequency (newFreq) {\n    var curTime = this._audioCtx.currentTime;\n    this._oscillator.frequency.value = newFreq;\n    return this;\n  }\n\n  /** Pan */\n  get pan () {\n    return this._channelStrip.pan;\n  }\n  set pan (newPan) {\n    this._channelStrip.pan = newPan;\n    return this;\n  }\n\n  /** Overtone amplitude */\n  get amplitude () {\n    return this._channelStrip.inputGain;\n  }\n  set amplitude (newAmp) {\n    this._channelStrip.inputGain = newAmp;\n    return this;\n  }\n\n  /** Overtone output gain (used for balancing volume when several overtones are used in a voice) */\n  get gain () {\n    return this._channelStrip.outputGain;\n  }\n  set gain (newGain) {\n    this._channelStrip.outputGain = newGain;\n    return this;\n  }\n\n  /** Attack envelope */\n  get attackEnvelope () {\n    return this._envelope.attackEnvelope;\n  }\n  set attackEnvelope (newEnv) {\n    this._envelope.attackEnvelope = newEnv;\n    return this;\n  }\n\n  /** Release envelope */\n  get releaseEnvelope () {\n    return this._envelope.releaseEnvelope;\n  }\n  set releaseEnvelope (newEnv) {\n    this._envelope.releaseEnvelope = newEnv;\n    return this;\n  }\n\n  /* =================== */\n  /* --- Audio setup --- */\n  /* =================== */\n\n  /**\n   * Connect to another AudioNode or AudioModule\n   */\n  connect (destination) {\n    // if destination has an input property, connect to it (destination is an AudioModule)\n    if (typeof destination.input === \"object\") {\n      this.output.connect(destination.input);\n    }\n    // else destination is an AudioNode and can be connected to directly\n    else {\n      this.output.connect(destination);\n    }\n  }\n\n  /**\n   * Disconnect from an AudioNode or AudioModule\n   */\n  disconnect (destination) {\n    // if destination has an input property, disconnect from it (destination is an AudioModule)\n    if (typeof destination.input === \"object\") {\n      this.output.disconnect(destination.input);\n    // else destination is an AudioNode and can be disconnected from directly\n    } else {\n      this.output.disconnect(destination);\n    }\n  }\n\n  /* ========================= */\n  /* --- Envelope controls --- */\n  /* ========================= */\n\n  /** Execute the attack envelope */\n  attack () {\n    this._envelope.attack();\n  }\n\n  /** Execute the release envelope */\n  release () {\n    this._envelope.release();\n  }\n}\n\nexport default Oscillator;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/Overtone.js","import AudioModule from \"./core/audio-module\"; \n\n'use strict';\n\nclass StereoFeedbackDelay extends AudioModule {\n\n  /**\n   * Stereo delay with feedback\n   * @param {object} [o] - Options\n   * @param {number} [o.delayTimeL]\n   * @param {number} [o.delayTimeR]\n   * @param {number} [o.feedbackL]\n   * @param {number} [o.feedbackR]\n   * @param {number} [o.crossfeedL]\n   * @param {number} [o.crossfeedR]\n   * @param {number} [o.dryMixL]\n   * @param {number} [o.dryMixR]\n   * @param {number} [o.wetMixL]\n   * @param {number} [o.wetMixR]\n   */\n  constructor (audioCtx, o) {\n\n    try {\n      super(audioCtx);\n\n      // shim StereoPanner if it's not implemented\n      if (typeof this._audioCtx.createStereoPanner === 'undefined') {\n        this._audioCtx.createStereoPanner = function () { return new StereoPannerShim(this)};\n      }\n\n      o = o || {};    \n      this._audioCtx = audioCtx; \n      this._maxDelayTime = o.maxDelayTime || 10;\n\n      this._input = this._audioCtx.createGain();\n      this._channelSplitter = this._audioCtx.createChannelSplitter(2);\n      this._dryMixL = this._audioCtx.createGain();\n      this._dryMixR = this._audioCtx.createGain();\n      this._wetMixL = this._audioCtx.createGain();\n      this._wetMixR = this._audioCtx.createGain();\n      this._delayL = this._audioCtx.createDelay(this._maxDelayTime);\n      this._delayR = this._audioCtx.createDelay(this._maxDelayTime);\n      this._feedbackL = this._audioCtx.createGain();\n      this._feedbackR = this._audioCtx.createGain();\n      this._crossfeedL = this._audioCtx.createGain();\n      this._crossfeedR = this._audioCtx.createGain();\n      this._channelMerger = this._audioCtx.createChannelMerger(2);\n      this._output = this._audioCtx.createGain();\n  \n      this._connectAudioNodes();\n      this._setAudioDefaults(o);\n  \n      this.input = this._input;\n      this.output = this._output;\n\n    } catch (err) {\n\n      console.error(err);\n      throw new Error(\"Failed to create StereoFeedbackDelay audio module.\");\n    }\n  }\n\n  _connectAudioNodes () {\n    this._input.connect(this._channelSplitter);\n    this._channelSplitter.connect(this._dryMixL, 0);\n    this._channelSplitter.connect(this._dryMixR, 1);\n    this._channelSplitter.connect(this._delayL, 0);\n    this._channelSplitter.connect(this._delayR, 1);\n    this._delayL.connect(this._feedbackL);\n    this._delayR.connect(this._feedbackR);\n    this._feedbackL.connect(this._delayL);\n    this._feedbackR.connect(this._delayR);\n    this._delayL.connect(this._crossfeedR);\n    this._delayR.connect(this._crossfeedL);\n    this._crossfeedL.connect(this._delayL);\n    this._crossfeedR.connect(this._delayR);\n    this._delayL.connect(this._wetMixL);\n    this._delayR.connect(this._wetMixR);\n    this._dryMixL.connect(this._channelMerger, 0, 0);\n    this._dryMixR.connect(this._channelMerger, 0, 1);\n    this._wetMixL.connect(this._channelMerger, 0, 0);\n    this._wetMixR.connect(this._channelMerger, 0, 1);\n    this._channelMerger.connect(this._output);\n\n    return this;\n  }\n\n  _setAudioDefaults (o) {\n    o = o || {};\n\n    this._input.gain.value = 1;\n    this._delayL.delayTime.value = o.delayTimeL || 0.5;\n    this._delayR.delayTime.value = o.delayTimeR || 0.5;\n    this._dryMixL.gain.value = o.dryMixL || 1;\n    this._dryMixR.gain.value = o.dryMixR || 1;\n    this._wetMixL.gain.value = o.wetMixL || 0.2;\n    this._wetMixR.gain.value = o.wetMixR || 0.2;\n    this._feedbackL.gain.value = o.feedbackL || 0.1;\n    this._feedbackR.gain.value = o.feedbackR || 0.1;\n    this._crossfeedL.gain.value = o.crossfeedL || 0;\n    this._crossfeedR.gain.value = o.crossfeedR || 0;\n    this._output.gain.value = 1;\n\n    return this;\n  }\n\n  /**\n   * Connect to another AudioNode or AudioModule\n   */\n  connect (destination) {\n    // if destination has an input property, connect to it (destination is an AudioModule)\n    if (typeof destination.input === \"object\") {\n      this.output.connect(destination.input);\n    }\n    // else destination is an AudioNode and can be connected to directly\n    else {\n      this.output.connect(destination);\n    }\n  }\n\n  /**\n   * Disconnect from an AudioNode or AudioModule\n   */\n  disconnect (destination) {\n    // if destination has an input property, disconnect from it (destination is an AudioModule)\n    if (typeof destination.input === \"object\") {\n      this.output.disconnect(destination.input);\n    // else destination is an AudioNode and can be disconnected from directly\n    } else {\n      this.output.disconnect(destination);\n    }\n  }\n\n  /* =========================== */\n  /* --- Getters and setters --- */\n  /* =========================== */\n\n  /** Delay time left */\n  get delayTimeL () {\n    return this._delayL.delayTime;\n  }\n  set delayTimeL (time) {\n    this._delayL.delayTime.value = time;\n    return this;\n  }\n\n  /** Delay time right */\n  get delayTimeR () {\n    return this._delayR.delayTime;\n  }\n  set delayTimeR (time) {\n    this._delayR.delayTime.value = time;\n    return this;\n  }\n\n  /** Feedback L */\n  get feedbackL () {\n    return this._feedbackL.gain;\n  }\n  set feedbackL (gain) {\n    this._feedbackL.gain.value = gain;\n    return this;\n  }\n\n  /** Feedback R */\n  get feedbackR () {\n    return this._feedbackR.gain;\n  }\n  set feedbackR (gain) {\n    this._feedbackR.gain.value = gain;\n    return this;\n  }\n\n  /** Cross-feed L */\n  get crossfeedL () {\n    return this._crossfeedL.gain;\n  }\n  set crossfeedL (gain) {\n    this._crossfeedL.gain.value = gain;\n    return this;\n  }\n\n  /** Cross-feed R */\n  get crossfeedR () {\n    return this._crossfeedR.gain;\n  }\n  set crossfeedR (gain) {\n    this._crossfeedR.gain.value = gain;\n    return this;\n  }\n\n  /** Dry mix L */\n  get dryMixL () {\n    return this._dryMixL.gain;\n  }\n  set dryMixL (gain) {\n    this._dryMixL.gain.value = gain;\n    return this;\n  }\n\n  /** Dry mix R */\n  get dryMixR () {\n    return this._dryMixR.gain;\n  }\n  set dryMixR (gain) {\n    this._dryMixR.gain.value = gain;\n    return this;\n  }\n\n  /** Wet mix L */\n  get wetMixL () {\n    return this._wetMixL.gain;\n  }\n  set wetMixL (gain) {\n    this._wetMixL.gain.value = gain;\n    return this;\n  }\n\n  /** Wet mix R */\n  get wetMixR () {\n    return this._wetMixR.gain;\n  }\n  set wetMixR (gain) {\n    this._wetMixR.gain.value = gain;\n    return this;\n  }\n}\n\nexport default StereoFeedbackDelay;\n\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/StereoFeedbackDelay.js","import AudioModule from \"audio_modules/core/audio-module\";\nimport verifyAudioContextFeatures from \"audio_modules/core/verify-audio-context-features\";\n\n'use strict';\n\n/** \n * Class representing a Stereo Panner Shim.\n * This shim provides an implementation of StereoPannerNode for WebAudio implementations that\n * do not provide it.\n * @class\n */\nclass StereoPannerShim extends AudioModule {\n\n  /**\n   * @constructor\n   * @param {AudioContext} audioCtx - Audio Context in which this module participates. \n   */\n  constructor(audioCtx) {\n    super(audioCtx);\n\n    const _this = this;\n\n    console.log(\"webAudioKonnect: \", this.audioCtx.createGain().webAudioConnect);\n\n    // generate a setter for the pan value\n    (function generatePanSetter (val) {\n      _this.pan = new Number(val);\n\n      Object.defineProperty(_this.pan, \"value\", {\n        set: function (newVal) {\n          newVal = (newVal > 1) ? 1 : newVal;\n          newVal = (newVal < -1) ? -1 : newVal;\n\n          _this.audioComponents.gainL.gain.value = -(newVal / 2) + 0.5;\n          _this.audioComponents.gainR.gain.value = (newVal / 2) + 0.5;\n\n          generatePanSetter(newVal);\n        }\n      });\n    }());\n  }\n\n  /* ============================================================================================= */\n  /*  INITIALIZATION METHODS\n  /* ============================================================================================= */\n  \n  /**\n   * Initialize audio components and their connections.\n   * @private @override\n   */\n  _initAudioComponents() {\n    const _this = this;\n\n    try {\n\n      verifyAudioContextFeatures(_this.audioCtx, [\"Gain\", \"ChannelMerger\"]);\n\n      this.audioComponents = {\n        gainL: _this.audioCtx.createGain(),  \n        gainR: _this.audioCtx.createGain(),\n        merger: _this.audioCtx.createChannelMerger(2)\n      };\n\n      this.input.connect(this.audioComponents.gainL);\n      this.input.connect(this.audioComponents.gainR);\n      this.audioComponents.gainL.connect(this.audioComponents.merger, 0, 0);\n      this.audioComponents.gainR.connect(this.audioComponents.merger, 0, 1);\n      this.audioComponents.merger.connect(this.output);\n    \n      console.log(\"initialized\");      \n    } catch(err) {\n      console.error(err);\n    }\n  }\n}\n\nexport default StereoPannerShim;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/stereo-panner-shim.js"],"sourceRoot":""}