{"version":3,"sources":["webpack:///webpack/bootstrap 89281f38334d88d5d53a","webpack:///./src/util/constraint.js","webpack:///./src/audio_modules/core/audio-module.js","webpack:///./src/util/constraint-def.js","webpack:///./src/ui/core/widget.js","webpack:///./src/audio_modules/core/verify-audio-context-features.js","webpack:///./src/audio_modules/channel-strip.js","webpack:///./src/audio_modules/core/util.js","webpack:///./src/audio_modules/envelope.js","webpack:///./src/util/util-math.js","webpack:///./src/audio_modules/core/shim-web-audio-connect.js","webpack:///./src/audio_modules/additive-synth-voice.js","webpack:///./src/audio_modules/oscillator-voice.js","webpack:///./src/ui/core/widget-mixin-svgns.js","webpack:///./src/ui/core/widget-mixin-state.js","webpack:///./src/ui/core/widget-mixin-options.js","webpack:///./src/ui/core/widget-mixin-observer.js","webpack:///./src/ui/dial.js","webpack:///./src/audio_modules/core/audio-module-manager.js","webpack:///./src/audio_modules/core/audio-patch.js","webpack:///./src/audio_modules/AdditiveSynth.js","webpack:///./src/audio_modules/core/audio-module-options-mixin.js","webpack:///./src/audio_modules/StereoFeedbackDelay.js","webpack:///./src/audio_modules/stereo-panner-shim.js","webpack:///./test/manual_test/audio_modules/stereo-panner-shim.js"],"names":["Constraint","spec","min","max","enum","transform","AudioModule","audioCtx","numInputs","numOutputs","isAudioModule","isWebAudioConnectShimmed","input","createGain","output","audioComponents","_initOptions","_initAudioComponents","_initAudioParams","destination","outputIndex","inputIndex","connect","disconnect","Object","assign","prototype","ConstraintSpec","specDefObj","constraintMap","_parseMap","targetObj","_this","forEach","_constrainBranch","keyBranch","target","constraint","key","undefined","Math","Array","find","c","cMap","push","parentBranch","map","x","keys","keyIdx","newKeyBranch","curKey","length","arrFlag","i","keyBranchSlice","slice","j","_applyConstraint","Widget","container","o","document","querySelector","Element","Error","svg","createElementNS","SVG_NS","appendChild","setAttribute","getBoundingClientRect","width","height","svgEls","handlers","state","stateConstraints","observers","_initStateConstraints","_initState","_initSvgEls","_initHandlers","values","appendSvgEls","svgEl","child","arrEl","newVal","newState","_getLeft","y","_getTop","top","left","VerifyAudioContextFeatures","features","feature","createAnalyser","createBuffer","createBufferSource","createBiquadFilter","createChannelMerger","createChannelSplitter","createConvolver","createDelay","createDynamicsCompressor","createIIRFilter","createOscillator","createPannerr","createStereoPanner","StereoPannerShim","console","warn","ChannelStrip","inputGain","panner","outputGain","err","error","gain","pan","value","AudioModuleUtil","midiToFreq","midiPitch","a4tuning","freq","pow","midiVelToGain","vel","noteNameToMidi","noteName","noteNameFormat","test","log","capture","exec","note","accidental","octave","noteFundamentalMap","noteFundamental","noteNameToFreq","Envelope","envGain","attackEnvelope","releaseEnvelope","_normalizeAttackEnvelope","_normalizeReleaseEnvelope","newEnv","env","a","t","cancelScheduledValues","currentTime","setValueAtTime","startTime","linearRampToValueAtTime","Promise","resolve","reject","window","setTimeout","point","MathUtil","getPrecision","val","decStr","split","round","precision","factor","quantize","q","qVal","abs","shimWebAudioConnect","audioNodePrototype","getPrototypeOf","webAudioConnect","webAudioDisconnect","AdditiveSynthVoice","overtones","ot","numOvertones","envelope","channelStrip","glide","getOutputGain","setOutputGain","getPan","setPan","getFrequency","otIdx","setFrequency","getAttackEnvelope","setAttackEnvelope","getReleaseEnvelope","taget","setReleaseEnvelope","setGain","gainArr","setOvertoneGain","attack","release","pitch","OscillatorVoice","oscillator","setInputGain","start","frequency","type","real","imag","constructor","name","wave","createPeriodicWave","setPeriodicWave","setWaveformType","osc","WidgetStateMixin","getState","setInternalState","isChanged","hasOwnProperty","constrain","_update","setState","_notifyObservers","WidgetOptionsMixin","getOptions","setOptions","WidgetObserverMixin","addObserver","newObserver","observer","removeObserver","targetObserver","idx","splice","addListener","newListener","removeListener","targetListener","getVal","Dial","stepPrecision","step","minVal","maxVal","needleColor","activeColor","mouseSensitivity","num","bgArc","activeArc","needle","_calcSvgArcPath","_calcNeedleCenter","_calcDialRadius","PI","_calcArcStrokeWidth","_calcNeedleEnd","_calcNeedleWidth","_appendSvgEls","y0","yD","touch","ev","clientY","addEventListener","move","preventDefault","_calcMovePrecision","removeEventListener","_calcNeedleAngle","radius","_getWidth","_getHeight","trunc","sin","cos","cx","cy","r","startAngle","endAngle","x1","y1","x2","y2","largeArc","sweep","join","AudioModuleManager","AUDIO_CTX","AudioContext","initObj","moduleMapObj","modules","audioModuleSpec","audioModuleName","newAudioModule","toLowerCase","replace","createAdditiveSynth","createAdditiveSynthVoice","createChannelStrip","createDestination","createOscillatorVoice","createStereoFeedbackDelay","connections","isArray","connectionPath","currentModule","nextModule","e","AudioPatch","moduleMap","audioModuleManager","MODULE_MAP","AUDIO_MODULE_MANAGER","getAudioContext","AdditiveSynth","_audioCtx","numVoices","_numOvertones","_voices","_availableVoices","_busyVoices","_channelStrip","_audioModuleOutput","newNumVoices","newNumOvertones","newGain","newPan","voiceNum","otNum","getOvertoneAmplitude","newAmp","setOvertoneAmplitude","voice","setOvertoneAttackEnvelope","setOvertoneReleaseEnvelope","selectedVoice","shift","releaseVoice","attackVoice","selectedBusyNodeIndex","findIndex","busyVoice","deleteAvailableVoices","numVoicesToDelete","voiceToDelete","deleteBusyVoices","numBusyVoicesToDelete","numAvailableVoices","AudioModuleOptionsMixin","StereoFeedbackDelay","_maxDelayTime","maxDelayTime","_input","_channelSplitter","_dryMixL","_dryMixR","_wetMixL","_wetMixR","_delayL","_delayR","_feedbackL","_feedbackR","_crossfeedL","_crossfeedR","_channelMerger","_output","_connectAudioNodes","_setAudioDefaults","delayTime","delayTimeL","delayTimeR","dryMixL","dryMixR","wetMixL","wetMixR","feedbackL","feedbackR","crossfeedL","crossfeedR","time","generatePanSetter","Number","defineProperty","set","gainL","gainR","merger","DEST","stereoPanner","panDial","getElementById","checked"],"mappings":"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","file":"/test/manual_test/audio_modules/stereo-panner-shim-bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 48);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 89281f38334d88d5d53a","/**\n * @class\n * Constraint object represents constraints on a value.\n * Instances of Constraint are used as leaves on a ConstraintSpec definition.\n * A ConstraintSpec useses Constraints to apply a constraint to leaves of an\n * arbitrarily nested object, whose leaves represent values that may be constrained.\n */\nclass Constraint {\n\n  /**\n   * @constructor\n   * @param {object} [spec] - Spec specifying the constraints.\n   * @param {number} [spec.min] - Minimum value.\n   * @param {number} [spec.max] - Maximum value.\n   * @param {array} [spec.enum] - Array of possible enumerable values.\n   * @param {function} [spec.transform] - A transformation function to apply to the value.\n   */\n  constructor(spec) {\n    spec = spec || {};\n\n    this.min = spec.min;\n    this.max = spec.max;\n    this.enum = spec.enum;\n    this.transform = spec.transform;\n  }\n}\n\nexport default Constraint;\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/constraint.js","import AudioModuleUtil from \"./util\";\nimport shimWebAudioConnect from \"./shim-web-audio-connect\";\nimport AudioModuleOptionsMixin from \"./audio-module-options-mixin\";\n\n/**\n * Base class representing an Audio Module.\n * An AudioModule wraps a set of AudioNodes to provide a higher-order component that can itself be\n * used as an AudioNode.\n * @abstract @class\n */\nclass AudioModule {\n\n  /**\n   * @constructor\n   * @param {AudioContext} - The Audio Context that the module participates in.\n   * @param {number} numInputs - Number of inputs.\n   * @param {number} numOutputs - Number of outputs.\n   */\n  constructor(audioCtx, numInputs, numOutputs) {\n    this.audioCtx = audioCtx;\n\n    // marker boolean to distinguish current object from an AudioNode\n    this.isAudioModule = true;\n\n    // shim the connect method for the Audio Context so that AudioNodes can connect to AudioModules\n    if (this.audioCtx.isWebAudioConnectShimmed !== true) {\n      shimWebAudioConnect(this.audioCtx);\n    }\n\n    this.input = audioCtx.createGain();\n    this.output = audioCtx.createGain();\n\n    this.audioComponents = {};\n\n    this._initOptions();\n    this._initAudioComponents();\n    this._initAudioParams();\n  }\n\n  /* ============================================================================================= */\n  /*  INITIALIZATION METHODS\n  /* ============================================================================================= */\n\n  /**\n   * Initialize audio components and their connections.\n   * @private @abstract\n   */\n  _initAudioComponents() {}\n\n  /**\n   * Initialize and expose Audio Params.\n   * @private @abstract\n   */\n  _initAudioParams() {}\n\n  /**\n   * Initialize the options.\n   * @private @abstract\n   */\n  _initOptions() {}\n\n  /* ============================================================================================ */\n  /*  PUBLIC API\n  /* ============================================================================================ */\n  \n  /**\n   * Returns the AudioContext that the Audio Module is participating in.\n   * @returns {AudioContext} - the AudioContext that the Audio Module is participating in. \n   */\n  getContext() {\n    return this.audioCtx;\n  }\n  \n  /**\n   * Connect to another AudioNode or AudioModule\n   * @public\n   * @param {AudioNode | AudioModule} destination - AudioNode or AudioModule to connect to.\n   * @param {number} outputIndex - Channel of the output to connect.\n   * @param {number} outputIndex - Channel of the destintation to connect to. \n   */\n  connect(destination, outputIndex, inputIndex) {\n    // if destination has an input property, connect to it (destination is an AudioModule)\n    if (destination.isAudioModule === true) {\n      this.output.connect(destination.input);\n    }\n    // else destination is an AudioNode and can be connected to directly\n    else {\n      this.output.connect(destination);\n    }\n  }\n\n  /**\n   * Disconnect from an AudioNode or AudioModule\n   * @param {AudioNode | AudioModule} destination - AudioNode or AudioModule to disconnect from.\n   * @param {number} outputIndex - Channel of the output to disconnect.\n   * @param {number} outputIndex - Channel of the destintation to disconnect from. \n   */\n  disconnect(destination, outputIndex, inputIndex) {\n    // if destination has an input property, disconnect from it (destination is an AudioModule)\n    if (destination.isAudioModule === true) {\n      this.output.disconnect(destination.input);\n    // else destination is an AudioNode and can be disconnected from directly\n    } else {\n      this.output.disconnect(destination);\n    }\n  }\n}\n\nObject.assign(AudioModule.prototype, AudioModuleOptionsMixin);\n\nexport default AudioModule;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/core/audio-module.js","import Constraint from \"./constraint\";\n\n/**\n * ConstraintSpec is used to apply a constraining function to a state object of arbitrary nestedness,\n * whose leaves are values that need to be constrained (i.e. to min or max values).\n * In order for ConstraintSpec to work properly, it's constructor must be given an object that\n * exactly mirrors the nested structure of the object to be constrained, with the leaves\n * containing instances of the Constraint class. Additional requirements (i.e. how to deal with nested arrays)\n * are outlined below.\n * TODO: expand explanation\n *\n * @class\n */\nclass ConstraintSpec {\n\n  /**\n   * @constructor\n   * @param {object} specDefObj - The constraint spec definition object, which defines the nesting\n   *                              structure of the objects that need to be constrained. The leaves\n   *                              of this specDef object must be objects of type Constraint, which\n   *                              act as the constraint definitions for each leaf.\n   */\n  constructor(specDefObj) {\n    this.constraintMap = [[]];\n    this._parseMap(specDefObj, this.constraintMap[0], this.constraintMap);\n  }\n\n  /**\n   * Check a constraint map for constraint specs and apply them to obj.\n   * Note: will not mutate the original object. New value is returned.\n   * @public\n   * @param {object} targetObj - The state object to check\n   * @return {number | string | object | array} val - The constrained value.\n   */\n  constrain(targetObj) {\n    const _this = this;\n    _this.constraintMap.forEach(keyBranch => {\n      _this._constrainBranch(targetObj, keyBranch);\n    });\n  }\n\n  /**\n   * Apply a constraint.\n   * @private\n   * @param {object} target - The target object to constrain\n   * @param {Constraint} constraint - The constraint object to use.\n   * @param {symbol} key - The key to use to access the constraint.\n   * @return {number | string | object | array} val - The constrained value.\n   */\n  _applyConstraint(target, constraint, key) {\n    if (constraint.min !== undefined) {\n      target[key] = Math.max(target[key], constraint.min);\n    }\n    if (constraint.max !== undefined) {\n      target[key] = Math.min(target[key], constraint.max);\n    }\n    if (constraint.enum !== undefined && constraint.enum instanceof Array) {\n      target[key] = (constraint.enum.find(target[key]) !== undefined) ? target[key] : constraint.enum[0];\n    }\n    if (constraint.transform !== undefined && typeof constraint.transform === \"function\") {\n      target[key] = constraint.transform(target[key]);\n    }\n\n    return target;\n  }\n\n  /**\n   * Parse a constraint map\n   * @private\n   * @param {object} c - The map object currently being examined.\n   *                     At the top level, this would be the whole map.\n   *                     At the terminal level, this would be an instance of Constraint object.\n   * @param {array} keyBranch - An array of keys that will specify how to get to each Constraint.\n   *                            The last element in this array will be the constraint itself.\n   * @param {array} cMap - An mutable array of key branches.\n   */\n  _parseMap(c, keyBranch, cMap) {\n    const _this = this;\n\n    if (c instanceof Array) {\n      /* if c is an array, add \"_arr_\" to the current map, and examine the first element.\n       * all elements in an array are required to have identical structure, so examining\n       * the first one is enough.\n       */\n      keyBranch.push(\"_arr_\");\n      _this._parseMap(c[0], keyBranch, cMap);\n    } else if (c instanceof Object && !(c instanceof Constraint)) {\n      // keep a copy of the parent branch to create new branches from\n      let parentBranch = keyBranch.map(x=>x);\n\n      // create new branch for each key after the first key using the parentBranch clone\n      Object.keys(c).forEach((key, keyIdx) => {\n        if (keyIdx === 0) {\n          keyBranch.push(key);\n          _this._parseMap(c[key], keyBranch, cMap);\n        } else {\n          let newKeyBranch = parentBranch.map(x=>x);\n          cMap.push(newKeyBranch);\n          newKeyBranch.push(key);\n          _this._parseMap(c[key], newKeyBranch, cMap);\n        }\n      });\n    } else if (c instanceof Constraint) {\n\n      // this will be the last element in the branch - the Constraint object itself\n      keyBranch.push(c);\n    }\n  }\n\n  /**\n   * Apply constraints to one branch of the constraint map.\n   * @private\n   * @param {object} targetObj - The state object to apply the constraint to\n   * @param {object} defObj - The constraint definition object to use.\n   * @param {array} keyBranch - An array of keys representing a path to a constraint object.\n   */\n  _constrainBranch(targetObj, keyBranch) {\n    const _this = this;\n\n    let curKey;\n    let constraint = keyBranch[keyBranch.length - 1];\n    let arrFlag = false;\n\n    /* Drill into targetObj and defObj following keyBranch keys\n     * We go to length - 2, because the next-to-last element might be an\n     * array, and the last element is the Constraint object itself.\n     */\n    for (let i = 0; i < keyBranch.length - 2 && !arrFlag; ++i) {\n      curKey = keyBranch[i];\n\n      // if we encounter an array, drill into each corresponding arry element in targetObj\n      if (curKey === \"_arr_\") {\n        arrFlag = true;\n\n        let keyBranchSlice = keyBranch.slice(i + 1, keyBranch.length);\n\n        for (let j = 0; j < targetObj.length; ++j) {\n          _this._constrainBranch(targetObj[j], keyBranchSlice);\n        }\n      } else {\n        targetObj = targetObj[curKey];\n      }\n    }\n\n    // if arrFlag is set, we've encountered an array somewhere other than on the leaves\n    // in this case we don't need to operate on it\n    if (!arrFlag) {\n      // Apply the constraints\n      curKey = keyBranch[keyBranch.length - 2];\n\n      if (curKey === \"_arr_\") {\n        for (let i = 0; i < targetObj.length; ++i) {\n          _this._applyConstraint(targetObj, constraint, i);\n        }\n      } else {\n        _this._applyConstraint(targetObj, constraint, curKey);\n      }\n    }\n  }\n}\n\nexport default ConstraintSpec;\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/constraint-def.js","import WidgetSvgNsMixin from \"./widget-mixin-svgns\";\nimport WidgetStateMixin from \"./widget-mixin-state\";\nimport WidgetOptionsMixin from \"./widget-mixin-options\";\nimport WidgetObserverMixin from \"./widget-mixin-observer\";\n\n'use strict';\n\n/**\n * Abstract base class representing an SVG widget that can be placed inside a DOM container.\n * @class\n * @abstract\n */\nclass Widget {\n\n  /**\n   * @constructor\n   * @mixes WidgetSvgNsMixin\n   * @mixes WidgetStateMixin\n   * @mixes WidgetOptionsMixin\n   * @mixes WidgetObserverMixin\n   * @param {DOM element | string} container - DOM element that will contain the widget,\n   *                                           or string passed to querySelector to find\n   *                                           said DOM element.\n   * @param {object=} o - Options.\n   */\n  constructor(container, o) {\n    if (typeof container === \"string\") {\n      container = document.querySelector(container);\n    }\n\n    if (container === undefined || !(container instanceof Element)) {\n      throw new Error(\"widget requires a DOM element specifying its container as the first argument\");\n    }\n\n    this.container = container;\n\n    o = o || {};\n\n    this.svg = document.createElementNS(this.SVG_NS, \"svg\");\n    this.container.appendChild(this.svg);\n    this.svg.setAttribute(\"width\", this.container.getBoundingClientRect().width);\n    this.svg.setAttribute(\"height\", this.container.getBoundingClientRect().height);\n\n    /* Manifest of containers and namespaces */\n    this.o = {};                 // options namespace\n    this.svgEls = {};            // svg element namespace\n    this.handlers = {};          // mouse and touch event handler namespace\n    this.state = {};             // state namespace\n    this.stateConstraints = {};  // state constraints namespace\n    this.observers = [];         // observer callback container\n\n    this._initOptions(o);\n    this._initStateConstraints();\n    this._initState();\n    this._initSvgEls();\n    this._initHandlers();\n  }\n\n  /**\n   * Initialize the options\n   * @abstract\n   * @protected\n   */\n  _initOptions(o) {}\n\n  /**\n   * Initialize state constraints\n   * @abstract\n   * @protected\n   */\n  _initStateConstraints() {}\n\n  /**\n   * Initialize state\n   * @abstract\n   * @protected\n   */\n  _initState() {}\n\n  /**\n   * Initialize the svg elements.\n   * Each implementation of this method must end with calls to _appendSvgEls() and _update(),\n   * in that order, as shown in this template\n   * @abstract\n   * @protected\n   */\n  _initSvgEls() {}\n\n  /**\n   * Append the newly created svg elements to the svg container.\n   * This method should be called exctly once by each implementation of the _initSvgEls() method.\n   * @protected\n   */\n  _appendSvgEls() {\n    const _this = this;\n\n    Object.values(_this.svgEls).forEach(svgEl => {\n      appendSvgEls(svgEl);\n    });\n\n    function appendSvgEls(child) {\n      if (child instanceof Array) {\n        child.forEach(arrEl => appendSvgEls(arrEl));\n      } else {\n        _this.svg.appendChild(child);\n        child.setAttribute(\"shape-rendering\", \"geometricPrecision\");\n      }\n    }\n  }\n\n  /**\n   * Initialize mouse and touch event handlers\n   * @abstract\n   * @protected\n   */\n  _initHandlers() {}\n\n  /**\n   * Update (redraw) component based on state\n   * @abstract\n   * @protected\n   */\n  _update() {}\n\n  /* ===========================================================================\n  *  PUBLIC API\n  */\n\n  /**\n   * Get public representation of the state.\n   * @abstract\n   * @public\n   */\n  getVal() {}\n\n  /**\n   * Set the current state in a format specific to each widget.\n   * Same as setVal(), but will not cause an observer callback trigger.\n   * @abstract \n   * @public\n   */\n  setInternalVal(newVal) {}\n\n  /**\n   * Set the current state in a format specific to each widget.\n   * Same as setInternalVal(), but will cause an observer callback trigger.\n   * @abstract @public\n   */\n  setVal(newVal) {}\n\n  /**\n   * Get the current state.\n   * @abstract\n   * @public\n   * @returns {object} - Copy of this.state\n   */\n  getState() {}\n\n  /**\n   * Set the current state and redraw.\n   * @description If no new state argument is provided, will reassign old state, taking into account the stateConstraints.\n   * As opposed to setState(), setInternalState() does not trigger observer notification.\n   * Will use Widget.stateConstraints to constrain each state value to each constraints min, max, or enum\n   * @abstract\n   * @public\n   * @param {object} [newState] - The new state.\n   * @returns {boolean} A flag indicating whether the state has been changed.\n   */\n  setInternalState(newState) {}\n\n  /**\n   * Sets the current state and redraws.\n   * @description As opposed to setInternalState(), setState() will call the observer callback functions,\n   * so may lead to an infinate loop if an observer calls this method.\n   * @abstract\n   * @public\n   * @param {object} [newState] - The new state.\n   * @returns {boolean} A flag indicating whether the state has been changed.\n   */\n  setState(newState) {}\n  \n  /* ===========================================================================\n  *  HELPER METHODS\n  */\n\n  /** Helper method: get x relative to the container */\n  _getRelativeX(x) {\n    return x - this._getLeft();\n  }\n\n  /** Helper method: get y relative to the container */\n  _getRelativeY(y) {\n    return y - this._getTop();\n  }\n\n   /** Helper method: get the width of the svg container */\n   _getWidth() {\n     return this.svg.getBoundingClientRect().width;\n   }\n\n   /** Helper method: get the height of the svg container */\n   _getHeight() {\n     return this.svg.getBoundingClientRect().height;\n   }\n\n   /** Helper method: get the top edge position of the svg container */\n   _getTop() {\n     return this.svg.getBoundingClientRect().top;\n   }\n\n   /** Helper method: get the left edge position of the svg container */\n   _getLeft() {\n     return this.svg.getBoundingClientRect().left;\n   }\n}\n\nObject.assign(Widget.prototype, WidgetSvgNsMixin);\nObject.assign(Widget.prototype, WidgetStateMixin);\nObject.assign(Widget.prototype, WidgetOptionsMixin);\nObject.assign(Widget.prototype, WidgetObserverMixin);\n\nexport default Widget;\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget.js","/**\n * Verifies that the given audio context has the requested features and attempts to shim features that are\n * missing.\n * @param {AudioContext} audioCtx - The Audio Context to check.\n * @param {array} features - Array of features to detect, listed as strings (i.e. \"Gain\", \"Oscillator\", \"Analyser\", etc.) \n */\nfunction VerifyAudioContextFeatures(audioCtx, features) {\n\n  features.forEach(feature => {\n\n    switch(feature) {\n\n      case \"Analyser\":\n        if (typeof audioCtx.createAnalyser !== \"function\") {\n          throw new Error(\"Required module AnalyserNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"AudioBuffer\":\n        if (typeof audioCtx.createBuffer !== \"function\") {\n          throw new Error(\"Required module AudioBufferNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n      \n      case \"AudioBufferSource\":\n        if (typeof audioCtx.createBufferSource !== \"function\") {\n          throw new Error(\"Required module AudioBufferSourceNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"BiquadFilter\":\n        if (typeof audioCtx.createBiquadFilter !== \"function\") {\n          throw new Error(\"Required module BiquadFilterNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"ChannelMerger\":\n        if (typeof audioCtx.createChannelMerger !== \"function\") {\n          throw new Error(\"Required module ChannelMergerNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n      \n      case \"ChannelSplitter\":\n        if (typeof audioCtx.createChannelSplitter !== \"function\") {\n          throw new Error(\"Required module ChannelSplitterNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"Convolver\":\n        if (typeof audioCtx.createConvolver !== \"function\") {\n          throw new Error(\"Required module ConvolverNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"Delay\":\n        if (typeof audioCtx.createDelay !== \"function\") {\n          throw new Error(\"Required module DelayNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"DynamicsCompressor\":\n        if (typeof audioCtx.createDynamicsCompressor !== \"function\") {\n          throw new Error(\"Required module DynamicsCompressorNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n       \n      case \"Gain\":\n        if (typeof audioCtx.createGain !== \"function\") {\n          throw new Error(\"Required module GainNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"IIRFilter\":\n        if (typeof audioCtx.createIIRFilter !== \"function\") {\n          throw new Error(\"Required module IIRFilterNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"Oscillator\":\n        if (typeof audioCtx.createOscillator !== \"function\") {\n          throw new Error(\"Required module OscillatorNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n        \n      case \"Panner\":\n        if (typeof audioCtx.createPannerr !== \"function\") {\n          throw new Error(\"Required module PannerNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"StereoPanner\":\n        if (typeof audioCtx.createStereoPanner !== \"function\") {\n          audioCtx.createStereoPanner = function() { return new StereoPannerShim(audioCtx); };\n        }\n        break;\n\n      default:\n        console.warn(\"A check for AudioContext feature \", feature, \"is being requested, but no matching check is implemented\");\n        break;\n    }\n  });\n}\n\nexport default VerifyAudioContextFeatures;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/core/verify-audio-context-features.js","import AudioModule from \"audio_modules/core/audio-module\";\nimport verifyAudioContextFeatures from \"audio_modules/core/verify-audio-context-features\";\n\n/**\n * Class representing a Channel Strip.\n * A Channel Strip is a processing component similar to a channel strip found on a mixing board.\n * It facilitates control over input gain, output gain, and pan of a signal.\n * @class\n */\nclass ChannelStrip extends AudioModule {\n\n  /**\n   * @constructor\n   * @param {AudioContext} audioCtx \n   */\n  constructor(audioCtx, o) {\n    super(audioCtx);\n  }\n\n  /* ============================================================================================= */\n  /*  INITIALIZATION METHODS\n  /* ============================================================================================= */\n  \n  /**\n   * Initialize audio components and their connections.\n   * @private @override\n   */\n  _initAudioComponents() {\n    const _this = this;\n\n    try {\n      verifyAudioContextFeatures(_this.audioCtx, [\"Gain\", \"StereoPanner\"]);\n\n      this.audioComponents = {\n        inputGain: _this.input,\n        panner: _this.audioCtx.createStereoPanner(),\n        outputGain: _this.output\n      };\n\n      this.audioComponents.inputGain.connect(this.audioComponents.panner);\n      this.audioComponents.panner.connect(this.audioComponents.outputGain);\n    \n    } catch(err) {\n      console.error(err);\n    }\n  }\n\n  /**\n   * Initialize and expose Audio Params.\n   * @private @override\n   */\n  _initAudioParams() {\n    this.inputGain = this.audioComponents.inputGain.gain;\n    this.outputGain = this.audioComponents.outputGain.gain;\n    this.pan = this.audioComponents.panner.pan;\n  }\n  \n  /* ============================================================================================= */\n  /*  GETTERS AND SETTERS\n  /* ============================================================================================= */ \n  \n  /**\n   * Get input gain value.\n   * @returns {number} - Input gain value.\n   */\n  getInputGain() {\n    return this.audioComponents.inputGain.gain.value;\n  }\n\n  /**\n   * Set input gain value.\n   * @param {number} newVal - The new input gain value.\n   */\n  setInputGain(newVal) {\n    this.audioComponents.inputGain.gain.value = newVal;\n  }\n\n  /**\n   * Get pan value.\n   * @returns {number} - Pan value.\n   */\n  getPan() {\n    return this.audioComponents.panner.pan.value;\n  }\n\n  /**\n   * Set pan value.\n   * @param {number} newVal - The new pan value.\n   */\n  setPan(newVal) {\n    this.audioComponents.panner.pan.value = newVal;\n  }\n\n  /**\n   * Get output gain value.\n   * @returns {number} - Output gain value.\n   */\n  getOutputGain() {\n    return this.audioComponents.outputGain.gain.value;\n  }\n\n  /**\n   * Set output gain value.\n   * @param {number} newVal - The new output gain value.\n   */\n  setOutputGain(newVal) {\n    this.audioComponents.outputGain.gain.value = newVal;\n  }\n}\n\nexport default ChannelStrip;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/channel-strip.js","/**\n * A collection of static utility methods for Audio Modules\n */\nlet AudioModuleUtil = {\n\n  /**\n   * Convert MIDI pitch to frequency.\n   * @param {number} midiPitch - The midi pitch number.\n   * @param {number} [a4tuning=440] - Tuning of the note A4 (midi pitch 69) in Hz, 440Hz by default.\n   * @return {number} freq - Frequency for the given MIDI pitch.\n   */\n  midiToFreq: function midiToFreq(midiPitch, a4tuning = 440) {\n    let freq = -1;\n\n    if (midiPitch !== -1) freq = Math.pow(2, (midiPitch - 69) / 12) * 440;\n    return freq;\n  },\n\n  /**\n   * Convert MIDI velocity (0 - 127) to gain (0. - 1.).\n   * @param {number} vel - MIDI velocity (0 - 127).\n   * @returns {number} - Gain (0. - 1.). \n   */\n  midiVelToGain: function midiVelToGain(vel) {\n    return (vel / 127);\n  },\n\n  /**\n   * Convert note name to MIDI pitch\n   * @param {string} noteName - The note name to convert\n   * @return {number} midiPitch - MIDI pitch for the given note name. Return -1 if invalid argument format.\n   */\n  noteNameToMidi: function (noteName) {\n    let noteNameFormat = /^([a-g]|[A-G])(#|b)?([0-9]|10)$/;\n\n    if(noteNameFormat.test(noteName) === false) {\n      console.log('AudioModuleUtil.noteNameToMidi: invalid note name format');\n      return -1;\n    } else {\n      let capture = noteNameFormat.exec(noteName);\n\n      let note = capture[1];\n      let accidental = capture[2];\n      let octave = capture[3];\n\n      let noteFundamentalMap = {\n        'A': 9,\n        'a': 9,\n        'B': 11,\n        'b': 11,\n        'C': 0,\n        'c': 0,\n        'D': 2,\n        'd': 2,\n        'E': 4,\n        'e': 4,\n        'F': 5,\n        'f': 5,\n        'G': 7,\n        'g': 7\n      };\n\n      let noteFundamental = noteFundamentalMap[note];\n\n      if(accidental === '#') {\n        noteFundamental++;\n      } else if (accidental === 'b') {\n        noteFundamental--;\n      }\n\n      let midiPitch = noteFundamental + (12 * octave);\n\n      return midiPitch;\n    }\n  },\n\n  /**\n   * Convert note name to frequency\n   * @param {string} noteName - The note name to convert\n   * @param {number} [a4tuning=440] - Tuning of the note A4 (midi pitch 69) in Hz, 440Hz by default.\n   * @return {number} freq - Frequency for the given MIDI pitch.\n   */\n  noteNameToFreq: function (noteName, a4tuning) {\n    a4tuning = a4tuning || 440;\n    return AudioModuleUtil.midiToFreq(AudioModuleUtil.noteNameToMidi(noteName), a4tuning);\n  }\n}\n\nexport default AudioModuleUtil;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/core/util.js","import AudioModule from \"audio_modules/core/audio-module\";\nimport verifyAudioContextFeatures from \"audio_modules/core/verify-audio-context-features\";\n\n/**\n * Class representing an Envelope.\n * An envelope controls the evolution of the amplitude of a audio signal over time.\n * The Envelope class defines an envelope with attack and release of an arbitrary number of points\n * (as opposed to, for example, an ADSR envelope, which has 1 point each for attack, decay, and release).\n * This envelope will follow the attack path and sustain until release is triggered, at which point \n * it will floow the specified release path.\n * Attack and release paths are specified as 2D arrays in the form\n * [ [t(0), a(0)], [t(1), a(1)], ... [t(i), a(i)] ],\n * where t(i) specifies the time, in seconds,\n * and a(i) specifies the amplitude of the envelope at the vertex i.\n * @class\n */\nclass Envelope extends AudioModule {\n\n  /**\n   * @constructor\n   * @param {AudioContext} audioCtx\n   * @param {object} o - Options.\n   * @param {array} [o.attackEnvelope] - 2D array specifying the attack envelope.\n   * @param {array} [o.releaseEnvelope] - 2D array specifying the release envelope.\n   */\n  constructor(audioCtx, o) {\n    super(audioCtx);  \n  }\n\n  /* ============================================================================================= */\n  /*  INITIALIZATION METHODS\n  /* ============================================================================================= */\n\n  /**\n   * Initialize audio components and their connections.\n   * @private @override\n   */\n  _initAudioComponents() {\n    const _this = this;\n\n    try {\n      verifyAudioContextFeatures(_this.audioCtx, [\"Gain\"]);\n\n      this.audioComponents = {\n        envGain: _this.audioCtx.createGain()\n      }\n\n      _this.audioComponents.envGain.gain.value = 0;\n      _this.input.connect(_this.audioComponents.envGain);\n      _this.audioComponents.envGain.connect(_this.output);\n          \n    } catch(err) {\n      console.error(err);\n    }\n  }\n\n  /**\n   * Initialize options.\n   * @private @override\n   */\n  _initOptions(o) {\n\n    this.o = {\n      attackEnvelope: [[0.1, 1], [1, 1]],\n      releaseEnvelope: [[0.5, 1], [1, 0]]\n    }\n\n    super._initOptions(o);\n\n    this._normalizeAttackEnvelope();\n    this._normalizeReleaseEnvelope();\n  }\n\n  /* ============================================================================================= */\n  /*  GETTERS AND SETTERS\n  /* ============================================================================================= */ \n\n  /**\n   * Get the attack envelope.\n   * @returns {array} - 2D array representing the attack envelope.\n   */\n  getAttackEnvelope() {\n    return this.o.attackEnvelope;\n  }\n\n  /**\n   * Set the attack envelope.\n   * @param {array} newEnv - A 2D array representing the new envelope, where each value is of the\n   *                         form [t, a] where t is time in seconds, and a is amplitude in the range\n   *                         [0. - 1.]\n   * @returns {this} - A reference to the current envelope object for chaining.\n   */\n  setAttackEnvelope(newEnv) {\n    this.o.attackEnvelope = newEnv;\n    this._normalizeAttackEnvelope();\n    return this;\n  }\n\n  /**\n   * Get the release envelope.\n   * @returns {array} - 2D array representing the release envelope.\n   */\n  getReleaseEnvelope() {\n    return this.o.releaseEnvelope;\n  }\n\n  /**\n   * Set the release envelope.\n   * @param {array} newEnv - A 2D array representing the new envelope, where each value is of the\n   *                         form [t, a] where t is time in seconds, and a is amplitude in the range\n   *                         [0. - 1.] \n   * @returns {this} - A reference to the current envelope object for chaining.\n   */\n  setReleaseEnvelope(newEnv) {\n    this.o.releaseEnvelope = newEnv;\n    this._normalizeReleaseEnvelope();\n    return this;\n  }\n\n  /* ============================================================================================= */\n  /*  PUBLIC API\n  /* ============================================================================================= */ \n\n  /**\n   * Execute the attack envelope.\n   * @returns {Promise} - Promise that returns the envelope when the envelope expires.\n   */\n  attack() {\n    const _this = this;\n    const envGain = this.audioComponents.envGain;\n    const env = this.o.attackEnvelope;\n    \n    let a, t;\n\n    // cancel scheduled values in case another change is occuring\n    envGain.gain.cancelScheduledValues(this.audioCtx.currentTime);\n    envGain.gain.setValueAtTime(envGain.gain.value, this.audioCtx.currentTime);\n\n    const startTime = this.audioCtx.currentTime;\n\n    // ramp to each subsequent value\n    for (var i = 0; i < env.length; i++) {\n      a = env[i][1];\n      t = startTime + env[i][0];                                       \n      \n      if (t > this.audioCtx.currentTime) {\n        envGain.gain.linearRampToValueAtTime(a, t);\n      }\n    }\n\n    return new Promise((resolve, reject) => {\n      window.setTimeout(() => { \n        resolve(env); \n      }, env[env.length -1][0] * 1000);\n    });\n  }\n\n  /**\n   * Execute the release envelope.\n   * @returns {Promise} - Promise that returns the envelope when the envelope expires.\n   */\n  release() {\n    const _this = this;\n    const envGain = this.audioComponents.envGain;\n    const env = this.o.releaseEnvelope;\n    \n    let a, t;\n\n    // cancel scheduled values in case another change is occuring\n    envGain.gain.cancelScheduledValues(this.audioCtx.currentTime);\n    envGain.gain.setValueAtTime(envGain.gain.value, this.audioCtx.currentTime);\n\n    const startTime = this.audioCtx.currentTime;\n\n    // ramp to each subsequent value\n    for (var i = 0; i < env.length; i++) {\n      a = env[i][1];\n      t = startTime + env[i][0];                                       \n      \n      if (t > this.audioCtx.currentTime) {\n        envGain.gain.linearRampToValueAtTime(a, t);\n      }\n    }\n\n    return new Promise((resolve, reject) => {\n      window.setTimeout(() => { \n        resolve(env); \n      }, env[env.length -1][0] * 1000);\n    });\n  }\n  \n  /* ============================================================================================= */\n  /* INTERNAL FUNCTIONALITY AND HELPER METHODS\n  /* ============================================================================================= */ \n\n  /**\n   * Normalizes the attack envelope.\n   * Envelope points must be strictly positive (non-zero) and <= 1.\n   * @private\n   */\n  _normalizeAttackEnvelope() {\n    this.o.attackEnvelope.forEach(point => {\n      point[1] = (point[1] <= 0) ? 0.0001 : \n                  (point[1] > 1) ? 1 :\n                  point[1];\n    });\n  }\n\n  /**\n   * Normalizes the release envelope.\n   * Envelope points must be strictly positive (non-zero) and <= 1.\n   * @private\n   */\n  _normalizeReleaseEnvelope() {\n    this.o.releaseEnvelope.forEach(point => {\n      point[1] = (point[1] <= 0) ? 0.0001 : \n                  (point[1] > 1) ? 1 :\n                  point[1];\n    });\n  }\n}\n\nexport default Envelope;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/envelope.js","/**\n * Useful Math Utility functions\n */\nlet MathUtil = {\n\n  /**\n   * Returns the decimal precision of a number.\n   * @param {number} val - The value whose precision to check.\n   * @returns {number} - Number of decimal places.\n   */\n  getPrecision(val) {\n    let decStr = (''+val).split('.')[1];\n    return (decStr ? decStr.length : 0);\n  },\n\n  /**\n   * Round a number to specified decimal precision.\n   * Same as Number.prototype.toFixed, but does not use toString.\n   * @param {nubmer} val - Value to be rounded.\n   * @param {precision} val - \n   * @returns  \n   */\n  round: function round(val, precision) {\n    let factor = Math.pow(10, precision);\n    return Math.round(val * factor) / factor;\n  },\n\n  /**\n   * Quantize a value (set it to the closest value matching the interval)\n   * Note: result will not necessarily reflect the same number of places of\n   * as the q input due to floating point arithmetic.\n   * @param {number} val - Value to quantize.\n   * @param {number} q - The quantization interval.\n   * @param {number} precision - The decimal precision of the result.\n   * @returns {number} qVal - Quantized val.\n   */\n  quantize: function quantize(val, q, precision) {\n    let qVal;\n\n    if (q == 0) {\n      return 0;\n    } else if (q < 0) {\n      q = Math.abs(q);\n    }\n\n    // quantize\n    qVal = ~~(val / q) * q;\n\n    qVal = Math.abs(val - qVal) > (q / 2) ? \n            qVal > 0 ? \n              qVal + q\n            : qVal - q\n          : qVal;\n\n    if (precision !== undefined) {\n      qVal = MathUtil.round(qVal, precision);\n    }\n\n    return qVal;\n  },\n\n  /**\n   * Alias for quantize(val, q)\n   * @param {number} val - Value to quantize\n   * @param {number} q - The quantization interval\n   * @param {number} precision - The decimal precision of the result.\n   * @returns {number} qVal - Quantized val\n   */\n  q: function q(val, q, precision) {\n    return MathUtil.quantize(val, q, precision);\n  }\n};\n\nexport default MathUtil;\n\n\n// WEBPACK FOOTER //\n// ./src/util/util-math.js","/**\n * Shim the WebAudio connect and disconnect methods to allow WebAudio nodes to connect to Audio Modules.\n * @param {AudioContext} audioCtx - The Audio Context to shim.\n */\nfunction shimWebAudioConnect(audioCtx) {\n  let audioNodePrototype = Object.getPrototypeOf(Object.getPrototypeOf(audioCtx.createGain()));\n\n  // keep a reference to the original connect and disconnect methods as webAudioConnect and webAudioDisconnect\n  audioNodePrototype.webAudioConnect = audioNodePrototype.connect;\n  audioNodePrototype.webAudioDisconnect = audioNodePrototype.disconnect;\n\n  // if the destination object has an 'input' property, it is an Audio Module - connect to 'input'\n  // else it is an AudioNode - connect directly\n  audioNodePrototype.connect = function (destination, outputIndex, inputIndex) {\n    if (destination.isAudioModule === true) {\n      this.webAudioConnect(destination.input, outputIndex, inputIndex);\n    } else {\n      this.webAudioConnect(destination, outputIndex, inputIndex);\n    }\n  };\n\n  audioNodePrototype.disconnect = function (destination, outputIndex, inputIndex) {\n    if (destination.isAudioModule === true) {\n      this.webAudioDisconnect(destination.input, outputIndex, inputIndex);\n    } else {\n      this.webAudioDisconnect(destination, outputIndex, inputIndex);\n    }\n  };\n\n  // flag marking the webAudioConnect feature as shimmed\n  audioCtx.isWebAudioConnectShimmed = true;\n}\n\nexport default shimWebAudioConnect;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/core/shim-web-audio-connect.js","import AudioModule from \"audio_modules/core/audio-module\";\nimport verifyAudioContextFeatures from \"audio_modules/core/verify-audio-context-features\";\nimport OscillatorVoice from \"audio_modules/oscillator-voice\";\nimport Envelope from \"audio_modules/envelope\";\nimport ChannelStrip from \"audio_modules/channel-strip\";\nimport AudioUtil from \"audio_modules/core/util\";\n\n/**\n * Class representing an Additive Synth Voice\n // TODO: WRITE DESCRIPTION\n * @class\n */\nclass AdditiveSynthVoice extends AudioModule {\n\n  /**\n   * @constructor\n   * @param {AudioContext} audioCtx\n   * @param {object} o - Options.\n   // TODO: ANNOTATE OPTIONS\n   */\n  constructor(audioCtx, o) {\n    super(audioCtx);  \n  }\n\n  /* ============================================================================================= */\n  /*  INITIALIZATION METHODS\n  /* ============================================================================================= */\n\n  /**\n   * Initialize audio components and their connections.\n   * @private @override\n   */\n  _initAudioComponents() {\n    const _this = this;\n\n    try {\n      // TODO: ANNOTATE LIST OF FEATURES TO CHECK\n      verifyAudioContextFeatures(_this.audioCtx, []);\n\n      this.audioComponents = {\n        overtones: (function() {\n          let ot = [];\n\n          for (let i = 0; i < _this.o.numOvertones; i++) {\n            ot.push(new OscillatorVoice(_this.audioCtx));\n          }\n\n          return ot;\n        }()),\n        envelope: new Envelope(_this.audioCtx),\n        channelStrip: new ChannelStrip(_this.audioCtx)\n      };\n\n      _this.audioComponents.overtones.forEach(ot => {\n        ot.connect(_this.audioComponents.envelope);\n      });\n      _this.audioComponents.envelope.connect(_this.audioComponents.channelStrip);\n      _this.audioComponents.channelStrip.connect(_this.output);       \n    } catch(err) {\n      console.error(err);\n    }\n  }\n\n  /**\n   * Initialize and expose Audio Params.\n   * @private @abstract\n   */\n  _initAudioParams() {\n    this.pan = this.audioComponents.channelStrip.pan;\n    this.gain = this.audioComponents.channelStrip.outputGain;\n    // TODO: can also expose frequency as frequency of first overtone?\n  }\n\n  /**\n   * Initialize options.\n   * @private @override\n   */\n  _initOptions(o) {\n\n    this.o = {\n      numOvertones: 10,\n      glide: 0\n    };\n\n    super._initOptions(o);\n  }\n\n  /* ============================================================================================= */\n  /*  GETTERS AND SETTERS\n  /* ============================================================================================= */ \n\n  /**\n   * Returns the gain.\n   * @returns {number} - Gain.\n   */\n  getGain() {\n    return this.audioComponents\n                .channelStrip\n                .getOutputGain();\n  }\n\n  /**\n   * Sets the gain.\n   * @param {number} gain - Gain between 0. and 1.\n   */\n  setGain(gain) {\n    this.audioComponents\n          .channelStrip\n          .setOutputGain(gain);\n    return this;\n  }\n\n  /**\n   * Returns the pan.\n   * @returns {number} - Pan.\n   */\n  getPan() {\n    return this.audioComponents\n                .channelStrip\n                .getPan();\n  }\n  \n  /**\n   * Sets the pan.\n   * @param {number} pan - Pan between -1. (L) and 1. (R).\n   */\n  setPan(pan) {\n    this.audioComponents\n          .channelStrip\n          .setPan(pan);\n    return this;\n  }\n\n  /**\n   * Returns the oscillator frequency.\n   * @returns {number} - Oscillator frequency.\n   */\n  getFrequency() {\n    let freq = this.audioComponents.overtones[0].getFrequency()\n    return freq;\n  }\n\n  /**\n   * Sets the oscillator frequency.\n   * @param {number} freq - Frequency.\n   * @param {number} [glide] - Glide time in ms.\n   */\n  setFrequency(freq, glide) {\n    let overtones = this.audioComponents.overtones;\n\n    glide = (glide === undefined) ? this.o.glide : glide;\n\n    overtones.forEach((ot, otIdx) => {\n      ot.setFrequency(freq * (otIdx + 1))\n    });\n\n    return this;\n  }\n\n  /**\n   * Get either the main attack envelope, or the attack envelope for\n   * one of the overtones.\n   * @param {number} [otIdx] - Index of the overtone whose attack envelope to return.\n   * @returns {array} - 2D array representing the attack envelope.\n   */\n  getAttackEnvelope(otIdx) {\n    let env = [];\n\n    if (typeof otIdx === \"number\") {\n      env = this.audioComponents.overtones[otIdx].getAttackEnvelope();\n    } else {\n      env = this.audioComponents.envelope.getAttackEnvelope();\n    }\n\n    return env;\n  }\n\n  /**\n   * Set either the main attack envelope, or the attack envelope for\n   * one of the overtones.\n   * @param {array} env - A 2D array representing the new envelope, where each value is of the\n   *                         form [t, a] where t is time in seconds, and a is amplitude in the range\n   *                         [0. - 1.]\n   * @param {number} otIdx - Index of the overtone whose attack envelope to set.\n   * @returns {this} - A reference to the current object for chaining.\n   */\n  setAttackEnvelope(env, otIdx) {\n    let target = {};\n\n    if (typeof otIdx === \"number\") {\n      target = this.audioComponents.overtones[otIdx];\n    } else {\n      target = this.audioComponents.envelope;\n    }\n\n    target.setAttackEnvelope(env);\n\n    return this;\n  }\n\n  /**\n   * Get either the main release envelope, or the release envelope for\n   * one of the overtones.\n   * @param {number} [otIdx] - Index of the overtone whose release envelope to return.\n   * @returns {array} - 2D array representing the release envelope.\n   */\n  getReleaseEnvelope(otIdx) {\n    let env = [];\n\n    if (typeof otIdx === \"number\") {\n      env = this.audioComponents.overtones[otIdx].getReleaseEnvelope();\n    } else {\n      env = this.audioComponents.envelope.getReleaseEnvelope();\n    }\n\n    return env;\n  }\n\n  /**\n   * Set either the main release envelope, or the release envelope for\n   * one of the overtones.\n   * @param {array} env - A 2D array representing the new envelope, where each value is of the\n   *                         form [t, a] where t is time in seconds, and a is amplitude in the range\n   *                         [0. - 1.]\n   * @param {number} otIdx - Index of the overtone whose release envelope to set.\n   * @returns {this} - A reference to the current object for chaining.\n   */\n  setReleaseEnvelope(env) {\n    let taget = {};\n    \n    if (typeof otIdx === \"number\") {\n      target = this.audioComponents.overtones[otIdx];\n    } else {\n      target = this.audioComponents.envelope;\n    }\n\n    target.setReleaseEnvelope(env);\n\n    return this;\n  }\n\n  /**\n   * Set the gain of an overtone.\n   * @param {number} gain - Gain - value in the range [0. - 1.]\n   * @param {number} otIdx - Overtone index. \n   */\n  setOvertoneGain(gain, otIdx) {\n    if (otIdx >= 0 && otIdx < this.audioComponents.overtones.length) {\n      this.audioComponents.overtones[otIdx].setGain(gain);\n    }\n  }\n\n  /**\n   * Set the gain for multiple overtones using an array.\n   * @param {array} gainArr\n   */\n  setOvertoneGains(gainArr) {\n    for (let i = 0; (i < this.audioComponents.overtones.length) && (i < gainArr.length); i++) {\n      this.setOvertoneGain(gainArr[i], i);\n    }\n  }\n\n  /* ============================================================================================= */\n  /*  PUTLIC API\n  /* ============================================================================================= */ \n\n  /**\n   * Execute the attack envelope.\n   * @returns {Promise} - Promise that returns the envelope when the envelope expires.\n   */\n  attack() {\n    let overtones = this.audioComponents.overtones;\n\n    overtones.forEach(ot => {\n      ot.attack();\n    });\n\n    return this.audioComponents.envelope.attack();\n  }\n\n  /**\n   * Execute the release envelope.\n   * @returns {Promise} - Promise that returns the envelope when the envelope expires.\n   */\n  release() {\n    let overtones = this.audioComponents.overtones;\n    \n    overtones.forEach(ot => {\n      ot.release();\n    });\n    \n\n    return this.audioComponents.envelope.release();\n  }\n\n  /**\n   * Play a note with the given MIDI pitch and MIDI velocity.\n   * @public\n   * @param {number} pitch - MIDI pitch.\n   * @param {number} [vel=127] - MIDI velocity. \n   * @param {array} [glide] - Glide time in ms.\n   */\n  playNote(pitch, vel = 127, glide) {\n    let freq = AudioUtil.midiToFreq(pitch);\n    let gain = AudioUtil.midiVelToGain(vel);\n\n    if (vel === 0) {\n      this.release();\n    } else {\n      this.setFrequency(freq, glide);\n      this.setGain(gain);\n      this.attack();\n    }\n  }\n}\n\nexport default AdditiveSynthVoice;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/additive-synth-voice.js","import AudioModule from \"audio_modules/core/audio-module\";\nimport verifyAudioContextFeatures from \"audio_modules/core/verify-audio-context-features\";\nimport Envelope from \"audio_modules/envelope\";\nimport ChannelStrip from \"audio_modules/channel-strip\";\nimport AudioUtil from \"audio_modules/core/util\";\n\n/**\n * Class representing an Oscillator Voice. \n * An Oscillator Voice has an oscillator, and a channel strip.\n * @class\n */\nclass OscillatorVoice extends AudioModule {\n\n  /**\n   * @constructor\n   * @param {AudioContext} audioCtx\n   * @param {object} [o] - Options.\n   * @param {number} [o.glide] - Glide time in ms.\n   */\n  constructor(audioCtx, o) {\n    super(audioCtx);  \n  }\n\n  /* ============================================================================================= */\n  /*  INITIALIZATION METHODS\n  /* ============================================================================================= */\n\n  /**\n   * Initialize audio components and their connections.\n   * @private @override\n   */\n  _initAudioComponents() {\n    const _this = this;\n\n    try {\n      verifyAudioContextFeatures(_this.audioCtx, [\"Oscillator\"]);\n\n      this.audioComponents = {\n        oscillator: _this.audioCtx.createOscillator(),\n        envelope: new Envelope(_this.audioCtx),\n        channelStrip: new ChannelStrip(_this.audioCtx)\n      };\n\n      this.audioComponents.oscillator.connect(this.audioComponents.envelope);\n      this.audioComponents.envelope.connect(this.audioComponents.channelStrip);\n      this.audioComponents.channelStrip.connect(this.output);\n      this.audioComponents.channelStrip.setInputGain(1);\n      this.audioComponents.oscillator.start();\n      \n    } catch(err) {\n      console.error(err);\n    }\n  }\n\n  /**\n   * Initialize and expose Audio Params.\n   * @private @override\n   */\n  _initAudioParams() {\n    this.pan = this.audioComponents.channelStrip.pan;\n    this.gain = this.audioComponents.channelStrip.outputGain;\n    this.frequency = this.audioComponents.oscillator.frequency;\n  }\n\n  /**\n   * Initialize options.\n   * @private @override\n   */\n  _initOptions(o) {\n    \n        this.o = {\n          glide: 0\n        }\n    \n        super._initOptions(o);\n      }\n\n  /* ============================================================================================= */\n  /*  GETTERS AND SETTERS\n  /* ============================================================================================= */ \n\n  /**\n   * Returns the type of the waveform set for this oscillator.\n   * @returns {string} - Type of waveform. One of \"sine\", \"square\", \"sawtooth\", \"triangle\", or \"custom\".\n   */\n  getWaveformType() {\n    return this.audioComponents.oscillator.type;\n  }\n\n  /**\n   * Set the type of waveform - one of \"sine\", \"square\", \"sawtooth\", \"triangle\", or \"custom\".\n   * If \"custom\" is selected, you may also provide the real and imaginary components to create\n   * the custom waveform.\n   * @param {string} type - Type of waveform - one of \"sine\", \"square\", \"sawtooth\", \"triangle\", or \"custom\".\n   * @param {Float32Array} [real] - Real part (cosine terms) of an array used to create the custom waveform.\n   * @param {Float32Array} [imag] - Imaginary part (sine terms) of an array used to create the custom waveform.\n   */\n  setWaveformType(type, real, imag) {\n\n    switch (type) {\n      case \"sine\":\n        this.audioComponents.oscillator.type = \"sine\";\n        break;\n      case \"square\":\n        this.audioComponents.oscillator.type = \"squre\";\n        break;\n      case \"sawtooth\":\n      case \"saw\":\n        this.audioComponents.oscillator.type = \"sawtooth\";\n        break;\n      case \"triangle\":\n        this.audioComponents.oscillator.type = \"triangle\";\n        break;\n      case \"custom\":\n        if (typeof real === \"object\" && real.constructor.name === \"Float32Array\"\n            && typeof imag === \"object\" && imag.constructor.name === \"Float32Array\") {              \n              let wave = this.audioCtx.createPeriodicWave(real, imag);\n              this.audioComponents.oscillator.setPeriodicWave(wave);              \n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Set a custom waveform using arrays of real (cosine) and imaginary (sine) terms.\n   * @param {Float32Array} real \n   * @param {Float32Array} imag \n   */\n  setCustomWaveform(real, imag) {\n    this.setWaveformType(\"custom\", real, imag);\n    return this;\n  }\n\n  /**\n   * Returns the gain.\n   * @returns {number} - Gain.\n   */\n  getGain() {\n    return this.audioComponents\n                .channelStrip\n                .getOutputGain();\n  }\n\n  /**\n   * Sets the gain.\n   * @param {number} gain - Gain between 0. and 1.\n   */\n  setGain(gain) {\n    this.audioComponents\n          .channelStrip\n          .setOutputGain(gain);\n    return this;\n  }\n\n  /**\n   * Returns the pan.\n   * @returns {number} - Pan.\n   */\n  getPan() {\n    return this.audioComponents\n                .channelStrip\n                .getPan();\n  }\n  \n  /**\n   * Sets the pan.\n   * @param {number} pan - Pan between -1. (L) and 1. (R).\n   */\n  setPan(pan) {\n    this.audioComponents\n          .channelStrip\n          .setPan(pan);\n    return this;\n  }\n\n  /**\n   * Returns the oscillator frequency.\n   * @returns {number} - Oscillator frequency.\n   */\n  getFrequency() {\n    const osc = this.audioComponents.oscillator;\n\n    return osc.frequency.value;\n  }\n\n  /**\n   * Sets the oscillator frequency.\n   * @param {number} freq - Frequency.\n   * @param {number} [glide] - Glide time in ms.\n   */\n  setFrequency(freq, glide) {\n    const osc = this.audioComponents.oscillator;\n\n    glide = (glide === undefined) ? this.o.glide : glide;\n    glide = glide / 1000; // convert to secs\n    \n    osc.frequency.cancelScheduledValues(this.audioCtx.currentTime);\n    osc.frequency.setValueAtTime(osc.frequency.value, this.audioCtx.currentTime);\n    osc.frequency.linearRampToValueAtTime(freq, this.audioCtx.currentTime + glide);\n\n    return this;\n  }\n\n  /**\n   * Get the attack envelope.\n   * @returns {array} - 2D array representing the attack envelope.\n   */\n  getAttackEnvelope() {\n    return this.audioComponents\n                .envelope\n                .getAttackEnvelope();\n  }\n\n  /**\n   * Set the attack envelope.\n   * @param {array} env - A 2D array representing the new envelope, where each value is of the\n   *                         form [t, a] where t is time in seconds, and a is amplitude in the range\n   *                         [0. - 1.]\n   * @returns {this} - A reference to the current envelope object for chaining.\n   */\n\n  setAttackEnvelope(env) {\n    this.audioComponents\n          .envelope\n          .setAttackEnvelope(env);\n    return this;\n  }\n\n  /**\n   * Get the release envelope.\n   * @returns {array} - 2D array representing the release envelope.\n   */\n  getReleaseEnvelope() {\n    return this.audioComponents\n                .envelope\n                .getReleaseEnvelope();\n  }\n\n  /**\n   * Set the release envelope.\n   * @param {array} env - A 2D array representing the new envelope, where each value is of the\n   *                         form [t, a] where t is time in seconds, and a is amplitude in the range\n   *                         [0. - 1.] \n   * @returns {this} - A reference to the current envelope object for chaining.\n   */\n  setReleaseEnvelope(env) {\n    this.audioComponents\n          .envelope\n          .setReleaseEnvelope(env);\n    return this;\n  }\n\n  /* ============================================================================================= */\n  /*  PUTLIC API\n  /* ============================================================================================= */ \n\n  /**\n   * Execute the attack envelope.\n   * @returns {Promise} - Promise that returns the envelope when the envelope expires.\n   */\n  attack() {\n    return this.audioComponents.envelope.attack();\n  }\n\n  /**\n   * Execute the release envelope.\n   * @returns {Promise} - Promise that returns the envelope when the envelope expires.\n   */\n  release() {\n    return this.audioComponents.envelope.release();\n  }\n\n  /**\n   * Play a note with the given MIDI pitch and MIDI velocity.\n   * @public\n   * @param {number} pitch - MIDI pitch.\n   * @param {number} [vel=127] - MIDI velocity. \n   * @param {array} [glide] - Glide time in ms.\n   */\n  playNote(pitch, vel = 127, glide) {\n    let freq = AudioUtil.midiToFreq(pitch);\n    let gain = AudioUtil.midiVelToGain(vel);\n\n    this.setFrequency(freq, glide);\n    this.setGain(gain);\n\n    this.attack();\n  }\n}\n\nexport default OscillatorVoice;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/oscillator-voice.js","/**\n * Mixin specifying the xml namespace for SVG\n * @mixin\n */\nconst SVG_NS = { SVG_NS: \"http://www.w3.org/2000/svg\" };\n\nexport default SVG_NS;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget-mixin-svgns.js","import Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\n\n/**\n * Mixin for methods related to state management\n * @mixin\n */\nlet WidgetStateMixin = {\n\n  /**\n   * Get the current state.\n   *\n   * @public\n   * @returns {object} - Copy of this.state\n   */\n  getState: function getState() {\n    return Object.assign({}, this.state);\n  },\n\n  /**\n   * Set the current state and redraw.\n   *\n   * @description If no new state argument is provided, will reassign old state, taking into account the stateConstraints.\n   * As opposed to setState(), setInternalState() does not trigger observer notification.\n   * Will use Widget.stateConstraints to constrain each state value to each constraints min, max, or enum\n   *\n   * @protected\n   * @param {object=} newState - The new state.\n   * @return {boolean} isChanged - Returns a boolean indicating whether the state has been changed\n   */\n  setInternalState: function setInternalState(newState) {\n    const _this = this;\n    let isChanged = false;\n\n    newState = newState || this.getState();\n\n    Object.keys(newState).forEach(key => {\n      if (_this.state.hasOwnProperty(key) && _this.state[key] !== newState[key]) {\n        _this.state[key] = newState[key];\n        isChanged = true;\n      }\n    });\n\n    _this.stateConstraints.constrain(_this.state);\n    this._update();\n\n    return isChanged;\n  },\n\n  /**\n   * Set the current state and redraw.\n   *\n   * @description As opposed to setInternalState(), setState() will call the observer callback functions,\n   * so may lead to an infinate loop if an observer calls this method.\n   *\n   * @protected\n   * @param {object=} newState - The new state.\n   * @return {boolean} isChanged - Returns a boolean indicating whether the state has been changed\n   */\n  setState: function setState(newState) {\n    const _this = this;\n    let isChanged = false;\n\n    isChanged = this.setInternalState(newState);\n\n    this._notifyObservers();\n\n    return isChanged;\n  }\n};\n\nexport default WidgetStateMixin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget-mixin-state.js","/**\n * Mixin for methods related to options\n * @mixin\n */\nlet WidgetOptionsMixin = {\n\n  /**\n   * Initializes the options.\n   * @private\n   * @param {object} o - Options.\n   */\n  _initOptions: function _initOptions(o) {\n    const _this = this;\n    o = o || {};\n\n    Object.keys(o).forEach(key => {\n      if (_this.o.hasOwnProperty(key) && _this.o[key] !== o[key]) {\n        _this.o[key] = o[key];\n      }\n    });\n  },\n\n  /**\n   * Get the options object\n   * @public\n   * @return {object} this.o - Options\n   */\n  getOptions: function getOptions() {\n    return Object.assign({}, this.o);\n  },\n\n  /**\n   * Set the options\n   * Uses a diffing function, so only specified keys that have new values will be changed\n   * @public\n   * @param {object} o - options\n   * @return {boolean} isChanged - Returns a boolean indicating whether any option has been changed\n   */\n  setOptions: function setOptions(o) {\n    const _this = this;\n    o = o || {};\n    let isChanged = false;\n\n    Object.keys(o).forEach(key => {\n      if (_this.o.hasOwnProperty(key) && _this.o[key] !== o[key]) {\n        _this.o[key] = o[key];\n        isChanged = true;\n      }\n    });\n\n    if (isChanged) {\n      this.setState();\n    }\n\n    return isChanged;\n  }\n};\n\nexport default WidgetOptionsMixin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget-mixin-options.js","/**\n * Mixin for methods related to observer callback support\n * @mixin\n */\nlet WidgetObserverMixin = {\n\n  /**\n   * Register a new observer function that will recieve the state value every time the state is updated.\n   * @public\n   * @param {function} newObserver - The new observer function to be notified every time the state changes.\n   * @return {boolean} isChanged - Indicates whether an observer was added.\n   */\n  addObserver: function addObserver(newObserver) {\n    let isChanged = false;\n\n    if (!(this.observers.find(observer => observer === newObserver))) {\n      this.observers.push(newObserver);\n      isChanged = true;\n    }\n\n    return isChanged;\n  },\n\n  /**\n   * Remove an observer function from being notified when the state changes.\n   * @public\n   * @param {function} targetObserver - The observer function to be removed.\n   * @return {boolean} isChanged - Indicates whether an observer has been removed\n   */\n  removeObserver: function removeObserver(targetObserver) {\n    const _this = this;\n    let isChanged = false;\n\n    this.observers.forEach((observer, idx) => {\n      if (observer === targetObserver) {\n        _this.observers.splice(idx, 1);\n        isChanged = true;\n      }\n    });\n\n    return isChanged;\n  },\n\n  /**\n   * Alias for addObserver. Registers a listener (observer) function.\n   * @param {function} newListener - The new listener (observer) function to be notified every time the state changes.\n   * @return {boolean} isChanged - Indicates whether an observer was added.\n   */\n  addListener: function addListener(newListener) {\n    this.addObserver(newListener);\n  },\n\n  /**\n   * Alias for removeObserver. Removes a listener (observer) function.\n   * @param {function} targetListener - The listener (observer) function to be removed.\n   * @return {boolean} isChanged - Indicates whether an observer has been removed\n   */\n  removeListener: function removeListener(targetListener) {\n    this.removeObserver(targetListener);\n  },\n\n  /**\n   * Notify all observers of new state\n   * @protected\n   */\n  _notifyObservers() {\n    const _this = this;\n    this.observers.forEach(observer => observer(_this.getVal()));\n  }\n};\n\nexport default WidgetObserverMixin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget-mixin-observer.js","import Widget from \"ui/core/widget\";\nimport Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\nimport MathUtil from \"util/util-math\";\n\n/**\n * Class representing an SVG Dial widget.\n * @class\n * @implements {Widget}\n */\nclass Dial extends Widget {\n\n  /**\n   * @constructor\n   * @param {object} container - DOM container for the widget.\n   * @param {object=} o - options.\n   * @param {number=0} o.minVal - Minimum value constraint.\n   * @param {number=127} o.maxVal - Maximum value constraint.\n   * @param {number=1} o.step - Interval of the steps in which the dial changes value. \n   * @param {string=\"#000\"} o.needleColor - Dial needle color.\n   * @param {string=\"#f40\"} o.activeColor - Dial active color.\n   */\n  constructor(container, o) {\n    super(container, o);\n    return this;\n  }\n\n  /* ===========================================================================\n  *  PUBLIC API\n  */\n\n  /**\n   * Returns the dial value.\n   * @public @override\n   * @returns {number} - Value of the dial.\n   */\n  getVal() {\n    return this.state.val;\n  }\n\n  /**\n   * Sets the dial value.\n   * Same as setVal(), but will not trigger observer callbacks.\n   * @public @override\n   * @param {number} newVal - The new value.\n   */\n  setInternalVal(newVal) {\n    this.setInternalState({ val: newVal });\n  }\n\n  /**\n   * Sets the dial value.\n   * Same as setInternalVal(), but will trigger observer callbacks.\n   * @public @override\n   * @param {number} newVal - The new value.\n   */\n  setVal(newVal) {\n    this.setState({ val: newVal });\n  }\n\n  /**\n   * Sets the options. \n   * @public @override\n   * @param {object} o - Options.\n   */\n  setOptions(o) {\n    super.setOptions(o);\n    this.o.stepPrecision = MathUtil.getPrecision(this.o.step);\n  }\n\n  /* ==============================================================================================\n  *  INITIALIZATION METHODS\n  */\n\n  /**\n   * Initializes the options.\n   * @override\n   * @private\n   */\n  _initOptions(o) {\n    // set the defaults\n    this.o = {\n      minVal: 0,\n      maxVal: 127,\n      step: 1,\n      needleColor: \"#414141\",\n      activeColor: \"#f40\",\n      mouseSensitivity: 1.2\n    };\n\n    // override defaults with provided options\n    super._initOptions(o);\n\n    // set the precision based on the step interval\n    this.o.stepPrecision =  MathUtil.getPrecision(this.o.step);\n  }\n\n  /**\n   * Initializes state constraints.\n   * @override\n   * @private\n   */\n  _initStateConstraints() {\n    const _this = this;\n\n    this.stateConstraints = new ConstraintSpec({\n      val: new Constraint({\n        min: _this.o.minVal,\n        max: _this.o.maxVal,\n        transform: num => MathUtil.quantize(num, _this.o.step, _this.o.stepPrecision)\n      })\n    });\n  }\n\n  /**\n   * Initializes state.\n   * @override\n   * @private\n   */\n  _initState() {\n    this.state = {\n      val: 0\n    };\n  }\n\n  /**\n   * Initializes the svg elements.\n   * @override\n   * @private\n   */\n  _initSvgEls() {\n    const _this = this;\n\n    this.svgEls = {\n      bgArc: document.createElementNS(this.SVG_NS, \"path\"),\n      activeArc: document.createElementNS(this.SVG_NS, \"path\"),\n      needle: document.createElementNS(this.SVG_NS, \"line\")\n    };\n\n    // draw the background arc\n    this.svgEls.bgArc.setAttribute(\"d\",\n      _this._calcSvgArcPath(\n        _this._calcNeedleCenter().x,\n        _this._calcNeedleCenter().y,\n        _this._calcDialRadius(),\n        0.67 * Math.PI,\n        2.35 * Math.PI\n    ));\n    this.svgEls.bgArc.setAttribute(\"stroke-width\", _this._calcArcStrokeWidth());\n    this.svgEls.bgArc.setAttribute(\"stroke\", _this.o.needleColor);\n    this.svgEls.bgArc.setAttribute(\"fill\", \"transparent\");\n    this.svgEls.bgArc.setAttribute(\"stroke-linecap\", \"round\");\n\n    // draw the active arc\n    this.svgEls.activeArc.setAttribute(\"stroke-width\", _this._calcArcStrokeWidth());\n    this.svgEls.activeArc.setAttribute(\"stroke\", _this.o.activeColor);\n    this.svgEls.activeArc.setAttribute(\"fill\", \"transparent\");\n    this.svgEls.activeArc.setAttribute(\"stroke-linecap\", \"round\");\n\n    // draw the needle\n    this.svgEls.needle.setAttribute(\"x1\", _this._calcNeedleCenter().x);\n    this.svgEls.needle.setAttribute(\"y1\", _this._calcNeedleCenter().y);\n    this.svgEls.needle.setAttribute(\"x2\", _this._calcNeedleEnd().x);\n    this.svgEls.needle.setAttribute(\"y2\", _this._calcNeedleEnd().y);\n    this.svgEls.needle.setAttribute(\"stroke-width\", _this._calcNeedleWidth());\n    this.svgEls.needle.setAttribute(\"stroke\", _this.o.needleColor);\n    this.svgEls.needle.setAttribute(\"z-index\", \"1000\");\n    this.svgEls.needle.setAttribute(\"stroke-linecap\", \"round\");\n\n    this._appendSvgEls();\n    this._update();\n  }\n\n  /**\n   * Initializes mouse and touch event handlers.\n   * @override\n   * @private\n   */\n   _initHandlers() {\n      const _this = this;\n\n      let y0 = 0;\n      let yD = 0;\n      let newVal = _this.getState().val;\n\n      this.handlers = {\n\n       touch: function(ev) {\n          y0 = ev.clientY;\n\n          document.addEventListener(\"mousemove\", _this.handlers.move);\n          document.addEventListener(\"touchmove\", _this.handlers.move);\n          document.addEventListener(\"mouseup\", _this.handlers.release);\n          document.addEventListener(\"touchend\", _this.handlers.release);\n        },\n\n        move: function(ev) {\n          ev.preventDefault();\n\n          yD = y0 - ev.clientY;\n          y0 = ev.clientY;\n\n          newVal = _this.state.val + (yD * _this.o.mouseSensitivity * _this._calcMovePrecision());\n          newVal = Math.max(newVal, _this.o.minVal);\n          newVal = Math.min(newVal, _this.o.maxVal);\n\n          _this.setState({\n            val: newVal\n          });\n        },\n\n        release: function() {\n          document.removeEventListener(\"mousemove\", _this.handlers.move);\n          document.removeEventListener(\"touchmove\", _this.handlers.move);\n        }\n      };\n\n      this.svg.addEventListener(\"mousedown\", _this.handlers.touch);\n      this.svg.addEventListener(\"touchstart\", _this.handlers.touch);\n   }\n\n  /**\n   * Updates (redraws) components based on state.\n   * @override\n   * @private\n   */\n   _update() {\n     // change the needle angle\n     this.svgEls.needle.setAttribute(\"x1\", this._calcNeedleCenter().x);\n     this.svgEls.needle.setAttribute(\"y1\", this._calcNeedleCenter().y);\n     this.svgEls.needle.setAttribute(\"x2\", this._calcNeedleEnd().x);\n     this.svgEls.needle.setAttribute(\"y2\", this._calcNeedleEnd().y);\n\n     // change the active arc length\n     this.svgEls.activeArc.setAttribute(\"d\",\n       this._calcSvgArcPath(\n         this._calcNeedleCenter().x,\n         this._calcNeedleCenter().y,\n         this._calcDialRadius(),\n         0.65 * Math.PI,\n         this._calcNeedleAngle() - 0.5 * Math.PI\n     ));\n\n     // if the value is at min, change the color to match needle color\n     // - otherwise the active part will be visible beneath the needle\n     if (this.state.val === this.o.minVal) {\n       this.svgEls.activeArc.setAttribute(\"stroke\", this.o.needleColor);\n     } else {\n       this.svgEls.activeArc.setAttribute(\"stroke\", this.o.activeColor);\n     }\n   }\n\n  /* ==============================================================================================\n  *  INTERNAL FUNCTIONALITY METHODS\n  */\n\n   /** \n    * Calcultes the stroke width for the background and active arcs.\n    * @private\n    * @returns {number} - Arc stroke width;\n    */\n   _calcArcStrokeWidth() {\n     return this._calcDialRadius() / 5;\n   }\n\n   /** \n    * Calculates the dial radius.\n    * @private\n    * @returns {number} - Radius of the dial.\n    */\n   _calcDialRadius() {\n     let radius = (Math.min(this._getWidth(), this._getHeight()) / 2) * 0.89;\n     radius = Math.trunc(radius);\n     return radius;\n   }\n\n   /** \n    * Calculates the needle angle for a given state val.\n    * @private\n    * @returns {number} - Angle of the needle.\n    */\n   _calcNeedleAngle() {\n     const _this = this;\n\n     return (\n              // protect against divide by 0:\n              ((this.o.maxVal - _this.o.minVal) !== 0) ?\n                  (  \n                    (_this.state.val - _this.o.minVal) / (_this.o.maxVal - _this.o.minVal) * (1.7 * Math.PI) + \n                    (1.15 * Math.PI)\n                  )  \n                : ( 0.5 * (1.7 * Math.PI) + (1.15 * Math.PI) )\n            );\n   }\n\n   /** \n    * Calculates the center of the needle.\n    * @private\n    * @returns {object} - {x, y} object representing the needle center coordinates.\n    */\n   _calcNeedleCenter() {\n     const _this = this;\n     return {\n       x: Math.trunc(_this._getWidth() / 2),\n       y: Math.trunc(_this._getHeight() / 2)\n     };\n   }\n\n   /** \n    * Calculates the position of end of the needle\n    * @private\n    * @returns {object} - {x, y} object representing the end of the needle. \n    */\n   _calcNeedleEnd() {\n     const _this = this;\n     return {\n       x: _this._calcNeedleCenter().x + (Math.sin(_this._calcNeedleAngle()) * _this._calcDialRadius()),\n       y: _this._calcNeedleCenter().y - (Math.cos(_this._calcNeedleAngle()) * _this._calcDialRadius())\n     };\n   }\n\n   /** \n    * Calculates the needle width.\n    * @private\n    * @returns {number} - The width of the needle in px.\n    */\n   _calcNeedleWidth() {\n     return this._calcDialRadius() / 5;\n   }\n\n   /** \n    * Calculates the path for an svg arc based on cx, cy, r, startAngle, endAngle.\n    * The input parameters are the way arcs are represented in HTML canvas.\n    * @private\n    * @param {number} cx - Center X.\n    * @param {number} cy - Center Y.\n    * @param {number} r - Radius.\n    * @param {number} startAngle - Start angle in radians.\n    * @param {number} endAngle - End angle in radians.\n    * @returns {string} - A string to be used for the arc path by an SVG arc object.\n    */\n   _calcSvgArcPath(cx, cy, r, startAngle, endAngle) {\n     let x1 = cx + (r * Math.cos(startAngle));\n     let y1 = cy + (r * Math.sin(startAngle));\n     let x2 = cx + (r * Math.cos(endAngle));\n     let y2 = cy + (r * Math.sin(endAngle));\n     let largeArc = (endAngle - startAngle) < Math.PI ? 0 : 1;\n     let sweep = (endAngle - startAngle) < Math.PI ? 1 : 1;\n\n     return [\"M\", x1, y1, \"A\", r, r, 0, largeArc, sweep, x2, y2].join(\" \");\n   }\n\n   /**\n    * Calculates the precision with which the state value changes when moved.\n    */\n   _calcMovePrecision() {\n     let precision = (this.o.maxVal - this.o.minVal) / 127;\n     return precision;\n   }\n}\n\nexport default Dial;\n\n\n// WEBPACK FOOTER //\n// ./src/ui/dial.js","import AudioPatch from './audio-patch';\nimport AudioModuleUtil from 'audio_modules/core/util';\nimport shimWebAudioConnect from 'audio_modules/core/shim-web-audio-connect';\nimport AdditiveSynth from 'audio_modules/AdditiveSynth';\nimport ChannelStrip from 'audio_modules/channel-strip';\nimport Envelope from 'audio_modules/envelope';\nimport StereoFeedbackDelay from 'audio_modules/StereoFeedbackDelay';\nimport OscillatorVoice from 'audio_modules/oscillator-voice';\nimport AdditiveSynthVoice from 'audio_modules/additive-synth-voice'\n\n/**\n * Class representing an Audio Module Manager.\n * Audio Module Managers facilitate creating and managing Audio Patches.\n * @class\n */\nclass AudioModuleManager {\n  \n  /**\n   * @constructor\n   * @param {AudioContext} [audioCtx] - The Audio Context to use. If this argument is not provided,\n   *                                    a new Audio Context will be created and associated with this\n   *                                    Audio Module Manager.\n   */\n  constructor(audioCtx) {\n    this.AUDIO_CTX = (typeof audioCtx === \"undefined\") ? new AudioContext() : audioCtx;\n\n    // Shim the WebAudio connect and disconnect methods so that we can connect and\n    // disconnect AudioModules the same way as WebAudio AudioNodes and use AudioNodes\n    // interchangably with AudioModules\n    shimWebAudioConnect(this.AUDIO_CTX);\n\n    this.destination = this.AUDIO_CTX.destination;\n  }\n\n  /**\n   * Return the Audio Context associated with this Module Manager.\n   * @returns {AudioContext} - The Audio Context associated with this Module Manager.\n   */\n  getContext() {\n    return this.AUDIO_CTX;\n  }  \n  \n  /**\n  * Return the Audio Context destination associated with with this Module Manager.\n  * @returns {AudioNode} - The audio destination node associated with this Module Manager.\n  */\n getDestination() {\n   return this.AUDIO_CTX.destination;\n }\n\n  /**\n   * An audio patch is a collection of connected audio modules that form a meaningful unit\n   * @param {object} initObj - An object specifying the initialization parameters,\n   *                            containing two properties: modules, and connectionPaths\n   * @param {object} initObj.modules - An object representing the named audio modules used in this patch\n   * @param {array} initObj.connectionPaths - An 2D array of strings, where each string represents the name of\n   *                              an Audio Module (matching the way it is named in the 'modules' object),\n   *                              and the sequence of these names represents an audio path.\n   *                              For example, the following is one possibility:\n   *                                [[\"synth1\", \"delay\", \"reverb\", \"output\"],\n   *                                [\"synth2\", \"reverb\"]]\n   *                              This connection specifies two connection paths:\n   *                                synth1 -> delay -> reverb -> output\n   *                              And the second, where synth2 is connected to the same reverb used\n   *                              in the first paths\n   *                                synth2 -> reverb -> output\n   *                              Note that since the reverb is already connected to the output by the\n   *                              first path, it does not need to be redundantly connected in the second path\n   * @return {object} moduleMapObj - an object used as a map where keys are strings used to name each module,\n   *                                 and values are the module objects themselves\n   */\n  createAudioPatch(initObj) {\n    const _this = this;\n\n    initObj = initObj || {};\n\n    // moduleMap will store the modules created keyed by the names given to them\n    // keys are arbitrary strings used as names for each module\n    // values are the module objects themselves\n    let moduleMapObj = {};\n\n    try {\n      // try to create the modules requested in the initObj and store them in moduleMapObj\n      if (typeof initObj.modules !== \"object\") throw (\"Exception in initAudioPatch: no audio modules provided in initiation object\");\n\n      Object.keys(initObj.modules).forEach(audioModuleName => {\n        let audioModuleSpec = initObj.modules[audioModuleName];\n\n        // if the audio module type is specified as a string, create the corresponding modules\n        if (typeof audioModuleSpec === \"string\") {\n          // placeholder to use when creating the new module\n          let newAudioModule = null;\n\n          // use name in lowercase with whitespace removed\n          switch (audioModuleSpec.toLowerCase().replace(/[\\W-]+/g, \"\")) {\n            case \"additivesynth\":\n              newAudioModule = _this.createAdditiveSynth();\n              break;\n\n            case \"additivesynthvoice\": \n              newAudioModule = _this.createAdditiveSynthVoice();\n              break;\n\n            case \"biquadfilter\":\n            case \"filter\":\n              newAudioModule = _this.createBiquadFilter();\n              break;\n\n            case \"channelstrip\":\n              newAudioModule = _this.createChannelStrip();\n              break;\n\n            case \"destination\":\n              newAudioModule = _this.createDestination()\n              break;\n\n            case \"envelope\":\n              newAudioModule = _this.createBiquadFilter();\n              break;\n\n            case \"oscillator\":\n              newAudioModule = _this.createOscillator();\n              break;\n\n            case \"oscillatorvoice\":\n              newAudioModule = _this.createOscillatorVoice();\n              break;\n\n            case \"stereofeedbackdelay\":\n            case \"delay\":\n              newAudioModule = _this.createStereoFeedbackDelay();\n              break;\n\n            default:\n              throw (\"Exception in initAudioPatch: no such module \" + audioModuleSpec);\n              break;\n          }\n\n          moduleMapObj[audioModuleName] = newAudioModule;\n        }\n      });\n\n      // try to connect the modules\n      if (typeof initObj.connections === \"object\" && Array.isArray(initObj.connections)) {\n        initObj.connections.forEach(connectionPath => {\n          for (let i = 0; i < connectionPath.length - 1; i++) {\n            let currentModule = moduleMapObj[connectionPath[i]];\n            let nextModule = moduleMapObj[connectionPath[i + 1]];\n            currentModule.connect(nextModule);\n          }\n        });\n      }\n    }\n    catch (e) {\n      console.log(e);\n      moduleMapObj = null;\n    }\n\n    return new AudioPatch(moduleMapObj, _this.AUDIO_CTX, _this);\n  }\n\n  /**\n   * Create an Additive Synth Audio Module\n   */\n  createAdditiveSynth(o) {\n    o = o || {};\n    return new AdditiveSynth(this.AUDIO_CTX, o);\n  }\n\n  /**\n   * Create an Additive Synth Voice Audio Module \n   */\n  createAdditiveSynthVoice(o) {\n    o = o || {};\n    return new AdditiveSynthVoice(this.AUDIO_CTX, o);\n  }\n\n  /**\n   * Create a Biquad Filter Audio Module\n   */\n  createBiquadFilter() {\n    return this.AUDIO_CTX.createBiquadFilter();\n  }\n\n  /**\n   * Create an Oscillator\n   */\n  createOscillator() {\n    return this.AUDIO_CTX.createOscillator();\n  }\n\n  /**\n   * Create an Oscillator Voice\n   */\n  createOscillatorVoice(o) {\n    o = o || {};\n    return new OscillatorVoice(this.AUDIO_CTX, o);\n  }\n\n  /**\n   * Create an Gain\n   */\n  createGain() {\n    return this.AUDIO_CTX.createGain();\n  }\n\n  /**\n   * Create a Channel Strip Audio Module\n   */\n  createChannelStrip(o) {\n    o = o || {};\n    return new ChannelStrip(this.AUDIO_CTX, o);\n  }\n\n  /**\n   * Create a destination node\n   */\n  createDestination() {\n    return this.AUDIO_CTX.destination;\n  }\n\n  /**\n   * Create an Envelope Audio Module\n   */\n  createEnvelope(o) {\n    o = o || {};\n    return new Envelope(this.AUDIO_CTX, o);\n  }\n\n  /**\n   * Create a Stereo Feedback Delay Audio Module\n   */\n  createStereoFeedbackDelay(o) {\n    o = o || {};\n    return new StereoFeedbackDelay(this.AUDIO_CTX, o);\n  }\n}\n\nexport default AudioModuleManager;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/core/audio-module-manager.js","/**\n * Class representing an Audio Patch created by an Audio Module Manager.\n * @class \n */\nclass AudioPatch {\n\n  /**\n   * @constructor\n   * @param {Object} moduleMap\n   * @param {AudioContext} audioCtx\n   * @param {AudioModuleManager} audioModuleManager\n   */\n  constructor(moduleMap, audioCtx, audioModuleManager) {\n    this.MODULE_MAP = moduleMap;\n    this.AUDIO_CTX = audioCtx;\n    this.AUDIO_MODULE_MANAGER = audioModuleManager;\n    \n    // a more consise alias\n    this.modules = this.MODULE_MAP;\n  }\n\n  /**\n   * Returns the Audio Context\n   * @returns {AudioContext}\n   */\n  getAudioContext() {\n    return this.AUDIO_CTX;\n  }\n\n  /**\n   * Alias for {getAudioContext}.\n   * @returns {AudioContext}\n   */\n  getAudioCtx() {\n    return this.getAudioContext();\n  }\n\n  /**\n   * Returns the module map.\n   * @returns {object} - Object representing the module map.\n   */\n  getModuleMap() {\n    return this.MODULE_MAP;\n  }\n\n  /**\n   * Alias for {getModuleMap}. Returns the module map.\n   * @returns {object} - Object representing the module map.\n   */\n  modules() {\n    return this.MODULE_MAP;\n  }\n\n  /**\n   * Returns the Audio Module Manager associated with this patch.\n   * @returns {AudioModuleManager} - The Audio Module Manager associated with this patch.\n   */\n  getAudioModuleManager() {\n    return this.AUDIO_MODULE_MANAGER;\n  }\n}\n\nexport default AudioPatch;\n\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/core/audio-patch.js","import AdditiveSynthVoice from './additive-synth-voice';\nimport ChannelStrip from './channel-strip';\nimport AudioModuleUtil from './core/util';\n\nclass AdditiveSynth {\n  constructor (audioCtx, o) {\n      o = o || {};\n\n      this._audioCtx = audioCtx;\n\n      var numVoices = o.numVoices || 16;\n      this._numOvertones = o.numOvertones || 20;\n\n      this._voices = [];\n      this._availableVoices = [];\n      this._busyVoices = []; // { voiceNum: {number}, pitch: {number} }\n      this._channelStrip = new ChannelStrip(this._audioCtx);\n\n      for (var i = 0; i < numVoices; i++) {\n        this._voices.push(new AdditiveSynthVoice(this._audioCtx, { numOvertones: this._numOvertones }));\n        this._voices[i].connect(this._channelStrip.input);\n        this._availableVoices.push(i);\n      }\n\n      this.output = this._channelStrip.output;\n      this._audioModuleOutput = this.output;\n  }\n\n  /* =================== */\n  /* --- Audio setup --- */\n  /* =================== */\n\n  /**\n   * Connect to another AudioNode or AudioModule\n   */\n  connect (destination) {\n    // if destination has an input property, connect to it (destination is an AudioModule)\n    if (typeof destination.input === \"object\") {\n      this.output.connect(destination.input);\n    }\n    // else destination is an AudioNode and can be connected to directly\n    else {\n      this.output.connect(destination);\n    }\n  }\n\n  /**\n   * Disconnect from an AudioNode or AudioModule\n   */\n  disconnect (destination) {\n    // if destination has an input property, disconnect from it (destination is an AudioModule)\n    if (typeof destination.input === \"object\") {\n      this.output.disconnect(destination.input);\n    // else destination is an AudioNode and can be disconnected from directly\n    } else {\n      this.output.disconnect(destination);\n    }\n  }\n\n  /* =========================================================================================== */\n  /* GETTERS AND SETTERS                                                                         */\n  /* =========================================================================================== */\n\n  /** Number of voices */\n  get numVoices () {\n    return this._voices.length;\n  }\n  set numVoices (newNumVoices) {\n    const _this = this;\n\n    // if the new number of voices is more than previous number, we add voices\n    if (newNumVoices > this.numVoices) {\n      for (var i = this.numVoices; i < newNumVoices; i++) {\n        this._voices.push(new AdditiveSynthVoice(this._audioCtx, { numOvertones: this._numOvertones }));\n        this._voices[i].connect(this._channelStrip.input);\n        this._availableVoices.push(i);\n      }\n\n    // if the new number is less than previous, remove voices\n    } else if (newNumVoices < this.numVoices) {\n      let numVoicesToDelete = this.numVoices - newNumVoices;\n      let numAvailableVoices = this._availableVoices.length;\n\n      // if the number of voices to delete is less then or equal to the number of available (inactive) voices, delete these voices\n      if (numVoicesToDelete <= numAvailableVoices) {\n        deleteAvailableVoices(numVoicesToDelete);\n      }\n\n      // else delete all available (inactive) voices and also required number of busy voices\n      else {\n        let numBusyVoicesToDelete = numVoicesToDelete - numAvailableVoices;\n\n        deleteAvailableVoices(numAvailableVoices);\n        deleteBusyVoices(numBusyVoicesToDelete);\n      }\n\n      function deleteAvailableVoices (numVoicesToDelete) {\n        for(let i = 0; i < numVoicesToDelete; i++) {\n          let voiceToDelete = _this._availableVoices[i];\n\n          _this._voices.splice(voiceToDelete, 1);\n          _this._availableVoices.splice(i, 1);\n\n          // remap the available and busy voices because we modified the voices stack\n          _this._availableVoices = _this._availableVoices.map(voice => {\n            return (voice > voiceToDelete) ? voice - 1 : voice;\n          });\n          _this._busyVoices = _this._busyVoices.map(voice => {\n            return {\n              voiceNum: (voice.voiceNum > voiceToDelete) ? voice.voiceNum - 1 : voice.voiceNum,\n              pitch: voice.pitch\n            };\n          });\n        }\n      }\n\n      function deleteBusyVoices (numBusyVoicesToDelete) {\n        // delete the required number of busy voices\n        for (let i = 0; i < numBusyVoicesToDelete; i++) {\n          let voiceToDelete = _this._busyVoices[i].voiceNum;\n\n          _this.releaseVoice(voiceToDelete);\n          _this._voices.splice(voiceToDelete, 1);\n          _this._busyVoices.splice(i, 1);\n\n          // remap the busy voices pointer stack because we modified the voices stack\n          _this._busyVoices = _this._busyVoices.map(voice => {\n            return {\n              voiceNum: (voice.voiceNum > voiceToDelete) ? voice.voiceNum - 1 : voice.voiceNum,\n              pitch: voice.pitch\n            };\n          });\n        }\n      }\n    }\n    console.log('newNumVoices: ' + this.numVoices);\n    return this;\n  }\n  setNumVoices (newNumVoices) {\n    this.numVoices = newNumVoices;\n  }\n\n  /** Number of overtones */\n  get numOvertones () {\n    return this._numOvertones;\n  }\n  set numOvertones (newNumOvertones) {\n    this._voices.forEach(voice => {\n      voice.numOvertones = newNumOvertones;\n    });\n    this._numOvertones = newNumOvertones;\n    return this;\n  }\n  setNumOvertones (newNumOvertones) {\n    this.numOvertones = newNumOvertones;\n  }\n\n  /** Gain */\n  get gain () {\n    return this._channelStrip.outputGain;\n  }\n  set gain (newGain) {\n    this._channelStrip.outputGain = newGain;\n    return this;\n  }\n  setGain (newGain) {\n    this.gain = newGain;\n  }\n\n  /** Pan */\n  get pan () {\n    return this._channelStrip.pan;\n  }\n  set pan (newPan) {\n    this._channelStrip.pan = newPan;\n    return this;\n  }\n  setPan (newPan) {\n    this.pan = newPan;\n  }\n\n  /** Get overtone amplitude */\n  getOvertoneAmplitude (voiceNum, otNum) {\n    this._voices[voiceNum].getOvertoneAmplitude(otNum);\n    return this;\n  }\n\n  /** Overtone amplitude */\n  setOvertoneAmplitude (voiceNum, otNum, newAmp) {\n    this._voices[voiceNum].setOvertoneAmplitude(otNum, newAmp);\n    return this;\n  }\n\n  /* ========================= */\n  /* --- Envelope controls --- */\n  /* ========================= */\n\n  /** Attack envelope */\n  set attackEnvelope (newEnv) {\n    this._voices.forEach(voice => {\n      voice.attackEnvelope = newEnv;\n    });\n  }\n\n  /** Release envelope */\n  set releaseEnvelope (newEnv) {\n    this._voices.forEach(voice => {\n      voice.releaseEnvelope = newEnv;\n    });\n  }\n\n  /** Set the attack envelope for an overtone\n   *  @param {number} otNum - Number of overtone for which to set envelope\n   *  @param {array} newEnv - 2D array representing the new envelope\n   */\n  setOvertoneAttackEnvelope (otNum, newEnv) {\n    this._voices.forEach(voice => {\n      voice.setOvertoneAttackEnvelope(otNum, newEnv);\n    });\n    return this;\n  }\n\n  /** Set the release envelope for an overtone\n   *  @param {number} otNum - Number of overtone for which to set envelope\n   *  @param {array} newEnv - 2D array representing the new envelope\n   */\n  setOvertoneReleaseEnvelope (otNum, newEnv) {\n    this._voices.forEach(voice => {\n      voice.setOvertoneReleaseEnvelope(otNum, newEnv);\n    });\n    return this;\n  }\n\n  /**\n   * Play a note using the current attack envelope\n   * @param {(number|string)} note - MIDI pitch value or note name (i.e. A0 or F#8)\n   */\n  playNote (note) {\n    var noteNameFormat = /^([a-g]|[A-G])(#|b)?([0-9]|10)$/;\n    var selectedVoice = -1;\n    var freq = -1;\n\n    // check for correct note format and convert to freq\n    if (typeof note === 'number'\n        && note >= 0 && note <= 127) {\n      freq = AudioModuleUtil.midiToFreq(note);\n    } else if (typeof note === 'string'\n               && noteNameFormat.test(note) === true) {\n      note = AudioModuleUtil.noteNameToMidi(note); // convert to MIDI so we can keep track of active note in _busyVoices\n      freq = AudioModuleUtil.midiToFreq(note);\n    }\n\n    // if the correct format for note was received\n    if (freq !== -1) {\n      //pick a voice\n      if (this._availableVoices.length > 0) {\n        selectedVoice = this._availableVoices.shift();\n      } else {\n        selectedVoice = this._busyVoices.shift().voiceNum;\n        this.releaseVoice(selectedVoice);\n      }\n      this._busyVoices.push({ voiceNum: selectedVoice, note: note });\n\n      this.attackVoice(selectedVoice, freq);\n    }\n  }\n\n  /**\n   * Release a currently playing note\n   * @param {(number|string)} note - MIDI pitch value or note name (i.e. A0 or F#8)\n   */\n  releaseNote (note) {\n    var noteNameFormat = /^([a-g]|[A-G])(#|b)?([0-9]|10)$/;\n    var selectedVoice = -1;\n\n    // check for correct note format and convert to freq\n    if (typeof note === 'number'\n        && note >= 0 && note <= 127) {\n    } else if (typeof note === 'string'\n               && noteNameFormat.test(note) === true) {\n      note = AudioModuleUtil.noteNameToMidi(note);\n    } else {\n      note = -1;\n    }\n\n    if (note !== -1) {\n      var selectedBusyNodeIndex = this._busyVoices.findIndex((busyVoice) => {\n        return busyVoice.note === note;\n      });\n\n      if (selectedBusyNodeIndex !== -1) {\n        selectedVoice = this._busyVoices[selectedBusyNodeIndex].voiceNum;\n\n        this._availableVoices.push(selectedVoice);\n        this._busyVoices.splice(selectedBusyNodeIndex, 1);\n      }\n    }\n\n    if (selectedVoice !== -1) {\n      this.releaseVoice(selectedVoice);\n    } else return this;\n  }\n\n  /**\n   * Execute the attack for a given voice with a given frequency\n   **/\n  attackVoice (voiceNum, freq) {\n    this._voices[voiceNum].setFrequency(freq);\n    this._voices[voiceNum].attack();\n  }\n\n  /**\n   * Execute the release for a given voice\n   **/\n  releaseVoice (voiceNum) {\n    this._voices[voiceNum].release();\n  }\n}\n\nexport default AdditiveSynth\n\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/AdditiveSynth.js","/**\n * Mixin for methods related to options\n * @mixin\n */\nlet AudioModuleOptionsMixin = {\n  \n    /**\n     * Initializes the options.\n     * @private\n     * @param {object} o - Options.\n     */\n    _initOptions: function _initOptions(o) {\n      const _this = this;\n      o = o || {};\n  \n      Object.keys(o).forEach(key => {\n        if (_this.o.hasOwnProperty(key) && _this.o[key] !== o[key]) {\n          _this.o[key] = o[key];\n        }\n      });\n    },\n  \n    /**\n     * Get the options object\n     * @public\n     * @return {object} this.o - Options\n     */\n    getOptions: function getOptions() {\n      return Object.assign({}, this.o);\n    },\n  \n    /**\n     * Set the options\n     * Uses a diffing function, so only specified keys that have new values will be changed\n     * @public\n     * @param {object} o - options\n     * @return {boolean} isChanged - Returns a boolean indicating whether any option has been changed\n     */\n    setOptions: function setOptions(o) {\n      const _this = this;\n      o = o || {};\n      let isChanged = false;\n  \n      Object.keys(o).forEach(key => {\n        if (_this.o.hasOwnProperty(key) && _this.o[key] !== o[key]) {\n          _this.o[key] = o[key];\n          isChanged = true;\n        }\n      });\n  \n      if (isChanged) {\n        this.setState();\n      }\n  \n      return isChanged;\n    }\n  };\n  \n  export default AudioModuleOptionsMixin;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/core/audio-module-options-mixin.js","import AudioModule from \"./core/audio-module\"; \n\nclass StereoFeedbackDelay extends AudioModule {\n\n  /**\n   * Stereo delay with feedback\n   * @param {object} [o] - Options\n   * @param {number} [o.delayTimeL]\n   * @param {number} [o.delayTimeR]\n   * @param {number} [o.feedbackL]\n   * @param {number} [o.feedbackR]\n   * @param {number} [o.crossfeedL]\n   * @param {number} [o.crossfeedR]\n   * @param {number} [o.dryMixL]\n   * @param {number} [o.dryMixR]\n   * @param {number} [o.wetMixL]\n   * @param {number} [o.wetMixR]\n   */\n  constructor (audioCtx, o) {\n\n    try {\n      super(audioCtx);\n\n      // shim StereoPanner if it's not implemented\n      if (typeof this._audioCtx.createStereoPanner === 'undefined') {\n        this._audioCtx.createStereoPanner = function () { return new StereoPannerShim(this)};\n      }\n\n      o = o || {};    \n      this._audioCtx = audioCtx; \n      this._maxDelayTime = o.maxDelayTime || 10;\n\n      this._input = this._audioCtx.createGain();\n      this._channelSplitter = this._audioCtx.createChannelSplitter(2);\n      this._dryMixL = this._audioCtx.createGain();\n      this._dryMixR = this._audioCtx.createGain();\n      this._wetMixL = this._audioCtx.createGain();\n      this._wetMixR = this._audioCtx.createGain();\n      this._delayL = this._audioCtx.createDelay(this._maxDelayTime);\n      this._delayR = this._audioCtx.createDelay(this._maxDelayTime);\n      this._feedbackL = this._audioCtx.createGain();\n      this._feedbackR = this._audioCtx.createGain();\n      this._crossfeedL = this._audioCtx.createGain();\n      this._crossfeedR = this._audioCtx.createGain();\n      this._channelMerger = this._audioCtx.createChannelMerger(2);\n      this._output = this._audioCtx.createGain();\n  \n      this._connectAudioNodes();\n      this._setAudioDefaults(o);\n  \n      this.input = this._input;\n      this.output = this._output;\n\n    } catch (err) {\n\n      console.error(err);\n      throw new Error(\"Failed to create StereoFeedbackDelay audio module.\");\n    }\n  }\n\n  _connectAudioNodes () {\n    this._input.connect(this._channelSplitter);\n    this._channelSplitter.connect(this._dryMixL, 0);\n    this._channelSplitter.connect(this._dryMixR, 1);\n    this._channelSplitter.connect(this._delayL, 0);\n    this._channelSplitter.connect(this._delayR, 1);\n    this._delayL.connect(this._feedbackL);\n    this._delayR.connect(this._feedbackR);\n    this._feedbackL.connect(this._delayL);\n    this._feedbackR.connect(this._delayR);\n    this._delayL.connect(this._crossfeedR);\n    this._delayR.connect(this._crossfeedL);\n    this._crossfeedL.connect(this._delayL);\n    this._crossfeedR.connect(this._delayR);\n    this._delayL.connect(this._wetMixL);\n    this._delayR.connect(this._wetMixR);\n    this._dryMixL.connect(this._channelMerger, 0, 0);\n    this._dryMixR.connect(this._channelMerger, 0, 1);\n    this._wetMixL.connect(this._channelMerger, 0, 0);\n    this._wetMixR.connect(this._channelMerger, 0, 1);\n    this._channelMerger.connect(this._output);\n\n    return this;\n  }\n\n  _setAudioDefaults (o) {\n    o = o || {};\n\n    this._input.gain.value = 1;\n    this._delayL.delayTime.value = o.delayTimeL || 0.5;\n    this._delayR.delayTime.value = o.delayTimeR || 0.5;\n    this._dryMixL.gain.value = o.dryMixL || 1;\n    this._dryMixR.gain.value = o.dryMixR || 1;\n    this._wetMixL.gain.value = o.wetMixL || 0.2;\n    this._wetMixR.gain.value = o.wetMixR || 0.2;\n    this._feedbackL.gain.value = o.feedbackL || 0.1;\n    this._feedbackR.gain.value = o.feedbackR || 0.1;\n    this._crossfeedL.gain.value = o.crossfeedL || 0;\n    this._crossfeedR.gain.value = o.crossfeedR || 0;\n    this._output.gain.value = 1;\n\n    return this;\n  }\n\n  /**\n   * Connect to another AudioNode or AudioModule\n   */\n  connect (destination) {\n    // if destination has an input property, connect to it (destination is an AudioModule)\n    if (typeof destination.input === \"object\") {\n      this.output.connect(destination.input);\n    }\n    // else destination is an AudioNode and can be connected to directly\n    else {\n      this.output.connect(destination);\n    }\n  }\n\n  /**\n   * Disconnect from an AudioNode or AudioModule\n   */\n  disconnect (destination) {\n    // if destination has an input property, disconnect from it (destination is an AudioModule)\n    if (typeof destination.input === \"object\") {\n      this.output.disconnect(destination.input);\n    // else destination is an AudioNode and can be disconnected from directly\n    } else {\n      this.output.disconnect(destination);\n    }\n  }\n\n  /* =========================== */\n  /* --- Getters and setters --- */\n  /* =========================== */\n\n  /** Delay time left */\n  get delayTimeL () {\n    return this._delayL.delayTime;\n  }\n  set delayTimeL (time) {\n    this._delayL.delayTime.value = time;\n    return this;\n  }\n\n  /** Delay time right */\n  get delayTimeR () {\n    return this._delayR.delayTime;\n  }\n  set delayTimeR (time) {\n    this._delayR.delayTime.value = time;\n    return this;\n  }\n\n  /** Feedback L */\n  get feedbackL () {\n    return this._feedbackL.gain;\n  }\n  set feedbackL (gain) {\n    this._feedbackL.gain.value = gain;\n    return this;\n  }\n\n  /** Feedback R */\n  get feedbackR () {\n    return this._feedbackR.gain;\n  }\n  set feedbackR (gain) {\n    this._feedbackR.gain.value = gain;\n    return this;\n  }\n\n  /** Cross-feed L */\n  get crossfeedL () {\n    return this._crossfeedL.gain;\n  }\n  set crossfeedL (gain) {\n    this._crossfeedL.gain.value = gain;\n    return this;\n  }\n\n  /** Cross-feed R */\n  get crossfeedR () {\n    return this._crossfeedR.gain;\n  }\n  set crossfeedR (gain) {\n    this._crossfeedR.gain.value = gain;\n    return this;\n  }\n\n  /** Dry mix L */\n  get dryMixL () {\n    return this._dryMixL.gain;\n  }\n  set dryMixL (gain) {\n    this._dryMixL.gain.value = gain;\n    return this;\n  }\n\n  /** Dry mix R */\n  get dryMixR () {\n    return this._dryMixR.gain;\n  }\n  set dryMixR (gain) {\n    this._dryMixR.gain.value = gain;\n    return this;\n  }\n\n  /** Wet mix L */\n  get wetMixL () {\n    return this._wetMixL.gain;\n  }\n  set wetMixL (gain) {\n    this._wetMixL.gain.value = gain;\n    return this;\n  }\n\n  /** Wet mix R */\n  get wetMixR () {\n    return this._wetMixR.gain;\n  }\n  set wetMixR (gain) {\n    this._wetMixR.gain.value = gain;\n    return this;\n  }\n}\n\nexport default StereoFeedbackDelay;\n\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/StereoFeedbackDelay.js","import AudioModule from \"audio_modules/core/audio-module\";\nimport verifyAudioContextFeatures from \"audio_modules/core/verify-audio-context-features\";\n\n/** \n * Class representing a Stereo Panner Shim.\n * This shim provides an implementation of StereoPannerNode for WebAudio implementations that\n * do not provide it.\n * @class\n */\nclass StereoPannerShim extends AudioModule {\n\n  /**\n   * @constructor\n   * @param {AudioContext} audioCtx - Audio Context in which this module participates. \n   */\n  constructor(audioCtx) {\n    super(audioCtx);\n\n    const _this = this;\n\n    // generate a setter for the pan value\n    (function generatePanSetter (val) {\n      _this.pan = new Number(val);\n\n      Object.defineProperty(_this.pan, \"value\", {\n        set: function (newVal) {\n          newVal = (newVal > 1) ? 1 : newVal;\n          newVal = (newVal < -1) ? -1 : newVal;\n\n          _this.audioComponents.gainL.gain.value = -(newVal / 2) + 0.5;\n          _this.audioComponents.gainR.gain.value = (newVal / 2) + 0.5;\n\n          generatePanSetter(newVal);\n        }\n      });\n    }());\n  }\n\n  /* ============================================================================================= */\n  /*  INITIALIZATION METHODS\n  /* ============================================================================================= */\n  \n  /**\n   * Initialize audio components and their connections.\n   * @private @override\n   */\n  _initAudioComponents() {\n    const _this = this;\n\n    try {\n\n      verifyAudioContextFeatures(_this.audioCtx, [\"Gain\", \"ChannelMerger\"]);\n\n      this.audioComponents = {\n        gainL: _this.audioCtx.createGain(),  \n        gainR: _this.audioCtx.createGain(),\n        merger: _this.audioCtx.createChannelMerger(2)\n      };\n\n      this.input.connect(this.audioComponents.gainL);\n      this.input.connect(this.audioComponents.gainR);\n      this.audioComponents.gainL.connect(this.audioComponents.merger, 0, 0);\n      this.audioComponents.gainR.connect(this.audioComponents.merger, 0, 1);\n      this.audioComponents.merger.connect(this.output);\n    \n      console.log(\"initialized\");      \n    } catch(err) {\n      console.error(err);\n    }\n  }\n}\n\nexport default StereoPannerShim;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/stereo-panner-shim.js","import AudioModuleManager from \"audio_modules/core/audio-module-manager\";\nimport AudioModule from \"audio_modules/core/audio-module\";\nimport StereoPannerShim from \"audio_modules/stereo-panner-shim\";\n\nimport Dial from \"ui/dial\";\n\nconst AUDIO_CTX = new AudioContext();\nconst DEST = AUDIO_CTX.destination;\n\nAUDIO_CTX.createStereoPanner = function() {\n  console.log(\"Creating stereo panner...\"); \n  return new StereoPannerShim(AUDIO_CTX); \n};\n\nlet stereoPanner = AUDIO_CTX.createStereoPanner();\nlet oscillator = AUDIO_CTX.createOscillator();\nlet gain = AUDIO_CTX.createGain();\n\noscillator.connect(stereoPanner);\nstereoPanner.connect(gain);\ngain.connect(DEST);\n\ngain.gain.value = 0;\n\noscillator.frequency.value = 220;\noscillator.start();\n\n// pan dial\nvar panDial = new Dial(document.getElementById(\"pan-dial\"), {\n  minVal: -1,\n  maxVal: 1,\n  step: 0.01\n});\n\npanDial.addObserver(val => {\n  stereoPanner.pan.value = val;\n});\n\n// audio on/off toggle\ndocument.getElementById(\"stereo-panner-audio-toggle\").addEventListener(\"change\", function(ev) {\n  gain.gain.value = ev.target.checked ? 0.5 : 0;\n});\n\n\n// WEBPACK FOOTER //\n// ./test/manual_test/audio_modules/stereo-panner-shim.js"],"sourceRoot":""}