{"version":3,"sources":["webpack:///webpack/bootstrap 120cc813078f8b45a5e0","webpack:///./src/util/constraint.js","webpack:///./src/util/constraint-def.js","webpack:///./src/audio_modules/core/audio-module.js","webpack:///./src/ui/core/widget.js","webpack:///./src/audio_modules/core/util.js","webpack:///./src/audio_modules/core/verify-audio-context-features.js","webpack:///./src/audio_modules/channel-strip.js","webpack:///./src/audio_modules/envelope.js","webpack:///./src/util/util-math.js","webpack:///./src/audio_modules/core/shim-web-audio-connect.js","webpack:///./src/audio_modules/additive-synth-voice.js","webpack:///./src/audio_modules/oscillator-voice.js","webpack:///./src/ui/core/widget-mixin-svgns.js","webpack:///./src/ui/core/widget-mixin-state.js","webpack:///./src/ui/core/widget-mixin-options.js","webpack:///./src/ui/core/widget-mixin-observer.js","webpack:///./src/audio_modules/core/audio-module-manager.js","webpack:///./src/audio_modules/core/audio-patch.js","webpack:///./src/audio_modules/AdditiveSynth.js","webpack:///./src/audio_modules/core/audio-module-options-mixin.js","webpack:///./src/audio_modules/StereoFeedbackDelay.js","webpack:///./src/ui/graph.js","webpack:///./test/manual_test/audio_modules/envelope.js"],"names":["Constraint","spec","min","max","enum","transform","ConstraintSpec","specDefObj","constraintMap","_parseMap","targetObj","_this","forEach","_constrainBranch","keyBranch","target","constraint","key","undefined","Math","Array","find","c","cMap","push","Object","parentBranch","map","x","keys","keyIdx","newKeyBranch","curKey","length","arrFlag","i","keyBranchSlice","slice","j","_applyConstraint","AudioModule","audioCtx","numInputs","numOutputs","isAudioModule","isWebAudioConnectShimmed","input","createGain","output","audioComponents","_initOptions","_initAudioComponents","_initAudioParams","destination","outputIndex","inputIndex","connect","disconnect","assign","prototype","Widget","container","o","document","querySelector","Element","Error","svg","createElementNS","SVG_NS","appendChild","setAttribute","getBoundingClientRect","width","height","svgEls","handlers","state","stateConstraints","observers","_initStateConstraints","_initState","_initSvgEls","_initHandlers","values","appendSvgEls","svgEl","child","arrEl","newVal","newState","_getLeft","y","_getTop","top","left","AudioModuleUtil","midiToFreq","midiPitch","a4tuning","freq","pow","midiVelToGain","vel","noteNameToMidi","noteName","noteNameFormat","test","console","log","capture","exec","note","accidental","octave","noteFundamentalMap","noteFundamental","noteNameToFreq","VerifyAudioContextFeatures","features","feature","createAnalyser","createBuffer","createBufferSource","createBiquadFilter","createChannelMerger","createChannelSplitter","createConvolver","createDelay","createDynamicsCompressor","createIIRFilter","createOscillator","createPannerr","createStereoPanner","StereoPannerShim","warn","ChannelStrip","inputGain","panner","outputGain","err","error","gain","pan","value","Envelope","envGain","attackEnvelope","releaseEnvelope","_normalizeAttackEnvelope","_normalizeReleaseEnvelope","newEnv","env","a","t","cancelScheduledValues","currentTime","setValueAtTime","startTime","linearRampToValueAtTime","Promise","resolve","reject","window","setTimeout","point","MathUtil","getPrecision","val","decStr","split","round","precision","factor","quantize","q","qVal","abs","shimWebAudioConnect","audioNodePrototype","getPrototypeOf","webAudioConnect","webAudioDisconnect","AdditiveSynthVoice","overtones","ot","numOvertones","envelope","channelStrip","glide","getOutputGain","setOutputGain","getPan","setPan","getFrequency","otIdx","setFrequency","getAttackEnvelope","setAttackEnvelope","getReleaseEnvelope","taget","setReleaseEnvelope","setGain","gainArr","setOvertoneGain","newNumOvertones","curNumOvertones","getNumOvertones","pop","baseFreq","newOscillatorVoice","attack","release","pitch","OscillatorVoice","oscillator","setInputGain","start","frequency","type","real","imag","constructor","name","wave","createPeriodicWave","setPeriodicWave","setWaveformType","osc","WidgetStateMixin","getState","setInternalState","isChanged","hasOwnProperty","constrain","_update","setState","_notifyObservers","WidgetOptionsMixin","getOptions","setOptions","WidgetObserverMixin","addObserver","newObserver","observer","removeObserver","targetObserver","idx","splice","addListener","newListener","removeListener","targetListener","getVal","AudioModuleManager","AUDIO_CTX","AudioContext","initObj","moduleMapObj","modules","audioModuleSpec","audioModuleName","newAudioModule","toLowerCase","replace","createAdditiveSynth","createAdditiveSynthVoice","createChannelStrip","createDestination","createOscillatorVoice","createStereoFeedbackDelay","connections","isArray","connectionPath","currentModule","nextModule","e","AudioPatch","moduleMap","audioModuleManager","MODULE_MAP","AUDIO_MODULE_MANAGER","getAudioContext","AdditiveSynth","_audioCtx","numVoices","_numOvertones","_voices","_availableVoices","_busyVoices","_channelStrip","_audioModuleOutput","newNumVoices","newGain","newPan","voiceNum","otNum","getOvertoneAmplitude","newAmp","setOvertoneAmplitude","voice","setOvertoneAttackEnvelope","setOvertoneReleaseEnvelope","selectedVoice","shift","releaseVoice","attackVoice","selectedBusyNodeIndex","findIndex","busyVoice","deleteAvailableVoices","numVoicesToDelete","voiceToDelete","deleteBusyVoices","numBusyVoicesToDelete","numAvailableVoices","AudioModuleOptionsMixin","StereoFeedbackDelay","_maxDelayTime","maxDelayTime","_input","_channelSplitter","_dryMixL","_dryMixR","_wetMixL","_wetMixR","_delayL","_delayR","_feedbackL","_feedbackR","_crossfeedL","_crossfeedR","_channelMerger","_output","_connectAudioNodes","_setAudioDefaults","delayTime","delayTimeL","delayTimeR","dryMixL","dryMixR","wetMixL","wetMixR","feedbackL","feedbackR","crossfeedL","crossfeedR","time","Graph","vertices","vtx","vertexArray","xyPair","newVtx","minXVal","minYVal","isXFixed","isYFixed","xAnchor","yAnchor","maxXVal","maxYVal","newVertices","sort","b","addVertex","maxNumVertices","quantizeX","quantizeY","xDecimalPrecision","yDecimalPrecision","isEditable","vertexColor","fixedVertexColor","lineColor","backgroundColor","vertexRadius","lineWidth","mouseSensitivity","num","panel","lines","_getWidth","_getHeight","_appendSvgEls","targetVtx","targetLine","vtxPos0","x0","y0","x1","y1","dx","dy","touchPanel","ev","preventDefault","xPos","clientX","yPos","clientY","vertexState","_calcVertexState","touchVertex","addEventListener","moveVertex","deleteVertex","touchLine","moveLine","endMoveLine","dPos","_moveLine","removeEventListener","_deleteVertex","endMoveVertex","_moveVertex","line","idxSortMap","el","_addSvgVertex","_removeSvgVertex","stateVtx","svgVtx","pos","_calcVertexPos","vtxFill","prevVtx","prevPos","removeChild","svgLine","vtxIdx","isRemovable","newVertex","_addSvgLine","newLine","vertex","_removeSvgLine","lineIdx","vtx1","vtx2","vtx1curPos","parseInt","getAttribute","vtx2curPos","boundaryBL","boundaryTR","vtx1newPos","vtx2newPos","newPos","vtxState","normalizedWidth","normalizedHeight","vertexPos","AMM","createEnvelope","attackGraph","releaseGraph","attackBtn","releaseBtn","audioToggle","messageBox","checked","then","innerHTML"],"mappings":"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","file":"/test/manual_test/audio_modules/envelope-bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 50);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 120cc813078f8b45a5e0","/**\n * @class\n * Constraint object represents constraints on a value.\n * Instances of Constraint are used as leaves on a ConstraintSpec definition.\n * A ConstraintSpec useses Constraints to apply a constraint to leaves of an\n * arbitrarily nested object, whose leaves represent values that may be constrained.\n */\nclass Constraint {\n\n  /**\n   * @constructor\n   * @param {object} [spec] - Spec specifying the constraints.\n   * @param {number} [spec.min] - Minimum value.\n   * @param {number} [spec.max] - Maximum value.\n   * @param {array} [spec.enum] - Array of possible enumerable values.\n   * @param {function} [spec.transform] - A transformation function to apply to the value.\n   */\n  constructor(spec) {\n    spec = spec || {};\n\n    this.min = spec.min;\n    this.max = spec.max;\n    this.enum = spec.enum;\n    this.transform = spec.transform;\n  }\n}\n\nexport default Constraint;\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/constraint.js","import Constraint from \"./constraint\";\n\n/**\n * ConstraintSpec is used to apply a constraining function to a state object of arbitrary nestedness,\n * whose leaves are values that need to be constrained (i.e. to min or max values).\n * In order for ConstraintSpec to work properly, it's constructor must be given an object that\n * exactly mirrors the nested structure of the object to be constrained, with the leaves\n * containing instances of the Constraint class. Additional requirements (i.e. how to deal with nested arrays)\n * are outlined below.\n * TODO: expand explanation\n *\n * @class\n */\nclass ConstraintSpec {\n\n  /**\n   * @constructor\n   * @param {object} specDefObj - The constraint spec definition object, which defines the nesting\n   *                              structure of the objects that need to be constrained. The leaves\n   *                              of this specDef object must be objects of type Constraint, which\n   *                              act as the constraint definitions for each leaf.\n   */\n  constructor(specDefObj) {\n    this.constraintMap = [[]];\n    this._parseMap(specDefObj, this.constraintMap[0], this.constraintMap);\n  }\n\n  /**\n   * Check a constraint map for constraint specs and apply them to obj.\n   * Note: will not mutate the original object. New value is returned.\n   * @public\n   * @param {object} targetObj - The state object to check\n   * @return {number | string | object | array} val - The constrained value.\n   */\n  constrain(targetObj) {\n    const _this = this;\n    _this.constraintMap.forEach(keyBranch => {\n      _this._constrainBranch(targetObj, keyBranch);\n    });\n  }\n\n  /**\n   * Apply a constraint.\n   * @private\n   * @param {object} target - The target object to constrain\n   * @param {Constraint} constraint - The constraint object to use.\n   * @param {symbol} key - The key to use to access the constraint.\n   * @return {number | string | object | array} val - The constrained value.\n   */\n  _applyConstraint(target, constraint, key) {\n    if (constraint.min !== undefined) {\n      target[key] = Math.max(target[key], constraint.min);\n    }\n    if (constraint.max !== undefined) {\n      target[key] = Math.min(target[key], constraint.max);\n    }\n    if (constraint.enum !== undefined && constraint.enum instanceof Array) {\n      target[key] = (constraint.enum.find(target[key]) !== undefined) ? target[key] : constraint.enum[0];\n    }\n    if (constraint.transform !== undefined && typeof constraint.transform === \"function\") {\n      target[key] = constraint.transform(target[key]);\n    }\n\n    return target;\n  }\n\n  /**\n   * Parse a constraint map\n   * @private\n   * @param {object} c - The map object currently being examined.\n   *                     At the top level, this would be the whole map.\n   *                     At the terminal level, this would be an instance of Constraint object.\n   * @param {array} keyBranch - An array of keys that will specify how to get to each Constraint.\n   *                            The last element in this array will be the constraint itself.\n   * @param {array} cMap - An mutable array of key branches.\n   */\n  _parseMap(c, keyBranch, cMap) {\n    const _this = this;\n\n    if (c instanceof Array) {\n      /* if c is an array, add \"_arr_\" to the current map, and examine the first element.\n       * all elements in an array are required to have identical structure, so examining\n       * the first one is enough.\n       */\n      keyBranch.push(\"_arr_\");\n      _this._parseMap(c[0], keyBranch, cMap);\n    } else if (c instanceof Object && !(c instanceof Constraint)) {\n      // keep a copy of the parent branch to create new branches from\n      let parentBranch = keyBranch.map(x=>x);\n\n      // create new branch for each key after the first key using the parentBranch clone\n      Object.keys(c).forEach((key, keyIdx) => {\n        if (keyIdx === 0) {\n          keyBranch.push(key);\n          _this._parseMap(c[key], keyBranch, cMap);\n        } else {\n          let newKeyBranch = parentBranch.map(x=>x);\n          cMap.push(newKeyBranch);\n          newKeyBranch.push(key);\n          _this._parseMap(c[key], newKeyBranch, cMap);\n        }\n      });\n    } else if (c instanceof Constraint) {\n\n      // this will be the last element in the branch - the Constraint object itself\n      keyBranch.push(c);\n    }\n  }\n\n  /**\n   * Apply constraints to one branch of the constraint map.\n   * @private\n   * @param {object} targetObj - The state object to apply the constraint to\n   * @param {object} defObj - The constraint definition object to use.\n   * @param {array} keyBranch - An array of keys representing a path to a constraint object.\n   */\n  _constrainBranch(targetObj, keyBranch) {\n    const _this = this;\n\n    let curKey;\n    let constraint = keyBranch[keyBranch.length - 1];\n    let arrFlag = false;\n\n    /* Drill into targetObj and defObj following keyBranch keys\n     * We go to length - 2, because the next-to-last element might be an\n     * array, and the last element is the Constraint object itself.\n     */\n    for (let i = 0; i < keyBranch.length - 2 && !arrFlag; ++i) {\n      curKey = keyBranch[i];\n\n      // if we encounter an array, drill into each corresponding arry element in targetObj\n      if (curKey === \"_arr_\") {\n        arrFlag = true;\n\n        let keyBranchSlice = keyBranch.slice(i + 1, keyBranch.length);\n\n        for (let j = 0; j < targetObj.length; ++j) {\n          _this._constrainBranch(targetObj[j], keyBranchSlice);\n        }\n      } else {\n        targetObj = targetObj[curKey];\n      }\n    }\n\n    // if arrFlag is set, we've encountered an array somewhere other than on the leaves\n    // in this case we don't need to operate on it\n    if (!arrFlag) {\n      // Apply the constraints\n      curKey = keyBranch[keyBranch.length - 2];\n\n      if (curKey === \"_arr_\") {\n        for (let i = 0; i < targetObj.length; ++i) {\n          _this._applyConstraint(targetObj, constraint, i);\n        }\n      } else {\n        _this._applyConstraint(targetObj, constraint, curKey);\n      }\n    }\n  }\n}\n\nexport default ConstraintSpec;\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/constraint-def.js","import AudioModuleUtil from \"./util\";\nimport shimWebAudioConnect from \"./shim-web-audio-connect\";\nimport AudioModuleOptionsMixin from \"./audio-module-options-mixin\";\n\n/**\n * Base class representing an Audio Module.\n * An AudioModule wraps a set of AudioNodes to provide a higher-order component that can itself be\n * used as an AudioNode.\n * @abstract @class\n */\nclass AudioModule {\n\n  /**\n   * @constructor\n   * @param {AudioContext} - The Audio Context that the module participates in.\n   * @param {number} numInputs - Number of inputs.\n   * @param {number} numOutputs - Number of outputs.\n   */\n  constructor(audioCtx, numInputs, numOutputs) {\n    this.audioCtx = audioCtx;\n\n    // marker boolean to distinguish current object from an AudioNode\n    this.isAudioModule = true;\n\n    // shim the connect method for the Audio Context so that AudioNodes can connect to AudioModules\n    if (this.audioCtx.isWebAudioConnectShimmed !== true) {\n      shimWebAudioConnect(this.audioCtx);\n    }\n\n    this.input = audioCtx.createGain();\n    this.output = audioCtx.createGain();\n\n    this.audioComponents = {};\n\n    this._initOptions();\n    this._initAudioComponents();\n    this._initAudioParams();\n  }\n\n  /* ============================================================================================= */\n  /*  INITIALIZATION METHODS\n  /* ============================================================================================= */\n\n  /**\n   * Initialize audio components and their connections.\n   * @private @abstract\n   */\n  _initAudioComponents() {}\n\n  /**\n   * Initialize and expose Audio Params.\n   * @private @abstract\n   */\n  _initAudioParams() {}\n\n  /**\n   * Initialize the options.\n   * @private @abstract\n   */\n  _initOptions() {}\n\n  /* ============================================================================================ */\n  /*  PUBLIC API\n  /* ============================================================================================ */\n  \n  /**\n   * Returns the AudioContext that the Audio Module is participating in.\n   * @returns {AudioContext} - the AudioContext that the Audio Module is participating in. \n   */\n  getContext() {\n    return this.audioCtx;\n  }\n  \n  /**\n   * Connect to another AudioNode or AudioModule\n   * @public\n   * @param {AudioNode | AudioModule} destination - AudioNode or AudioModule to connect to.\n   * @param {number} outputIndex - Channel of the output to connect.\n   * @param {number} outputIndex - Channel of the destintation to connect to. \n   */\n  connect(destination, outputIndex, inputIndex) {\n    // if destination has an input property, connect to it (destination is an AudioModule)\n    if (destination.isAudioModule === true) {\n      this.output.connect(destination.input);\n    }\n    // else destination is an AudioNode and can be connected to directly\n    else {\n      this.output.connect(destination);\n    }\n  }\n\n  /**\n   * Disconnect from an AudioNode or AudioModule\n   * @param {AudioNode | AudioModule} destination - AudioNode or AudioModule to disconnect from.\n   * @param {number} outputIndex - Channel of the output to disconnect.\n   * @param {number} outputIndex - Channel of the destintation to disconnect from. \n   */\n  disconnect(destination, outputIndex, inputIndex) {\n    // if destination has an input property, disconnect from it (destination is an AudioModule)\n    if (destination.isAudioModule === true) {\n      this.output.disconnect(destination.input);\n    // else destination is an AudioNode and can be disconnected from directly\n    } else {\n      this.output.disconnect(destination);\n    }\n  }\n}\n\nObject.assign(AudioModule.prototype, AudioModuleOptionsMixin);\n\nexport default AudioModule;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/core/audio-module.js","import WidgetSvgNsMixin from \"./widget-mixin-svgns\";\nimport WidgetStateMixin from \"./widget-mixin-state\";\nimport WidgetOptionsMixin from \"./widget-mixin-options\";\nimport WidgetObserverMixin from \"./widget-mixin-observer\";\n\n'use strict';\n\n/**\n * Abstract base class representing an SVG widget that can be placed inside a DOM container.\n * @class\n * @abstract\n */\nclass Widget {\n\n  /**\n   * @constructor\n   * @mixes WidgetSvgNsMixin\n   * @mixes WidgetStateMixin\n   * @mixes WidgetOptionsMixin\n   * @mixes WidgetObserverMixin\n   * @param {DOM element | string} container - DOM element that will contain the widget,\n   *                                           or string passed to querySelector to find\n   *                                           said DOM element.\n   * @param {object=} o - Options.\n   */\n  constructor(container, o) {\n    if (typeof container === \"string\") {\n      container = document.querySelector(container);\n    }\n\n    if (container === undefined || !(container instanceof Element)) {\n      throw new Error(\"widget requires a DOM element specifying its container as the first argument\");\n    }\n\n    this.container = container;\n\n    o = o || {};\n\n    this.svg = document.createElementNS(this.SVG_NS, \"svg\");\n    this.container.appendChild(this.svg);\n    this.svg.setAttribute(\"width\", this.container.getBoundingClientRect().width);\n    this.svg.setAttribute(\"height\", this.container.getBoundingClientRect().height);\n\n    /* Manifest of containers and namespaces */\n    this.o = {};                 // options namespace\n    this.svgEls = {};            // svg element namespace\n    this.handlers = {};          // mouse and touch event handler namespace\n    this.state = {};             // state namespace\n    this.stateConstraints = {};  // state constraints namespace\n    this.observers = [];         // observer callback container\n\n    this._initOptions(o);\n    this._initStateConstraints();\n    this._initState();\n    this._initSvgEls();\n    this._initHandlers();\n  }\n\n  /**\n   * Initialize the options\n   * @abstract\n   * @protected\n   */\n  _initOptions(o) {}\n\n  /**\n   * Initialize state constraints\n   * @abstract\n   * @protected\n   */\n  _initStateConstraints() {}\n\n  /**\n   * Initialize state\n   * @abstract\n   * @protected\n   */\n  _initState() {}\n\n  /**\n   * Initialize the svg elements.\n   * Each implementation of this method must end with calls to _appendSvgEls() and _update(),\n   * in that order, as shown in this template\n   * @abstract\n   * @protected\n   */\n  _initSvgEls() {}\n\n  /**\n   * Append the newly created svg elements to the svg container.\n   * This method should be called exctly once by each implementation of the _initSvgEls() method.\n   * @protected\n   */\n  _appendSvgEls() {\n    const _this = this;\n\n    Object.values(_this.svgEls).forEach(svgEl => {\n      appendSvgEls(svgEl);\n    });\n\n    function appendSvgEls(child) {\n      if (child instanceof Array) {\n        child.forEach(arrEl => appendSvgEls(arrEl));\n      } else {\n        _this.svg.appendChild(child);\n        child.setAttribute(\"shape-rendering\", \"geometricPrecision\");\n      }\n    }\n  }\n\n  /**\n   * Initialize mouse and touch event handlers\n   * @abstract\n   * @protected\n   */\n  _initHandlers() {}\n\n  /**\n   * Update (redraw) component based on state\n   * @abstract\n   * @protected\n   */\n  _update() {}\n\n  /* ===========================================================================\n  *  PUBLIC API\n  */\n\n  /**\n   * Get public representation of the state.\n   * @abstract\n   * @public\n   */\n  getVal() {}\n\n  /**\n   * Set the current state in a format specific to each widget.\n   * Same as setVal(), but will not cause an observer callback trigger.\n   * @abstract \n   * @public\n   */\n  setInternalVal(newVal) {}\n\n  /**\n   * Set the current state in a format specific to each widget.\n   * Same as setInternalVal(), but will cause an observer callback trigger.\n   * @abstract @public\n   */\n  setVal(newVal) {}\n\n  /**\n   * Get the current state.\n   * @abstract\n   * @public\n   * @returns {object} - Copy of this.state\n   */\n  getState() {}\n\n  /**\n   * Set the current state and redraw.\n   * @description If no new state argument is provided, will reassign old state, taking into account the stateConstraints.\n   * As opposed to setState(), setInternalState() does not trigger observer notification.\n   * Will use Widget.stateConstraints to constrain each state value to each constraints min, max, or enum\n   * @abstract\n   * @public\n   * @param {object} [newState] - The new state.\n   * @returns {boolean} A flag indicating whether the state has been changed.\n   */\n  setInternalState(newState) {}\n\n  /**\n   * Sets the current state and redraws.\n   * @description As opposed to setInternalState(), setState() will call the observer callback functions,\n   * so may lead to an infinate loop if an observer calls this method.\n   * @abstract\n   * @public\n   * @param {object} [newState] - The new state.\n   * @returns {boolean} A flag indicating whether the state has been changed.\n   */\n  setState(newState) {}\n  \n  /* ===========================================================================\n  *  HELPER METHODS\n  */\n\n  /** Helper method: get x relative to the container */\n  _getRelativeX(x) {\n    return x - this._getLeft();\n  }\n\n  /** Helper method: get y relative to the container */\n  _getRelativeY(y) {\n    return y - this._getTop();\n  }\n\n   /** Helper method: get the width of the svg container */\n   _getWidth() {\n     return this.svg.getBoundingClientRect().width;\n   }\n\n   /** Helper method: get the height of the svg container */\n   _getHeight() {\n     return this.svg.getBoundingClientRect().height;\n   }\n\n   /** Helper method: get the top edge position of the svg container */\n   _getTop() {\n     return this.svg.getBoundingClientRect().top;\n   }\n\n   /** Helper method: get the left edge position of the svg container */\n   _getLeft() {\n     return this.svg.getBoundingClientRect().left;\n   }\n}\n\nObject.assign(Widget.prototype, WidgetSvgNsMixin);\nObject.assign(Widget.prototype, WidgetStateMixin);\nObject.assign(Widget.prototype, WidgetOptionsMixin);\nObject.assign(Widget.prototype, WidgetObserverMixin);\n\nexport default Widget;\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget.js","/**\n * A collection of static utility methods for Audio Modules\n */\nlet AudioModuleUtil = {\n\n  /**\n   * Convert MIDI pitch to frequency.\n   * @param {number} midiPitch - The midi pitch number.\n   * @param {number} [a4tuning=440] - Tuning of the note A4 (midi pitch 69) in Hz, 440Hz by default.\n   * @return {number} freq - Frequency for the given MIDI pitch.\n   */\n  midiToFreq: function midiToFreq(midiPitch, a4tuning = 440) {\n    let freq = -1;\n\n    if (midiPitch !== -1) freq = Math.pow(2, (midiPitch - 69) / 12) * 440;\n    return freq;\n  },\n\n  /**\n   * Convert MIDI velocity (0 - 127) to gain (0. - 1.).\n   * @param {number} vel - MIDI velocity (0 - 127).\n   * @returns {number} - Gain (0. - 1.). \n   */\n  midiVelToGain: function midiVelToGain(vel) {\n    return (vel / 127);\n  },\n\n  /**\n   * Convert note name to MIDI pitch\n   * @param {string} noteName - The note name to convert\n   * @return {number} midiPitch - MIDI pitch for the given note name. Return -1 if invalid argument format.\n   */\n  noteNameToMidi: function (noteName) {\n    let noteNameFormat = /^([a-g]|[A-G])(#|b)?([0-9]|10)$/;\n\n    if(noteNameFormat.test(noteName) === false) {\n      console.log('AudioModuleUtil.noteNameToMidi: invalid note name format');\n      return -1;\n    } else {\n      let capture = noteNameFormat.exec(noteName);\n\n      let note = capture[1];\n      let accidental = capture[2];\n      let octave = capture[3];\n\n      let noteFundamentalMap = {\n        'A': 9,\n        'a': 9,\n        'B': 11,\n        'b': 11,\n        'C': 0,\n        'c': 0,\n        'D': 2,\n        'd': 2,\n        'E': 4,\n        'e': 4,\n        'F': 5,\n        'f': 5,\n        'G': 7,\n        'g': 7\n      };\n\n      let noteFundamental = noteFundamentalMap[note];\n\n      if(accidental === '#') {\n        noteFundamental++;\n      } else if (accidental === 'b') {\n        noteFundamental--;\n      }\n\n      let midiPitch = noteFundamental + (12 * octave);\n\n      return midiPitch;\n    }\n  },\n\n  /**\n   * Convert note name to frequency\n   * @param {string} noteName - The note name to convert\n   * @param {number} [a4tuning=440] - Tuning of the note A4 (midi pitch 69) in Hz, 440Hz by default.\n   * @return {number} freq - Frequency for the given MIDI pitch.\n   */\n  noteNameToFreq: function (noteName, a4tuning) {\n    a4tuning = a4tuning || 440;\n    return AudioModuleUtil.midiToFreq(AudioModuleUtil.noteNameToMidi(noteName), a4tuning);\n  }\n}\n\nexport default AudioModuleUtil;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/core/util.js","/**\n * Verifies that the given audio context has the requested features and attempts to shim features that are\n * missing.\n * @param {AudioContext} audioCtx - The Audio Context to check.\n * @param {array} features - Array of features to detect, listed as strings (i.e. \"Gain\", \"Oscillator\", \"Analyser\", etc.) \n */\nfunction VerifyAudioContextFeatures(audioCtx, features) {\n\n  features.forEach(feature => {\n\n    switch(feature) {\n\n      case \"Analyser\":\n        if (typeof audioCtx.createAnalyser !== \"function\") {\n          throw new Error(\"Required module AnalyserNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"AudioBuffer\":\n        if (typeof audioCtx.createBuffer !== \"function\") {\n          throw new Error(\"Required module AudioBufferNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n      \n      case \"AudioBufferSource\":\n        if (typeof audioCtx.createBufferSource !== \"function\") {\n          throw new Error(\"Required module AudioBufferSourceNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"BiquadFilter\":\n        if (typeof audioCtx.createBiquadFilter !== \"function\") {\n          throw new Error(\"Required module BiquadFilterNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"ChannelMerger\":\n        if (typeof audioCtx.createChannelMerger !== \"function\") {\n          throw new Error(\"Required module ChannelMergerNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n      \n      case \"ChannelSplitter\":\n        if (typeof audioCtx.createChannelSplitter !== \"function\") {\n          throw new Error(\"Required module ChannelSplitterNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"Convolver\":\n        if (typeof audioCtx.createConvolver !== \"function\") {\n          throw new Error(\"Required module ConvolverNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"Delay\":\n        if (typeof audioCtx.createDelay !== \"function\") {\n          throw new Error(\"Required module DelayNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"DynamicsCompressor\":\n        if (typeof audioCtx.createDynamicsCompressor !== \"function\") {\n          throw new Error(\"Required module DynamicsCompressorNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n       \n      case \"Gain\":\n        if (typeof audioCtx.createGain !== \"function\") {\n          throw new Error(\"Required module GainNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"IIRFilter\":\n        if (typeof audioCtx.createIIRFilter !== \"function\") {\n          throw new Error(\"Required module IIRFilterNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"Oscillator\":\n        if (typeof audioCtx.createOscillator !== \"function\") {\n          throw new Error(\"Required module OscillatorNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n        \n      case \"Panner\":\n        if (typeof audioCtx.createPannerr !== \"function\") {\n          throw new Error(\"Required module PannerNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"StereoPanner\":\n        if (typeof audioCtx.createStereoPanner !== \"function\") {\n          audioCtx.createStereoPanner = function() { return new StereoPannerShim(audioCtx); };\n        }\n        break;\n\n      default:\n        console.warn(\"A check for AudioContext feature \", feature, \"is being requested, but no matching check is implemented\");\n        break;\n    }\n  });\n}\n\nexport default VerifyAudioContextFeatures;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/core/verify-audio-context-features.js","import AudioModule from \"audio_modules/core/audio-module\";\nimport verifyAudioContextFeatures from \"audio_modules/core/verify-audio-context-features\";\n\n/**\n * Class representing a Channel Strip.\n * A Channel Strip is a processing component similar to a channel strip found on a mixing board.\n * It facilitates control over input gain, output gain, and pan of a signal.\n * @class\n */\nclass ChannelStrip extends AudioModule {\n\n  /**\n   * @constructor\n   * @param {AudioContext} audioCtx \n   */\n  constructor(audioCtx, o) {\n    super(audioCtx);\n  }\n\n  /* ============================================================================================= */\n  /*  INITIALIZATION METHODS\n  /* ============================================================================================= */\n  \n  /**\n   * Initialize audio components and their connections.\n   * @private @override\n   */\n  _initAudioComponents() {\n    const _this = this;\n\n    try {\n      verifyAudioContextFeatures(_this.audioCtx, [\"Gain\", \"StereoPanner\"]);\n\n      this.audioComponents = {\n        inputGain: _this.input,\n        panner: _this.audioCtx.createStereoPanner(),\n        outputGain: _this.output\n      };\n\n      this.audioComponents.inputGain.connect(this.audioComponents.panner);\n      this.audioComponents.panner.connect(this.audioComponents.outputGain);\n    \n    } catch(err) {\n      console.error(err);\n    }\n  }\n\n  /**\n   * Initialize and expose Audio Params.\n   * @private @override\n   */\n  _initAudioParams() {\n    this.inputGain = this.audioComponents.inputGain.gain;\n    this.outputGain = this.audioComponents.outputGain.gain;\n    this.pan = this.audioComponents.panner.pan;\n  }\n  \n  /* ============================================================================================= */\n  /*  GETTERS AND SETTERS\n  /* ============================================================================================= */ \n  \n  /**\n   * Get input gain value.\n   * @returns {number} - Input gain value.\n   */\n  getInputGain() {\n    return this.audioComponents.inputGain.gain.value;\n  }\n\n  /**\n   * Set input gain value.\n   * @param {number} newVal - The new input gain value.\n   */\n  setInputGain(newVal) {\n    this.audioComponents.inputGain.gain.value = newVal;\n  }\n\n  /**\n   * Get pan value.\n   * @returns {number} - Pan value.\n   */\n  getPan() {\n    return this.audioComponents.panner.pan.value;\n  }\n\n  /**\n   * Set pan value.\n   * @param {number} newVal - The new pan value.\n   */\n  setPan(newVal) {\n    this.audioComponents.panner.pan.value = newVal;\n  }\n\n  /**\n   * Get output gain value.\n   * @returns {number} - Output gain value.\n   */\n  getOutputGain() {\n    return this.audioComponents.outputGain.gain.value;\n  }\n\n  /**\n   * Set output gain value.\n   * @param {number} newVal - The new output gain value.\n   */\n  setOutputGain(newVal) {\n    this.audioComponents.outputGain.gain.value = newVal;\n  }\n}\n\nexport default ChannelStrip;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/channel-strip.js","import AudioModule from \"audio_modules/core/audio-module\";\nimport verifyAudioContextFeatures from \"audio_modules/core/verify-audio-context-features\";\n\n/**\n * Class representing an Envelope.\n * An envelope controls the evolution of the amplitude of a audio signal over time.\n * The Envelope class defines an envelope with attack and release of an arbitrary number of points\n * (as opposed to, for example, an ADSR envelope, which has 1 point each for attack, decay, and release).\n * This envelope will follow the attack path and sustain until release is triggered, at which point \n * it will floow the specified release path.\n * Attack and release paths are specified as 2D arrays in the form\n * [ [t(0), a(0)], [t(1), a(1)], ... [t(i), a(i)] ],\n * where t(i) specifies the time, in seconds,\n * and a(i) specifies the amplitude of the envelope at the vertex i.\n * @class\n */\nclass Envelope extends AudioModule {\n\n  /**\n   * @constructor\n   * @param {AudioContext} audioCtx\n   * @param {object} o - Options.\n   * @param {array} [o.attackEnvelope] - 2D array specifying the attack envelope.\n   * @param {array} [o.releaseEnvelope] - 2D array specifying the release envelope.\n   */\n  constructor(audioCtx, o) {\n    super(audioCtx);  \n  }\n\n  /* ============================================================================================= */\n  /*  INITIALIZATION METHODS\n  /* ============================================================================================= */\n\n  /**\n   * Initialize audio components and their connections.\n   * @private @override\n   */\n  _initAudioComponents() {\n    const _this = this;\n\n    try {\n      verifyAudioContextFeatures(_this.audioCtx, [\"Gain\"]);\n\n      this.audioComponents = {\n        envGain: _this.audioCtx.createGain()\n      }\n\n      _this.audioComponents.envGain.gain.value = 0;\n      _this.input.connect(_this.audioComponents.envGain);\n      _this.audioComponents.envGain.connect(_this.output);\n          \n    } catch(err) {\n      console.error(err);\n    }\n  }\n\n  /**\n   * Initialize options.\n   * @private @override\n   */\n  _initOptions(o) {\n\n    this.o = {\n      attackEnvelope: [[0.1, 1], [1, 1]],\n      releaseEnvelope: [[0.5, 1], [1, 0]]\n    }\n\n    super._initOptions(o);\n\n    this._normalizeAttackEnvelope();\n    this._normalizeReleaseEnvelope();\n  }\n\n  /* ============================================================================================= */\n  /*  GETTERS AND SETTERS\n  /* ============================================================================================= */ \n\n  /**\n   * Get the attack envelope.\n   * @returns {array} - 2D array representing the attack envelope.\n   */\n  getAttackEnvelope() {\n    return this.o.attackEnvelope;\n  }\n\n  /**\n   * Set the attack envelope.\n   * @param {array} newEnv - A 2D array representing the new envelope, where each value is of the\n   *                         form [t, a] where t is time in seconds, and a is amplitude in the range\n   *                         [0. - 1.]\n   * @returns {this} - A reference to the current envelope object for chaining.\n   */\n  setAttackEnvelope(newEnv) {\n    this.o.attackEnvelope = newEnv;\n    this._normalizeAttackEnvelope();\n    return this;\n  }\n\n  /**\n   * Get the release envelope.\n   * @returns {array} - 2D array representing the release envelope.\n   */\n  getReleaseEnvelope() {\n    return this.o.releaseEnvelope;\n  }\n\n  /**\n   * Set the release envelope.\n   * @param {array} newEnv - A 2D array representing the new envelope, where each value is of the\n   *                         form [t, a] where t is time in seconds, and a is amplitude in the range\n   *                         [0. - 1.] \n   * @returns {this} - A reference to the current envelope object for chaining.\n   */\n  setReleaseEnvelope(newEnv) {\n    this.o.releaseEnvelope = newEnv;\n    this._normalizeReleaseEnvelope();\n    return this;\n  }\n\n  /* ============================================================================================= */\n  /*  PUBLIC API\n  /* ============================================================================================= */ \n\n  /**\n   * Execute the attack envelope.\n   * @returns {Promise} - Promise that returns the envelope when the envelope expires.\n   */\n  attack() {\n    const _this = this;\n    const envGain = this.audioComponents.envGain;\n    const env = this.o.attackEnvelope;\n    \n    let a, t;\n\n    // cancel scheduled values in case another change is occuring\n    envGain.gain.cancelScheduledValues(this.audioCtx.currentTime);\n    envGain.gain.setValueAtTime(envGain.gain.value, this.audioCtx.currentTime);\n\n    const startTime = this.audioCtx.currentTime;\n\n    // ramp to each subsequent value\n    for (var i = 0; i < env.length; i++) {\n      a = env[i][1];\n      t = startTime + env[i][0];                                       \n      \n      if (t > this.audioCtx.currentTime) {\n        envGain.gain.linearRampToValueAtTime(a, t);\n      }\n    }\n\n    return new Promise((resolve, reject) => {\n      window.setTimeout(() => { \n        resolve(env); \n      }, env[env.length -1][0] * 1000);\n    });\n  }\n\n  /**\n   * Execute the release envelope.\n   * @returns {Promise} - Promise that returns the envelope when the envelope expires.\n   */\n  release() {\n    const _this = this;\n    const envGain = this.audioComponents.envGain;\n    const env = this.o.releaseEnvelope;\n    \n    let a, t;\n\n    // cancel scheduled values in case another change is occuring\n    envGain.gain.cancelScheduledValues(this.audioCtx.currentTime);\n    envGain.gain.setValueAtTime(envGain.gain.value, this.audioCtx.currentTime);\n\n    const startTime = this.audioCtx.currentTime;\n\n    // ramp to each subsequent value\n    for (var i = 0; i < env.length; i++) {\n      a = env[i][1];\n      t = startTime + env[i][0];                                       \n      \n      if (t > this.audioCtx.currentTime) {\n        envGain.gain.linearRampToValueAtTime(a, t);\n      }\n    }\n\n    return new Promise((resolve, reject) => {\n      window.setTimeout(() => { \n        resolve(env); \n      }, env[env.length -1][0] * 1000);\n    });\n  }\n  \n  /* ============================================================================================= */\n  /* INTERNAL FUNCTIONALITY AND HELPER METHODS\n  /* ============================================================================================= */ \n\n  /**\n   * Normalizes the attack envelope.\n   * Envelope points must be strictly positive (non-zero) and <= 1.\n   * @private\n   */\n  _normalizeAttackEnvelope() {\n    this.o.attackEnvelope.forEach(point => {\n      point[1] = (point[1] <= 0) ? 0.0001 : \n                  (point[1] > 1) ? 1 :\n                  point[1];\n    });\n  }\n\n  /**\n   * Normalizes the release envelope.\n   * Envelope points must be strictly positive (non-zero) and <= 1.\n   * @private\n   */\n  _normalizeReleaseEnvelope() {\n    this.o.releaseEnvelope.forEach(point => {\n      point[1] = (point[1] <= 0) ? 0.0001 : \n                  (point[1] > 1) ? 1 :\n                  point[1];\n    });\n  }\n}\n\nexport default Envelope;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/envelope.js","/**\n * Useful Math Utility functions\n */\nlet MathUtil = {\n\n  /**\n   * Returns the decimal precision of a number.\n   * @param {number} val - The value whose precision to check.\n   * @returns {number} - Number of decimal places.\n   */\n  getPrecision(val) {\n    let decStr = (''+val).split('.')[1];\n    return (decStr ? decStr.length : 0);\n  },\n\n  /**\n   * Round a number to specified decimal precision.\n   * Same as Number.prototype.toFixed, but does not use toString.\n   * @param {nubmer} val - Value to be rounded.\n   * @param {precision} val - \n   * @returns  \n   */\n  round: function round(val, precision) {\n    let factor = Math.pow(10, precision);\n    return Math.round(val * factor) / factor;\n  },\n\n  /**\n   * Quantize a value (set it to the closest value matching the interval)\n   * Note: result will not necessarily reflect the same number of places of\n   * as the q input due to floating point arithmetic.\n   * @param {number} val - Value to quantize.\n   * @param {number} q - The quantization interval.\n   * @param {number} precision - The decimal precision of the result.\n   * @returns {number} qVal - Quantized val.\n   */\n  quantize: function quantize(val, q, precision) {\n    let qVal;\n\n    if (q == 0) {\n      return 0;\n    } else if (q < 0) {\n      q = Math.abs(q);\n    }\n\n    // quantize\n    qVal = ~~(val / q) * q;\n\n    qVal = Math.abs(val - qVal) > (q / 2) ? \n            qVal > 0 ? \n              qVal + q\n            : qVal - q\n          : qVal;\n\n    if (precision !== undefined) {\n      qVal = MathUtil.round(qVal, precision);\n    }\n\n    return qVal;\n  },\n\n  /**\n   * Alias for quantize(val, q)\n   * @param {number} val - Value to quantize\n   * @param {number} q - The quantization interval\n   * @param {number} precision - The decimal precision of the result.\n   * @returns {number} qVal - Quantized val\n   */\n  q: function q(val, q, precision) {\n    return MathUtil.quantize(val, q, precision);\n  }\n};\n\nexport default MathUtil;\n\n\n// WEBPACK FOOTER //\n// ./src/util/util-math.js","/**\n * Shim the WebAudio connect and disconnect methods to allow WebAudio nodes to connect to Audio Modules.\n * @param {AudioContext} audioCtx - The Audio Context to shim.\n */\nfunction shimWebAudioConnect(audioCtx) {\n  let audioNodePrototype = Object.getPrototypeOf(Object.getPrototypeOf(audioCtx.createGain()));\n\n  // keep a reference to the original connect and disconnect methods as webAudioConnect and webAudioDisconnect\n  audioNodePrototype.webAudioConnect = audioNodePrototype.connect;\n  audioNodePrototype.webAudioDisconnect = audioNodePrototype.disconnect;\n\n  // if the destination object has an 'input' property, it is an Audio Module - connect to 'input'\n  // else it is an AudioNode - connect directly\n  audioNodePrototype.connect = function (destination, outputIndex, inputIndex) {\n    if (destination.isAudioModule === true) {\n      this.webAudioConnect(destination.input, outputIndex, inputIndex);\n    } else {\n      this.webAudioConnect(destination, outputIndex, inputIndex);\n    }\n  };\n\n  audioNodePrototype.disconnect = function (destination, outputIndex, inputIndex) {\n    if (destination.isAudioModule === true) {\n      this.webAudioDisconnect(destination.input, outputIndex, inputIndex);\n    } else {\n      this.webAudioDisconnect(destination, outputIndex, inputIndex);\n    }\n  };\n\n  // flag marking the webAudioConnect feature as shimmed\n  audioCtx.isWebAudioConnectShimmed = true;\n}\n\nexport default shimWebAudioConnect;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/core/shim-web-audio-connect.js","import AudioModule from \"audio_modules/core/audio-module\";\nimport verifyAudioContextFeatures from \"audio_modules/core/verify-audio-context-features\";\nimport OscillatorVoice from \"audio_modules/oscillator-voice\";\nimport Envelope from \"audio_modules/envelope\";\nimport ChannelStrip from \"audio_modules/channel-strip\";\nimport AudioUtil from \"audio_modules/core/util\";\n\n/**\n * Class representing an Additive Synth Voice\n // TODO: WRITE DESCRIPTION\n * @class\n */\nclass AdditiveSynthVoice extends AudioModule {\n\n  /**\n   * @constructor\n   * @param {AudioContext} audioCtx\n   * @param {object} o - Options.\n   // TODO: ANNOTATE OPTIONS\n   */\n  constructor(audioCtx, o) {\n    super(audioCtx);  \n  }\n\n  /* ============================================================================================= */\n  /*  INITIALIZATION METHODS\n  /* ============================================================================================= */\n\n  /**\n   * Initialize audio components and their connections.\n   * @private @override\n   */\n  _initAudioComponents() {\n    const _this = this;\n\n    try {\n      verifyAudioContextFeatures(_this.audioCtx, []);\n\n      this.audioComponents = {\n\n        overtones: (function() {\n          let ot = [];\n\n          for (let i = 0; i < _this.o.numOvertones; i++) {\n            ot.push(new OscillatorVoice(_this.audioCtx));\n          }\n\n          return ot;\n        }()),\n\n        envelope: new Envelope(_this.audioCtx),\n\n        channelStrip: new ChannelStrip(_this.audioCtx)\n      };\n\n      _this.audioComponents.overtones.forEach(ot => {\n        ot.connect(_this.audioComponents.envelope);\n      });\n      _this.audioComponents.envelope.connect(_this.audioComponents.channelStrip);\n      _this.audioComponents.channelStrip.connect(_this.output);       \n    } catch(err) {\n      console.error(err);\n    }\n  }\n\n  /**\n   * Initialize and expose Audio Params.\n   * @private @abstract\n   */\n  _initAudioParams() {\n    this.pan = this.audioComponents.channelStrip.pan;\n    this.gain = this.audioComponents.channelStrip.outputGain;\n    // TODO: can also expose frequency as frequency of first overtone?\n  }\n\n  /**\n   * Initialize options.\n   * @private @override\n   */\n  _initOptions(o) {\n\n    this.o = {\n      numOvertones: 10,\n      glide: 0\n    };\n\n    super._initOptions(o);\n  }\n\n  /* ============================================================================================= */\n  /*  GETTERS AND SETTERS\n  /* ============================================================================================= */ \n\n  /**\n   * Returns the gain.\n   * @returns {number} - Gain.\n   */\n  getGain() {\n    return this.audioComponents\n                .channelStrip\n                .getOutputGain();\n  }\n\n  /**\n   * Sets the gain.\n   * @param {number} gain - Gain between 0. and 1.\n   */\n  setGain(gain) {\n    this.audioComponents\n          .channelStrip\n          .setOutputGain(gain);\n    return this;\n  }\n\n  /**\n   * Returns the pan.\n   * @returns {number} - Pan.\n   */\n  getPan() {\n    return this.audioComponents\n                .channelStrip\n                .getPan();\n  }\n  \n  /**\n   * Sets the pan.\n   * @param {number} pan - Pan between -1. (L) and 1. (R).\n   */\n  setPan(pan) {\n    this.audioComponents\n          .channelStrip\n          .setPan(pan);\n    return this;\n  }\n\n  /**\n   * Returns the oscillator frequency.\n   * @returns {number} - Oscillator frequency.\n   */\n  getFrequency() {\n    let freq = this.audioComponents.overtones[0].getFrequency();\n    return freq;\n  }\n\n  /**\n   * Sets the oscillator frequency.\n   * @param {number} freq - Frequency.\n   * @param {number} [glide] - Glide time in ms.\n   */\n  setFrequency(freq, glide) {\n    let overtones = this.audioComponents.overtones;\n\n    glide = (glide === undefined) ? this.o.glide : glide;\n\n    overtones.forEach((ot, otIdx) => {\n      ot.setFrequency(freq * (otIdx + 1))\n    });\n\n    return this;\n  }\n\n  /**\n   * Get either the main attack envelope, or the attack envelope for\n   * one of the overtones.\n   * @param {number} [otIdx] - Index of the overtone whose attack envelope to return.\n   * @returns {array} - 2D array representing the attack envelope.\n   */\n  getAttackEnvelope(otIdx) {\n    let env = [];\n\n    if (typeof otIdx === \"number\") {\n      env = this.audioComponents.overtones[otIdx].getAttackEnvelope();\n    } else {\n      env = this.audioComponents.envelope.getAttackEnvelope();\n    }\n\n    return env;\n  }\n\n  /**\n   * Set either the main attack envelope, or the attack envelope for\n   * one of the overtones.\n   * @param {array} env - A 2D array representing the new envelope, where each value is of the\n   *                         form [t, a] where t is time in seconds, and a is amplitude in the range\n   *                         [0. - 1.]\n   * @param {number} otIdx - Index of the overtone whose attack envelope to set.\n   * @returns {this} - A reference to the current object for chaining.\n   */\n  setAttackEnvelope(env, otIdx) {\n    let target = {};\n\n    if (typeof otIdx === \"number\") {\n      target = this.audioComponents.overtones[otIdx];\n    } else {\n      target = this.audioComponents.envelope;\n    }\n\n    target.setAttackEnvelope(env);\n\n    return this;\n  }\n\n  /**\n   * Get either the main release envelope, or the release envelope for\n   * one of the overtones.\n   * @param {number} [otIdx] - Index of the overtone whose release envelope to return.\n   * @returns {array} - 2D array representing the release envelope.\n   */\n  getReleaseEnvelope(otIdx) {\n    let env = [];\n\n    if (typeof otIdx === \"number\") {\n      env = this.audioComponents.overtones[otIdx].getReleaseEnvelope();\n    } else {\n      env = this.audioComponents.envelope.getReleaseEnvelope();\n    }\n\n    return env;\n  }\n\n  /**\n   * Set either the main release envelope, or the release envelope for\n   * one of the overtones.\n   * @param {array} env - A 2D array representing the new envelope, where each value is of the\n   *                         form [t, a] where t is time in seconds, and a is amplitude in the range\n   *                         [0. - 1.]\n   * @param {number} otIdx - Index of the overtone whose release envelope to set.\n   * @returns {this} - A reference to the current object for chaining.\n   */\n  setReleaseEnvelope(env) {\n    let taget = {};\n    \n    if (typeof otIdx === \"number\") {\n      target = this.audioComponents.overtones[otIdx];\n    } else {\n      target = this.audioComponents.envelope;\n    }\n\n    target.setReleaseEnvelope(env);\n\n    return this;\n  }\n\n  /**\n   * Set the gain of an overtone.\n   * @param {number} gain - Gain - value in the range [0. - 1.]\n   * @param {number} otIdx - Overtone index. \n   */\n  setOvertoneGain(gain, otIdx) {\n    if (otIdx >= 0 && otIdx < this.audioComponents.overtones.length) {\n      this.audioComponents.overtones[otIdx].setGain(gain);\n    }\n  }\n\n  /**\n   * Set the gain for multiple overtones using an array.\n   * @param {array} gainArr\n   */\n  setOvertoneGains(gainArr) {\n    for (let i = 0; (i < this.audioComponents.overtones.length) && (i < gainArr.length); i++) {\n      this.setOvertoneGain(gainArr[i], i);\n    }\n  }\n\n  /**\n   * Get the number of overtones.\n   * @returns {number} - Number of overtones.\n   */\n  getNumOvertones() {\n    return this.audioComponents.overtones.length;\n  }\n\n  /**\n   * Set the number of overtones.\n   * @param {number} newNumOvertones - Number of overtones. \n   */\n  setNumOvertones(newNumOvertones) {\n    let curNumOvertones = this.getNumOvertones();\n\n    if (curNumOvertones > newNumOvertones) {\n      for (let i = curNumOvertones; i > newNumOvertones; i--) {\n        this.audioComponents.overtones[i] = null;\n        this.audioComponents.overtones.pop();\n      }\n    } else if (curNumOvertones < newNumOvertones) {\n      let baseFreq = this.getFrequency();\n\n      for (let i = curNumOvertones; i < newNumOvertones; i++) {\n        let newOscillatorVoice = new OscillatorVoice();\n        newOscillatorVoice.setFrequency((i + 1) * baseFreq);\n        this.audioComponents.overtones.push(newOscillatorVoice);\n      }\n    }\n  }\n\n  /* ============================================================================================= */\n  /*  PUBLIC API\n  /* ============================================================================================= */ \n\n  /**\n   * Execute the attack envelope.\n   * @returns {Promise} - Promise that returns the envelope when the envelope expires.\n   */\n  attack() {\n    let overtones = this.audioComponents.overtones;\n\n    overtones.forEach(ot => {\n      ot.attack();\n    });\n\n    return this.audioComponents.envelope.attack();\n  }\n\n  /**\n   * Execute the release envelope.\n   * @returns {Promise} - Promise that returns the envelope when the envelope expires.\n   */\n  release() {\n    let overtones = this.audioComponents.overtones;\n    \n    overtones.forEach(ot => {\n      ot.release();\n    });\n    \n\n    return this.audioComponents.envelope.release();\n  }\n\n  /**\n   * Play a note with the given MIDI pitch and MIDI velocity.\n   * @public\n   * @param {number} pitch - MIDI pitch.\n   * @param {number} [vel=127] - MIDI velocity. \n   * @param {array} [glide] - Glide time in ms.\n   */\n  playNote(pitch, vel = 127, glide) {\n    let freq = AudioUtil.midiToFreq(pitch);\n    let gain = AudioUtil.midiVelToGain(vel);\n\n    if (vel === 0) {\n      this.release();\n    } else {\n      this.setFrequency(freq, glide);\n      this.setGain(gain);\n      this.attack();\n    }\n  }\n}\n\nexport default AdditiveSynthVoice;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/additive-synth-voice.js","import AudioModule from \"audio_modules/core/audio-module\";\nimport verifyAudioContextFeatures from \"audio_modules/core/verify-audio-context-features\";\nimport Envelope from \"audio_modules/envelope\";\nimport ChannelStrip from \"audio_modules/channel-strip\";\nimport AudioUtil from \"audio_modules/core/util\";\n\n/**\n * Class representing an Oscillator Voice. \n * An Oscillator Voice has an oscillator, and a channel strip.\n * @class\n */\nclass OscillatorVoice extends AudioModule {\n\n  /**\n   * @constructor\n   * @param {AudioContext} audioCtx\n   * @param {object} [o] - Options.\n   * @param {number} [o.glide] - Glide time in ms.\n   */\n  constructor(audioCtx, o) {\n    super(audioCtx);  \n  }\n\n  /* ============================================================================================= */\n  /*  INITIALIZATION METHODS\n  /* ============================================================================================= */\n\n  /**\n   * Initialize audio components and their connections.\n   * @private @override\n   */\n  _initAudioComponents() {\n    const _this = this;\n\n    try {\n      verifyAudioContextFeatures(_this.audioCtx, [\"Oscillator\"]);\n\n      this.audioComponents = {\n        oscillator: _this.audioCtx.createOscillator(),\n        envelope: new Envelope(_this.audioCtx),\n        channelStrip: new ChannelStrip(_this.audioCtx)\n      };\n\n      this.audioComponents.oscillator.connect(this.audioComponents.envelope);\n      this.audioComponents.envelope.connect(this.audioComponents.channelStrip);\n      this.audioComponents.channelStrip.connect(this.output);\n      this.audioComponents.channelStrip.setInputGain(1);\n      this.audioComponents.oscillator.start();\n      \n    } catch(err) {\n      console.error(err);\n    }\n  }\n\n  /**\n   * Initialize and expose Audio Params.\n   * @private @override\n   */\n  _initAudioParams() {\n    this.pan = this.audioComponents.channelStrip.pan;\n    this.gain = this.audioComponents.channelStrip.outputGain;\n    this.frequency = this.audioComponents.oscillator.frequency;\n  }\n\n  /**\n   * Initialize options.\n   * @private @override\n   */\n  _initOptions(o) {\n    \n        this.o = {\n          glide: 0\n        }\n    \n        super._initOptions(o);\n      }\n\n  /* ============================================================================================= */\n  /*  GETTERS AND SETTERS\n  /* ============================================================================================= */ \n\n  /**\n   * Returns the type of the waveform set for this oscillator.\n   * @returns {string} - Type of waveform. One of \"sine\", \"square\", \"sawtooth\", \"triangle\", or \"custom\".\n   */\n  getWaveformType() {\n    return this.audioComponents.oscillator.type;\n  }\n\n  /**\n   * Set the type of waveform - one of \"sine\", \"square\", \"sawtooth\", \"triangle\", or \"custom\".\n   * If \"custom\" is selected, you may also provide the real and imaginary components to create\n   * the custom waveform.\n   * @param {string} type - Type of waveform - one of \"sine\", \"square\", \"sawtooth\", \"triangle\", or \"custom\".\n   * @param {Float32Array} [real] - Real part (cosine terms) of an array used to create the custom waveform.\n   * @param {Float32Array} [imag] - Imaginary part (sine terms) of an array used to create the custom waveform.\n   */\n  setWaveformType(type, real, imag) {\n\n    switch (type) {\n      case \"sine\":\n        this.audioComponents.oscillator.type = \"sine\";\n        break;\n      case \"square\":\n        this.audioComponents.oscillator.type = \"squre\";\n        break;\n      case \"sawtooth\":\n      case \"saw\":\n        this.audioComponents.oscillator.type = \"sawtooth\";\n        break;\n      case \"triangle\":\n        this.audioComponents.oscillator.type = \"triangle\";\n        break;\n      case \"custom\":\n        if (typeof real === \"object\" && real.constructor.name === \"Float32Array\"\n            && typeof imag === \"object\" && imag.constructor.name === \"Float32Array\") {              \n              let wave = this.audioCtx.createPeriodicWave(real, imag);\n              this.audioComponents.oscillator.setPeriodicWave(wave);              \n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Set a custom waveform using arrays of real (cosine) and imaginary (sine) terms.\n   * @param {Float32Array} real \n   * @param {Float32Array} imag \n   */\n  setCustomWaveform(real, imag) {\n    this.setWaveformType(\"custom\", real, imag);\n    return this;\n  }\n\n  /**\n   * Returns the gain.\n   * @returns {number} - Gain.\n   */\n  getGain() {\n    return this.audioComponents\n                .channelStrip\n                .getOutputGain();\n  }\n\n  /**\n   * Sets the gain.\n   * @param {number} gain - Gain between 0. and 1.\n   */\n  setGain(gain) {\n    this.audioComponents\n          .channelStrip\n          .setOutputGain(gain);\n    return this;\n  }\n\n  /**\n   * Returns the pan.\n   * @returns {number} - Pan.\n   */\n  getPan() {\n    return this.audioComponents\n                .channelStrip\n                .getPan();\n  }\n  \n  /**\n   * Sets the pan.\n   * @param {number} pan - Pan between -1. (L) and 1. (R).\n   */\n  setPan(pan) {\n    this.audioComponents\n          .channelStrip\n          .setPan(pan);\n    return this;\n  }\n\n  /**\n   * Returns the oscillator frequency.\n   * @returns {number} - Oscillator frequency.\n   */\n  getFrequency() {\n    const osc = this.audioComponents.oscillator;\n\n    return osc.frequency.value;\n  }\n\n  /**\n   * Sets the oscillator frequency.\n   * @param {number} freq - Frequency.\n   * @param {number} [glide] - Glide time in ms.\n   */\n  setFrequency(freq, glide) {\n    const osc = this.audioComponents.oscillator;\n\n    glide = (glide === undefined) ? this.o.glide : glide;\n    glide = glide / 1000; // convert to secs\n    \n    osc.frequency.cancelScheduledValues(this.audioCtx.currentTime);\n    osc.frequency.setValueAtTime(osc.frequency.value, this.audioCtx.currentTime);\n    osc.frequency.linearRampToValueAtTime(freq, this.audioCtx.currentTime + glide);\n\n    return this;\n  }\n\n  /**\n   * Get the attack envelope.\n   * @returns {array} - 2D array representing the attack envelope.\n   */\n  getAttackEnvelope() {\n    return this.audioComponents\n                .envelope\n                .getAttackEnvelope();\n  }\n\n  /**\n   * Set the attack envelope.\n   * @param {array} env - A 2D array representing the new envelope, where each value is of the\n   *                         form [t, a] where t is time in seconds, and a is amplitude in the range\n   *                         [0. - 1.]\n   * @returns {this} - A reference to the current envelope object for chaining.\n   */\n\n  setAttackEnvelope(env) {\n    this.audioComponents\n          .envelope\n          .setAttackEnvelope(env);\n    return this;\n  }\n\n  /**\n   * Get the release envelope.\n   * @returns {array} - 2D array representing the release envelope.\n   */\n  getReleaseEnvelope() {\n    return this.audioComponents\n                .envelope\n                .getReleaseEnvelope();\n  }\n\n  /**\n   * Set the release envelope.\n   * @param {array} env - A 2D array representing the new envelope, where each value is of the\n   *                         form [t, a] where t is time in seconds, and a is amplitude in the range\n   *                         [0. - 1.] \n   * @returns {this} - A reference to the current envelope object for chaining.\n   */\n  setReleaseEnvelope(env) {\n    this.audioComponents\n          .envelope\n          .setReleaseEnvelope(env);\n    return this;\n  }\n\n  /* ============================================================================================= */\n  /*  PUTLIC API\n  /* ============================================================================================= */ \n\n  /**\n   * Execute the attack envelope.\n   * @returns {Promise} - Promise that returns the envelope when the envelope expires.\n   */\n  attack() {\n    return this.audioComponents.envelope.attack();\n  }\n\n  /**\n   * Execute the release envelope.\n   * @returns {Promise} - Promise that returns the envelope when the envelope expires.\n   */\n  release() {\n    return this.audioComponents.envelope.release();\n  }\n\n  /**\n   * Play a note with the given MIDI pitch and MIDI velocity.\n   * @public\n   * @param {number} pitch - MIDI pitch.\n   * @param {number} [vel=127] - MIDI velocity. \n   * @param {array} [glide] - Glide time in ms.\n   */\n  playNote(pitch, vel = 127, glide) {\n    let freq = AudioUtil.midiToFreq(pitch);\n    let gain = AudioUtil.midiVelToGain(vel);\n\n    this.setFrequency(freq, glide);\n    this.setGain(gain);\n\n    this.attack();\n  }\n}\n\nexport default OscillatorVoice;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/oscillator-voice.js","/**\n * Mixin specifying the xml namespace for SVG\n * @mixin\n */\nconst SVG_NS = { SVG_NS: \"http://www.w3.org/2000/svg\" };\n\nexport default SVG_NS;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget-mixin-svgns.js","import Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\n\n/**\n * Mixin for methods related to state management\n * @mixin\n */\nlet WidgetStateMixin = {\n\n  /**\n   * Get the current state.\n   *\n   * @public\n   * @returns {object} - Copy of this.state\n   */\n  getState: function getState() {\n    return Object.assign({}, this.state);\n  },\n\n  /**\n   * Set the current state and redraw.\n   *\n   * @description If no new state argument is provided, will reassign old state, taking into account the stateConstraints.\n   * As opposed to setState(), setInternalState() does not trigger observer notification.\n   * Will use Widget.stateConstraints to constrain each state value to each constraints min, max, or enum\n   *\n   * @protected\n   * @param {object=} newState - The new state.\n   * @return {boolean} isChanged - Returns a boolean indicating whether the state has been changed\n   */\n  setInternalState: function setInternalState(newState) {\n    const _this = this;\n    let isChanged = false;\n\n    newState = newState || this.getState();\n\n    Object.keys(newState).forEach(key => {\n      if (_this.state.hasOwnProperty(key) && _this.state[key] !== newState[key]) {\n        _this.state[key] = newState[key];\n        isChanged = true;\n      }\n    });\n\n    _this.stateConstraints.constrain(_this.state);\n    this._update();\n\n    return isChanged;\n  },\n\n  /**\n   * Set the current state and redraw.\n   *\n   * @description As opposed to setInternalState(), setState() will call the observer callback functions,\n   * so may lead to an infinate loop if an observer calls this method.\n   *\n   * @protected\n   * @param {object=} newState - The new state.\n   * @return {boolean} isChanged - Returns a boolean indicating whether the state has been changed\n   */\n  setState: function setState(newState) {\n    const _this = this;\n    let isChanged = false;\n\n    isChanged = this.setInternalState(newState);\n\n    this._notifyObservers();\n\n    return isChanged;\n  }\n};\n\nexport default WidgetStateMixin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget-mixin-state.js","/**\n * Mixin for methods related to options\n * @mixin\n */\nlet WidgetOptionsMixin = {\n\n  /**\n   * Initializes the options.\n   * @private\n   * @param {object} o - Options.\n   */\n  _initOptions: function _initOptions(o) {\n    const _this = this;\n    o = o || {};\n\n    Object.keys(o).forEach(key => {\n      if (_this.o.hasOwnProperty(key) && _this.o[key] !== o[key]) {\n        _this.o[key] = o[key];\n      }\n    });\n  },\n\n  /**\n   * Get the options object\n   * @public\n   * @return {object} this.o - Options\n   */\n  getOptions: function getOptions() {\n    return Object.assign({}, this.o);\n  },\n\n  /**\n   * Set the options\n   * Uses a diffing function, so only specified keys that have new values will be changed\n   * @public\n   * @param {object} o - options\n   * @return {boolean} isChanged - Returns a boolean indicating whether any option has been changed\n   */\n  setOptions: function setOptions(o) {\n    const _this = this;\n    o = o || {};\n    let isChanged = false;\n\n    Object.keys(o).forEach(key => {\n      if (_this.o.hasOwnProperty(key) && _this.o[key] !== o[key]) {\n        _this.o[key] = o[key];\n        isChanged = true;\n      }\n    });\n\n    if (isChanged) {\n      this.setState();\n    }\n\n    return isChanged;\n  }\n};\n\nexport default WidgetOptionsMixin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget-mixin-options.js","/**\n * Mixin for methods related to observer callback support\n * @mixin\n */\nlet WidgetObserverMixin = {\n\n  /**\n   * Register a new observer function that will recieve the state value every time the state is updated.\n   * @public\n   * @param {function} newObserver - The new observer function to be notified every time the state changes.\n   * @return {boolean} isChanged - Indicates whether an observer was added.\n   */\n  addObserver: function addObserver(newObserver) {\n    let isChanged = false;\n\n    if (!(this.observers.find(observer => observer === newObserver))) {\n      this.observers.push(newObserver);\n      isChanged = true;\n    }\n\n    return isChanged;\n  },\n\n  /**\n   * Remove an observer function from being notified when the state changes.\n   * @public\n   * @param {function} targetObserver - The observer function to be removed.\n   * @return {boolean} isChanged - Indicates whether an observer has been removed\n   */\n  removeObserver: function removeObserver(targetObserver) {\n    const _this = this;\n    let isChanged = false;\n\n    this.observers.forEach((observer, idx) => {\n      if (observer === targetObserver) {\n        _this.observers.splice(idx, 1);\n        isChanged = true;\n      }\n    });\n\n    return isChanged;\n  },\n\n  /**\n   * Alias for addObserver. Registers a listener (observer) function.\n   * @param {function} newListener - The new listener (observer) function to be notified every time the state changes.\n   * @return {boolean} isChanged - Indicates whether an observer was added.\n   */\n  addListener: function addListener(newListener) {\n    this.addObserver(newListener);\n  },\n\n  /**\n   * Alias for removeObserver. Removes a listener (observer) function.\n   * @param {function} targetListener - The listener (observer) function to be removed.\n   * @return {boolean} isChanged - Indicates whether an observer has been removed\n   */\n  removeListener: function removeListener(targetListener) {\n    this.removeObserver(targetListener);\n  },\n\n  /**\n   * Notify all observers of new state\n   * @protected\n   */\n  _notifyObservers() {\n    const _this = this;\n    this.observers.forEach(observer => observer(_this.getVal()));\n  }\n};\n\nexport default WidgetObserverMixin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget-mixin-observer.js","import AudioPatch from './audio-patch';\nimport AudioModuleUtil from 'audio_modules/core/util';\nimport shimWebAudioConnect from 'audio_modules/core/shim-web-audio-connect';\nimport AdditiveSynth from 'audio_modules/AdditiveSynth';\nimport ChannelStrip from 'audio_modules/channel-strip';\nimport Envelope from 'audio_modules/envelope';\nimport StereoFeedbackDelay from 'audio_modules/StereoFeedbackDelay';\nimport OscillatorVoice from 'audio_modules/oscillator-voice';\nimport AdditiveSynthVoice from 'audio_modules/additive-synth-voice'\n\n/**\n * Class representing an Audio Module Manager.\n * Audio Module Managers facilitate creating and managing Audio Patches.\n * @class\n */\nclass AudioModuleManager {\n  \n  /**\n   * @constructor\n   * @param {AudioContext} [audioCtx] - The Audio Context to use. If this argument is not provided,\n   *                                    a new Audio Context will be created and associated with this\n   *                                    Audio Module Manager.\n   */\n  constructor(audioCtx) {\n    this.AUDIO_CTX = (typeof audioCtx === \"undefined\") ? new AudioContext() : audioCtx;\n\n    // Shim the WebAudio connect and disconnect methods so that we can connect and\n    // disconnect AudioModules the same way as WebAudio AudioNodes and use AudioNodes\n    // interchangably with AudioModules\n    shimWebAudioConnect(this.AUDIO_CTX);\n\n    this.destination = this.AUDIO_CTX.destination;\n  }\n\n  /**\n   * Return the Audio Context associated with this Module Manager.\n   * @returns {AudioContext} - The Audio Context associated with this Module Manager.\n   */\n  getContext() {\n    return this.AUDIO_CTX;\n  }  \n  \n  /**\n  * Return the Audio Context destination associated with with this Module Manager.\n  * @returns {AudioNode} - The audio destination node associated with this Module Manager.\n  */\n getDestination() {\n   return this.AUDIO_CTX.destination;\n }\n\n  /**\n   * An audio patch is a collection of connected audio modules that form a meaningful unit\n   * @param {object} initObj - An object specifying the initialization parameters,\n   *                            containing two properties: modules, and connectionPaths\n   * @param {object} initObj.modules - An object representing the named audio modules used in this patch\n   * @param {array} initObj.connectionPaths - An 2D array of strings, where each string represents the name of\n   *                              an Audio Module (matching the way it is named in the 'modules' object),\n   *                              and the sequence of these names represents an audio path.\n   *                              For example, the following is one possibility:\n   *                                [[\"synth1\", \"delay\", \"reverb\", \"output\"],\n   *                                [\"synth2\", \"reverb\"]]\n   *                              This connection specifies two connection paths:\n   *                                synth1 -> delay -> reverb -> output\n   *                              And the second, where synth2 is connected to the same reverb used\n   *                              in the first paths\n   *                                synth2 -> reverb -> output\n   *                              Note that since the reverb is already connected to the output by the\n   *                              first path, it does not need to be redundantly connected in the second path\n   * @return {object} moduleMapObj - an object used as a map where keys are strings used to name each module,\n   *                                 and values are the module objects themselves\n   */\n  createAudioPatch(initObj) {\n    const _this = this;\n\n    initObj = initObj || {};\n\n    // moduleMap will store the modules created keyed by the names given to them\n    // keys are arbitrary strings used as names for each module\n    // values are the module objects themselves\n    let moduleMapObj = {};\n\n    try {\n      // try to create the modules requested in the initObj and store them in moduleMapObj\n      if (typeof initObj.modules !== \"object\") throw (\"Exception in initAudioPatch: no audio modules provided in initiation object\");\n\n      Object.keys(initObj.modules).forEach(audioModuleName => {\n        let audioModuleSpec = initObj.modules[audioModuleName];\n\n        // if the audio module type is specified as a string, create the corresponding modules\n        if (typeof audioModuleSpec === \"string\") {\n          // placeholder to use when creating the new module\n          let newAudioModule = null;\n\n          // use name in lowercase with whitespace removed\n          switch (audioModuleSpec.toLowerCase().replace(/[\\W-]+/g, \"\")) {\n            case \"additivesynth\":\n              newAudioModule = _this.createAdditiveSynth();\n              break;\n\n            case \"additivesynthvoice\": \n              newAudioModule = _this.createAdditiveSynthVoice();\n              break;\n\n            case \"biquadfilter\":\n            case \"filter\":\n              newAudioModule = _this.createBiquadFilter();\n              break;\n\n            case \"channelstrip\":\n              newAudioModule = _this.createChannelStrip();\n              break;\n\n            case \"destination\":\n              newAudioModule = _this.createDestination()\n              break;\n\n            case \"envelope\":\n              newAudioModule = _this.createBiquadFilter();\n              break;\n\n            case \"oscillator\":\n              newAudioModule = _this.createOscillator();\n              break;\n\n            case \"oscillatorvoice\":\n              newAudioModule = _this.createOscillatorVoice();\n              break;\n\n            case \"stereofeedbackdelay\":\n            case \"delay\":\n              newAudioModule = _this.createStereoFeedbackDelay();\n              break;\n\n            default:\n              throw (\"Exception in initAudioPatch: no such module \" + audioModuleSpec);\n              break;\n          }\n\n          moduleMapObj[audioModuleName] = newAudioModule;\n        }\n      });\n\n      // try to connect the modules\n      if (typeof initObj.connections === \"object\" && Array.isArray(initObj.connections)) {\n        initObj.connections.forEach(connectionPath => {\n          for (let i = 0; i < connectionPath.length - 1; i++) {\n            let currentModule = moduleMapObj[connectionPath[i]];\n            let nextModule = moduleMapObj[connectionPath[i + 1]];\n            currentModule.connect(nextModule);\n          }\n        });\n      }\n    }\n    catch (e) {\n      console.log(e);\n      moduleMapObj = null;\n    }\n\n    return new AudioPatch(moduleMapObj, _this.AUDIO_CTX, _this);\n  }\n\n  /**\n   * Create an Additive Synth Audio Module\n   */\n  createAdditiveSynth(o) {\n    o = o || {};\n    return new AdditiveSynth(this.AUDIO_CTX, o);\n  }\n\n  /**\n   * Create an Additive Synth Voice Audio Module \n   */\n  createAdditiveSynthVoice(o) {\n    o = o || {};\n    return new AdditiveSynthVoice(this.AUDIO_CTX, o);\n  }\n\n  /**\n   * Create a Biquad Filter Audio Module\n   */\n  createBiquadFilter() {\n    return this.AUDIO_CTX.createBiquadFilter();\n  }\n\n  /**\n   * Create an Oscillator\n   */\n  createOscillator() {\n    return this.AUDIO_CTX.createOscillator();\n  }\n\n  /**\n   * Create an Oscillator Voice\n   */\n  createOscillatorVoice(o) {\n    o = o || {};\n    return new OscillatorVoice(this.AUDIO_CTX, o);\n  }\n\n  /**\n   * Create an Gain\n   */\n  createGain() {\n    return this.AUDIO_CTX.createGain();\n  }\n\n  /**\n   * Create a Channel Strip Audio Module\n   */\n  createChannelStrip(o) {\n    o = o || {};\n    return new ChannelStrip(this.AUDIO_CTX, o);\n  }\n\n  /**\n   * Create a destination node\n   */\n  createDestination() {\n    return this.AUDIO_CTX.destination;\n  }\n\n  /**\n   * Create an Envelope Audio Module\n   */\n  createEnvelope(o) {\n    o = o || {};\n    return new Envelope(this.AUDIO_CTX, o);\n  }\n\n  /**\n   * Create a Stereo Feedback Delay Audio Module\n   */\n  createStereoFeedbackDelay(o) {\n    o = o || {};\n    return new StereoFeedbackDelay(this.AUDIO_CTX, o);\n  }\n}\n\nexport default AudioModuleManager;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/core/audio-module-manager.js","/**\n * Class representing an Audio Patch created by an Audio Module Manager.\n * @class \n */\nclass AudioPatch {\n\n  /**\n   * @constructor\n   * @param {Object} moduleMap\n   * @param {AudioContext} audioCtx\n   * @param {AudioModuleManager} audioModuleManager\n   */\n  constructor(moduleMap, audioCtx, audioModuleManager) {\n    this.MODULE_MAP = moduleMap;\n    this.AUDIO_CTX = audioCtx;\n    this.AUDIO_MODULE_MANAGER = audioModuleManager;\n    \n    // a more consise alias\n    this.modules = this.MODULE_MAP;\n  }\n\n  /**\n   * Returns the Audio Context\n   * @returns {AudioContext}\n   */\n  getAudioContext() {\n    return this.AUDIO_CTX;\n  }\n\n  /**\n   * Alias for {getAudioContext}.\n   * @returns {AudioContext}\n   */\n  getAudioCtx() {\n    return this.getAudioContext();\n  }\n\n  /**\n   * Returns the module map.\n   * @returns {object} - Object representing the module map.\n   */\n  getModuleMap() {\n    return this.MODULE_MAP;\n  }\n\n  /**\n   * Alias for {getModuleMap}. Returns the module map.\n   * @returns {object} - Object representing the module map.\n   */\n  modules() {\n    return this.MODULE_MAP;\n  }\n\n  /**\n   * Returns the Audio Module Manager associated with this patch.\n   * @returns {AudioModuleManager} - The Audio Module Manager associated with this patch.\n   */\n  getAudioModuleManager() {\n    return this.AUDIO_MODULE_MANAGER;\n  }\n}\n\nexport default AudioPatch;\n\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/core/audio-patch.js","import AdditiveSynthVoice from './additive-synth-voice';\nimport ChannelStrip from './channel-strip';\nimport AudioModuleUtil from './core/util';\n\nclass AdditiveSynth {\n  constructor (audioCtx, o) {\n      o = o || {};\n\n      this._audioCtx = audioCtx;\n\n      var numVoices = o.numVoices || 16;\n      this._numOvertones = o.numOvertones || 20;\n\n      this._voices = [];\n      this._availableVoices = [];\n      this._busyVoices = []; // { voiceNum: {number}, pitch: {number} }\n      this._channelStrip = new ChannelStrip(this._audioCtx);\n\n      for (var i = 0; i < numVoices; i++) {\n        this._voices.push(new AdditiveSynthVoice(this._audioCtx, { numOvertones: this._numOvertones }));\n        this._voices[i].connect(this._channelStrip.input);\n        this._availableVoices.push(i);\n      }\n\n      this.output = this._channelStrip.output;\n      this._audioModuleOutput = this.output;\n  }\n\n  /* =================== */\n  /* --- Audio setup --- */\n  /* =================== */\n\n  /**\n   * Connect to another AudioNode or AudioModule\n   */\n  connect (destination) {\n    // if destination has an input property, connect to it (destination is an AudioModule)\n    if (typeof destination.input === \"object\") {\n      this.output.connect(destination.input);\n    }\n    // else destination is an AudioNode and can be connected to directly\n    else {\n      this.output.connect(destination);\n    }\n  }\n\n  /**\n   * Disconnect from an AudioNode or AudioModule\n   */\n  disconnect (destination) {\n    // if destination has an input property, disconnect from it (destination is an AudioModule)\n    if (typeof destination.input === \"object\") {\n      this.output.disconnect(destination.input);\n    // else destination is an AudioNode and can be disconnected from directly\n    } else {\n      this.output.disconnect(destination);\n    }\n  }\n\n  /* =========================================================================================== */\n  /* GETTERS AND SETTERS                                                                         */\n  /* =========================================================================================== */\n\n  /** Number of voices */\n  get numVoices () {\n    return this._voices.length;\n  }\n  set numVoices (newNumVoices) {\n    const _this = this;\n\n    // if the new number of voices is more than previous number, we add voices\n    if (newNumVoices > this.numVoices) {\n      for (var i = this.numVoices; i < newNumVoices; i++) {\n        this._voices.push(new AdditiveSynthVoice(this._audioCtx, { numOvertones: this._numOvertones }));\n        this._voices[i].connect(this._channelStrip.input);\n        this._availableVoices.push(i);\n      }\n\n    // if the new number is less than previous, remove voices\n    } else if (newNumVoices < this.numVoices) {\n      let numVoicesToDelete = this.numVoices - newNumVoices;\n      let numAvailableVoices = this._availableVoices.length;\n\n      // if the number of voices to delete is less then or equal to the number of available (inactive) voices, delete these voices\n      if (numVoicesToDelete <= numAvailableVoices) {\n        deleteAvailableVoices(numVoicesToDelete);\n      }\n\n      // else delete all available (inactive) voices and also required number of busy voices\n      else {\n        let numBusyVoicesToDelete = numVoicesToDelete - numAvailableVoices;\n\n        deleteAvailableVoices(numAvailableVoices);\n        deleteBusyVoices(numBusyVoicesToDelete);\n      }\n\n      function deleteAvailableVoices (numVoicesToDelete) {\n        for(let i = 0; i < numVoicesToDelete; i++) {\n          let voiceToDelete = _this._availableVoices[i];\n\n          _this._voices.splice(voiceToDelete, 1);\n          _this._availableVoices.splice(i, 1);\n\n          // remap the available and busy voices because we modified the voices stack\n          _this._availableVoices = _this._availableVoices.map(voice => {\n            return (voice > voiceToDelete) ? voice - 1 : voice;\n          });\n          _this._busyVoices = _this._busyVoices.map(voice => {\n            return {\n              voiceNum: (voice.voiceNum > voiceToDelete) ? voice.voiceNum - 1 : voice.voiceNum,\n              pitch: voice.pitch\n            };\n          });\n        }\n      }\n\n      function deleteBusyVoices (numBusyVoicesToDelete) {\n        // delete the required number of busy voices\n        for (let i = 0; i < numBusyVoicesToDelete; i++) {\n          let voiceToDelete = _this._busyVoices[i].voiceNum;\n\n          _this.releaseVoice(voiceToDelete);\n          _this._voices.splice(voiceToDelete, 1);\n          _this._busyVoices.splice(i, 1);\n\n          // remap the busy voices pointer stack because we modified the voices stack\n          _this._busyVoices = _this._busyVoices.map(voice => {\n            return {\n              voiceNum: (voice.voiceNum > voiceToDelete) ? voice.voiceNum - 1 : voice.voiceNum,\n              pitch: voice.pitch\n            };\n          });\n        }\n      }\n    }\n    console.log('newNumVoices: ' + this.numVoices);\n    return this;\n  }\n  setNumVoices (newNumVoices) {\n    this.numVoices = newNumVoices;\n  }\n\n  /** Number of overtones */\n  get numOvertones () {\n    return this._numOvertones;\n  }\n  set numOvertones (newNumOvertones) {\n    this._voices.forEach(voice => {\n      voice.numOvertones = newNumOvertones;\n    });\n    this._numOvertones = newNumOvertones;\n    return this;\n  }\n  setNumOvertones (newNumOvertones) {\n    this.numOvertones = newNumOvertones;\n  }\n\n  /** Gain */\n  get gain () {\n    return this._channelStrip.outputGain;\n  }\n  set gain (newGain) {\n    this._channelStrip.outputGain = newGain;\n    return this;\n  }\n  setGain (newGain) {\n    this.gain = newGain;\n  }\n\n  /** Pan */\n  get pan () {\n    return this._channelStrip.pan;\n  }\n  set pan (newPan) {\n    this._channelStrip.pan = newPan;\n    return this;\n  }\n  setPan (newPan) {\n    this.pan = newPan;\n  }\n\n  /** Get overtone amplitude */\n  getOvertoneAmplitude (voiceNum, otNum) {\n    this._voices[voiceNum].getOvertoneAmplitude(otNum);\n    return this;\n  }\n\n  /** Overtone amplitude */\n  setOvertoneAmplitude (voiceNum, otNum, newAmp) {\n    this._voices[voiceNum].setOvertoneAmplitude(otNum, newAmp);\n    return this;\n  }\n\n  /* ========================= */\n  /* --- Envelope controls --- */\n  /* ========================= */\n\n  /** Attack envelope */\n  set attackEnvelope (newEnv) {\n    this._voices.forEach(voice => {\n      voice.attackEnvelope = newEnv;\n    });\n  }\n\n  /** Release envelope */\n  set releaseEnvelope (newEnv) {\n    this._voices.forEach(voice => {\n      voice.releaseEnvelope = newEnv;\n    });\n  }\n\n  /** Set the attack envelope for an overtone\n   *  @param {number} otNum - Number of overtone for which to set envelope\n   *  @param {array} newEnv - 2D array representing the new envelope\n   */\n  setOvertoneAttackEnvelope (otNum, newEnv) {\n    this._voices.forEach(voice => {\n      voice.setOvertoneAttackEnvelope(otNum, newEnv);\n    });\n    return this;\n  }\n\n  /** Set the release envelope for an overtone\n   *  @param {number} otNum - Number of overtone for which to set envelope\n   *  @param {array} newEnv - 2D array representing the new envelope\n   */\n  setOvertoneReleaseEnvelope (otNum, newEnv) {\n    this._voices.forEach(voice => {\n      voice.setOvertoneReleaseEnvelope(otNum, newEnv);\n    });\n    return this;\n  }\n\n  /**\n   * Play a note using the current attack envelope\n   * @param {(number|string)} note - MIDI pitch value or note name (i.e. A0 or F#8)\n   */\n  playNote (note) {\n    var noteNameFormat = /^([a-g]|[A-G])(#|b)?([0-9]|10)$/;\n    var selectedVoice = -1;\n    var freq = -1;\n\n    // check for correct note format and convert to freq\n    if (typeof note === 'number'\n        && note >= 0 && note <= 127) {\n      freq = AudioModuleUtil.midiToFreq(note);\n    } else if (typeof note === 'string'\n               && noteNameFormat.test(note) === true) {\n      note = AudioModuleUtil.noteNameToMidi(note); // convert to MIDI so we can keep track of active note in _busyVoices\n      freq = AudioModuleUtil.midiToFreq(note);\n    }\n\n    // if the correct format for note was received\n    if (freq !== -1) {\n      //pick a voice\n      if (this._availableVoices.length > 0) {\n        selectedVoice = this._availableVoices.shift();\n      } else {\n        selectedVoice = this._busyVoices.shift().voiceNum;\n        this.releaseVoice(selectedVoice);\n      }\n      this._busyVoices.push({ voiceNum: selectedVoice, note: note });\n\n      this.attackVoice(selectedVoice, freq);\n    }\n  }\n\n  /**\n   * Release a currently playing note\n   * @param {(number|string)} note - MIDI pitch value or note name (i.e. A0 or F#8)\n   */\n  releaseNote (note) {\n    var noteNameFormat = /^([a-g]|[A-G])(#|b)?([0-9]|10)$/;\n    var selectedVoice = -1;\n\n    // check for correct note format and convert to freq\n    if (typeof note === 'number'\n        && note >= 0 && note <= 127) {\n    } else if (typeof note === 'string'\n               && noteNameFormat.test(note) === true) {\n      note = AudioModuleUtil.noteNameToMidi(note);\n    } else {\n      note = -1;\n    }\n\n    if (note !== -1) {\n      var selectedBusyNodeIndex = this._busyVoices.findIndex((busyVoice) => {\n        return busyVoice.note === note;\n      });\n\n      if (selectedBusyNodeIndex !== -1) {\n        selectedVoice = this._busyVoices[selectedBusyNodeIndex].voiceNum;\n\n        this._availableVoices.push(selectedVoice);\n        this._busyVoices.splice(selectedBusyNodeIndex, 1);\n      }\n    }\n\n    if (selectedVoice !== -1) {\n      this.releaseVoice(selectedVoice);\n    } else return this;\n  }\n\n  /**\n   * Execute the attack for a given voice with a given frequency\n   **/\n  attackVoice (voiceNum, freq) {\n    this._voices[voiceNum].setFrequency(freq);\n    this._voices[voiceNum].attack();\n  }\n\n  /**\n   * Execute the release for a given voice\n   **/\n  releaseVoice (voiceNum) {\n    this._voices[voiceNum].release();\n  }\n}\n\nexport default AdditiveSynth\n\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/AdditiveSynth.js","/**\n * Mixin for methods related to options\n * @mixin\n */\nlet AudioModuleOptionsMixin = {\n  \n    /**\n     * Initializes the options.\n     * @private\n     * @param {object} o - Options.\n     */\n    _initOptions: function _initOptions(o) {\n      const _this = this;\n      o = o || {};\n  \n      Object.keys(o).forEach(key => {\n        if (_this.o.hasOwnProperty(key) && _this.o[key] !== o[key]) {\n          _this.o[key] = o[key];\n        }\n      });\n    },\n  \n    /**\n     * Get the options object\n     * @public\n     * @return {object} this.o - Options\n     */\n    getOptions: function getOptions() {\n      return Object.assign({}, this.o);\n    },\n  \n    /**\n     * Set the options\n     * Uses a diffing function, so only specified keys that have new values will be changed\n     * @public\n     * @param {object} o - options\n     * @return {boolean} isChanged - Returns a boolean indicating whether any option has been changed\n     */\n    setOptions: function setOptions(o) {\n      const _this = this;\n      o = o || {};\n      let isChanged = false;\n  \n      Object.keys(o).forEach(key => {\n        if (_this.o.hasOwnProperty(key) && _this.o[key] !== o[key]) {\n          _this.o[key] = o[key];\n          isChanged = true;\n        }\n      });\n  \n      if (isChanged) {\n        this.setState();\n      }\n  \n      return isChanged;\n    }\n  };\n  \n  export default AudioModuleOptionsMixin;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/core/audio-module-options-mixin.js","import AudioModule from \"./core/audio-module\"; \n\nclass StereoFeedbackDelay extends AudioModule {\n\n  /**\n   * Stereo delay with feedback\n   * @param {object} [o] - Options\n   * @param {number} [o.delayTimeL]\n   * @param {number} [o.delayTimeR]\n   * @param {number} [o.feedbackL]\n   * @param {number} [o.feedbackR]\n   * @param {number} [o.crossfeedL]\n   * @param {number} [o.crossfeedR]\n   * @param {number} [o.dryMixL]\n   * @param {number} [o.dryMixR]\n   * @param {number} [o.wetMixL]\n   * @param {number} [o.wetMixR]\n   */\n  constructor (audioCtx, o) {\n\n    try {\n      super(audioCtx);\n\n      // shim StereoPanner if it's not implemented\n      if (typeof this._audioCtx.createStereoPanner === 'undefined') {\n        this._audioCtx.createStereoPanner = function () { return new StereoPannerShim(this)};\n      }\n\n      o = o || {};    \n      this._audioCtx = audioCtx; \n      this._maxDelayTime = o.maxDelayTime || 10;\n\n      this._input = this._audioCtx.createGain();\n      this._channelSplitter = this._audioCtx.createChannelSplitter(2);\n      this._dryMixL = this._audioCtx.createGain();\n      this._dryMixR = this._audioCtx.createGain();\n      this._wetMixL = this._audioCtx.createGain();\n      this._wetMixR = this._audioCtx.createGain();\n      this._delayL = this._audioCtx.createDelay(this._maxDelayTime);\n      this._delayR = this._audioCtx.createDelay(this._maxDelayTime);\n      this._feedbackL = this._audioCtx.createGain();\n      this._feedbackR = this._audioCtx.createGain();\n      this._crossfeedL = this._audioCtx.createGain();\n      this._crossfeedR = this._audioCtx.createGain();\n      this._channelMerger = this._audioCtx.createChannelMerger(2);\n      this._output = this._audioCtx.createGain();\n  \n      this._connectAudioNodes();\n      this._setAudioDefaults(o);\n  \n      this.input = this._input;\n      this.output = this._output;\n\n    } catch (err) {\n\n      console.error(err);\n      throw new Error(\"Failed to create StereoFeedbackDelay audio module.\");\n    }\n  }\n\n  _connectAudioNodes () {\n    this._input.connect(this._channelSplitter);\n    this._channelSplitter.connect(this._dryMixL, 0);\n    this._channelSplitter.connect(this._dryMixR, 1);\n    this._channelSplitter.connect(this._delayL, 0);\n    this._channelSplitter.connect(this._delayR, 1);\n    this._delayL.connect(this._feedbackL);\n    this._delayR.connect(this._feedbackR);\n    this._feedbackL.connect(this._delayL);\n    this._feedbackR.connect(this._delayR);\n    this._delayL.connect(this._crossfeedR);\n    this._delayR.connect(this._crossfeedL);\n    this._crossfeedL.connect(this._delayL);\n    this._crossfeedR.connect(this._delayR);\n    this._delayL.connect(this._wetMixL);\n    this._delayR.connect(this._wetMixR);\n    this._dryMixL.connect(this._channelMerger, 0, 0);\n    this._dryMixR.connect(this._channelMerger, 0, 1);\n    this._wetMixL.connect(this._channelMerger, 0, 0);\n    this._wetMixR.connect(this._channelMerger, 0, 1);\n    this._channelMerger.connect(this._output);\n\n    return this;\n  }\n\n  _setAudioDefaults (o) {\n    o = o || {};\n\n    this._input.gain.value = 1;\n    this._delayL.delayTime.value = o.delayTimeL || 0.5;\n    this._delayR.delayTime.value = o.delayTimeR || 0.5;\n    this._dryMixL.gain.value = o.dryMixL || 1;\n    this._dryMixR.gain.value = o.dryMixR || 1;\n    this._wetMixL.gain.value = o.wetMixL || 0.2;\n    this._wetMixR.gain.value = o.wetMixR || 0.2;\n    this._feedbackL.gain.value = o.feedbackL || 0.1;\n    this._feedbackR.gain.value = o.feedbackR || 0.1;\n    this._crossfeedL.gain.value = o.crossfeedL || 0;\n    this._crossfeedR.gain.value = o.crossfeedR || 0;\n    this._output.gain.value = 1;\n\n    return this;\n  }\n\n  /**\n   * Connect to another AudioNode or AudioModule\n   */\n  connect (destination) {\n    // if destination has an input property, connect to it (destination is an AudioModule)\n    if (typeof destination.input === \"object\") {\n      this.output.connect(destination.input);\n    }\n    // else destination is an AudioNode and can be connected to directly\n    else {\n      this.output.connect(destination);\n    }\n  }\n\n  /**\n   * Disconnect from an AudioNode or AudioModule\n   */\n  disconnect (destination) {\n    // if destination has an input property, disconnect from it (destination is an AudioModule)\n    if (typeof destination.input === \"object\") {\n      this.output.disconnect(destination.input);\n    // else destination is an AudioNode and can be disconnected from directly\n    } else {\n      this.output.disconnect(destination);\n    }\n  }\n\n  /* =========================== */\n  /* --- Getters and setters --- */\n  /* =========================== */\n\n  /** Delay time left */\n  get delayTimeL () {\n    return this._delayL.delayTime;\n  }\n  set delayTimeL (time) {\n    this._delayL.delayTime.value = time;\n    return this;\n  }\n\n  /** Delay time right */\n  get delayTimeR () {\n    return this._delayR.delayTime;\n  }\n  set delayTimeR (time) {\n    this._delayR.delayTime.value = time;\n    return this;\n  }\n\n  /** Feedback L */\n  get feedbackL () {\n    return this._feedbackL.gain;\n  }\n  set feedbackL (gain) {\n    this._feedbackL.gain.value = gain;\n    return this;\n  }\n\n  /** Feedback R */\n  get feedbackR () {\n    return this._feedbackR.gain;\n  }\n  set feedbackR (gain) {\n    this._feedbackR.gain.value = gain;\n    return this;\n  }\n\n  /** Cross-feed L */\n  get crossfeedL () {\n    return this._crossfeedL.gain;\n  }\n  set crossfeedL (gain) {\n    this._crossfeedL.gain.value = gain;\n    return this;\n  }\n\n  /** Cross-feed R */\n  get crossfeedR () {\n    return this._crossfeedR.gain;\n  }\n  set crossfeedR (gain) {\n    this._crossfeedR.gain.value = gain;\n    return this;\n  }\n\n  /** Dry mix L */\n  get dryMixL () {\n    return this._dryMixL.gain;\n  }\n  set dryMixL (gain) {\n    this._dryMixL.gain.value = gain;\n    return this;\n  }\n\n  /** Dry mix R */\n  get dryMixR () {\n    return this._dryMixR.gain;\n  }\n  set dryMixR (gain) {\n    this._dryMixR.gain.value = gain;\n    return this;\n  }\n\n  /** Wet mix L */\n  get wetMixL () {\n    return this._wetMixL.gain;\n  }\n  set wetMixL (gain) {\n    this._wetMixL.gain.value = gain;\n    return this;\n  }\n\n  /** Wet mix R */\n  get wetMixR () {\n    return this._wetMixR.gain;\n  }\n  set wetMixR (gain) {\n    this._wetMixR.gain.value = gain;\n    return this;\n  }\n}\n\nexport default StereoFeedbackDelay;\n\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/StereoFeedbackDelay.js","import Widget from \"ui/core/widget\";\nimport Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\nimport MathUtil from \"util/util-math\";\n\n/**\n * Class representing a Graph widget.\n * @class \n * @implements {Widget}\n */\nclass Graph extends Widget {\n\n  /**\n   * @constructor\n   * @param {object} container - DOM container for the widget.\n   * @param {object} [o] - Options.\n   * @param {number} [o.minXVal=0] - Minimum X value.\n   * @param {number} [o.minYVal=0] - Minimum Y value.\n   * @param {number} [o.maxXVal=100] - Maximum X value.\n   * @param {number} [o.maxYVal=100] - Maximum Y value.\n   * @param {number} [o.maxNumVertices=-1] - Maximum number of vertices.\n   * @param {number} [o.quantizeX=0.1] - X-quantization (\"grid\") value.\n   * @param {number} [o.quantizeY=0.1] - Y-quantization (\"grid\") value.\n   * @param {number} [o.xDecimalPrecision=1] - Number of decimal places for output of the X values.\n   * @param {number} [o.yDecimalPrecision=1] - Number of decimal places for output of the Y values.\n   * @param {boolean} [o.isEditable=true] - Is the graph editable?\n   * @param {string} [o.vertexColor=\"#f40\"] - Color of vertex points.\n   * @param {string} [o.lineColor=\"#484848\"] - Color of lines connecting the vertices.\n   * @param {string} [o.backgroundColor=\"#fff\"] - Background color.\n   * @param {number} [o.lineWidth=2] - Width of the connecting lines.\n   * @param {number} [o.vertexRadius=4] - Radius of the vertex points.\n   * @param {number} [o.mouseSensitivity=1.2] - Mouse sensitivity (how much moving the mouse affects the interaction).\n   */\n  constructor(container, o) {\n    super(container, o);\n    return this;\n  }\n\n  /* ===========================================================================\n  *  PUBLIC API\n  */\n\n  /**\n   * Sets the options.\n   * @public @override\n   */\n  setOptions(o) {\n    o = o || {};\n\n    super.setOptions(o);\n  }\n\n  /**\n  * Returns the state as an array of [x, y] pairs.\n  * @public @override\n  */\n  getVal() {\n    return this.state.vertices.map(vtx => [vtx.x, vtx.y]);\n  }\n\n  /**\n  * Sets the state as an array of [x, y] vertex pairs.\n  * Same as setVal(), but will not trigger observer callback methods.\n  * @public @override\n  * @param {array} - An array of [x, y] points\n  */\n  setInternalVal(vertexArray) {\n   let vertices = vertexArray.map(xyPair => { return {x: xyPair[0], y: xyPair[1]}; });\n\n   this.setInternalState({ vertices: vertices });\n  }\n\n  /**\n  * Sets the state as an array of [x, y] vertex pairs.\n  * Same as setInternalVal(), but will trigger observer callback methods.\n  * @public @override\n  * @param {array} - An array of [x, y] points.\n  */\n  setVal(vertexArray) {\n    let vertices = vertexArray.map(xyPair => { return {x: xyPair[0], y: xyPair[1]}; });\n\n    this.setState({ vertices: vertices });\n  }\n\n  /**\n   * Sets the value of a particular vertex, selected by its index. \n   * Note: will not trigger observer notifications.\n   * @public\n   * @param {number} val - Value to set.\n   * @param {number} idx - Index of the vertex to set the value for.\n   * @returns {number} - Index of the vertex that has been set, or -1 if no such vertex exists.\n   */\n  setVertexVal(val, idx) {\n    if (idx >= 0 && idx < this.state.vertices.length) {\n      let vertices = this.state.vertices.map(vtx => vtx);\n      vertices[idx].y = val;\n      this.setInternalState({ vertices: vertices });\n      return idx;\n    } else {\n      return -1;\n    }\n  }\n\n  /**\n   * Returns the number of vertices set on this graph.\n   * @public\n   * @return {number} - Number of vertices.\n   */\n  getNumVertices() {\n    return this.state.vertices.length;\n  }\n\n  /**\n   * Adds new vertices to the state.\n   * Each vertex is represented as x and y values, as well as optional boolean flags\n   * specifying whether the x, y, or both values should be fixed (unchangeble).\n   * The x and y values may also take the strings \"min\", \"max\" to specify that the coordinates \n   * should be tied to the minimum or maximum possible x or y values for the graph.\n   * @public\n   * @param {...object} vtx - Object representing the new vertex to add.\n   * @param {number} [vtx.x=minXVal] - X coordinate for the new vertex.\n   * @param {number} [vtx.y=minYVal] - Y coordinate for the new vertex.\n   * @param {boolean} [vtx.isXFixed=false] - Is the X coordinate fixed (unable to move)?\n   * @param {boolean} [vtx.isYFixed=false] - Is the Y coordinate fixed (unable to move)?\n   */\n  addVertex(...vtx) {\n    for (let i = 0; i < vtx.length; i++) {\n      let newVtx = vtx[i];\n\n      newVtx = (typeof newVtx !== 'undefined') ? newVtx : {};\n      newVtx.x = (typeof newVtx.x !== 'undefined') ? newVtx.x : this.o.minXVal;\n      newVtx.y = (typeof newVtx.y !== 'undefined') ? newVtx.y : this.o.minYVal;\n      newVtx.isXFixed = (typeof newVtx.isXFixed !== 'undefined') ? newVtx.isXFixed : false;\n      newVtx.isYFixed = (typeof newVtx.isYFixed !== 'undefined') ? newVtx.isYFixed : false;\n      newVtx.xAnchor = \"\";\n      newVtx.yAnchor = \"\";\n\n      if (newVtx.x === \"max\") {\n        newVtx.isXFixed = true;\n        newVtx.x = this.o.maxXVal;\n        newVtx.xAnchor = \"max\";\n      } else if (newVtx.x === \"min\") {\n        newVtx.isXFixed = true;\n        newVtx.x = this.o.minXVal;\n        newVtx.xAnchor = \"min\";\n      }\n\n      if (newVtx.y === \"max\") {\n        newVtx.isYFixed = true;\n        newVtx.y = this.o.maxYVal;\n        newVtx.yAnchor = \"max\";\n      } else if (newVtx.x === \"min\") {\n        newVtx.isYFixed = true;\n        newVtx.y = this.o.minYVal;\n        newVtx.yAnchor = \"min\";\n      }\n\n      let newVertices = this.getState().vertices.map(x=>x);\n\n      newVertices.push(newVtx);\n      newVertices.sort((a, b) => a.x - b.x);\n\n      this.setState({\n        vertices: newVertices\n      });\n    }\n  }\n\n  /**\n   * Adds a vertex with fixed x and y coordinates.\n   * @param {object} vtx - Vertex coordinates in format {x, y}\n   * @param {number} vtx.x - X coordinate of the vertex.\n   * @param {number} vtx.y - Y coordinate of the vertex.\n   */\n  addFixedVertex(...vtx) {\n    for (let i = 0; i < vtx.length; i++) {\n      let newVtx = vtx[i];\n      this.addVertex({ x: newVtx.x, y: newVtx.y, isXFixed: true, isYFixed: true });\n    }\n  }\n\n  /**\n   * Adds a vertex with fixed y coordinate.\n   * @param {object} vtx - Vertex coordinates in format {x, y}\n   * @param {number} vtx.x - X coordinate of the vertex.\n   * @param {number} vtx.y - Y coordinate of the vertex.\n   */\n  addFixedXVertex(...vtx) {\n    for (let i = 0; i < vtx.length; i++) {\n      let newVtx = vtx[i];\n      this.addVertex({ x: newVtx.x, y: newVtx.y, isXFixed: true, isYFixed: false });\n    }\n  }\n\n\n  /**\n   * Adds a vertex with fixed y coordinate.\n   * @param {object} vtx - Vertex coordinates in format {x, y}\n   * @param {number} vtx.x - X coordinate of the vertex.\n   * @param {number} vtx.y - Y coordinate of the vertex.\n   */\n  addFixedYVertex(...vtx) {\n    for (let i = 0; i < vtx.length; i++) {\n      let newVtx = vtx[i];\n      this.addVertex({ x: newVtx.x, y: newVtx.y, isXFixed: false, isYFixed: true });\n    }\n  }\n\n  /* ============================================================================================= */\n  /* INITIALIZATION METHODS\n  /* ============================================================================================= */\n\n  /**\n   * Initializes the options.\n   * @override\n   * @private\n   */\n  _initOptions(o) {\n    // set defaults\n    this.o = {};\n\n    this.o.minXVal = 0;\n    this.o.minYVal = 0;\n    this.o.maxXVal = 100;\n    this.o.maxYVal = 100;\n    this.o.maxNumVertices = -1;\n    this.o.quantizeX = 0.1;\n    this.o.quantizeY = 0.1;\n    this.o.xDecimalPrecision = 1;\n    this.o.yDecimalPrecision = 1;\n    this.o.isEditable = true;\n    this.o.vertexColor = \"#f40\";\n    this.o.fixedVertexColor = this.o.vertexColor;\n    this.o.lineColor = \"#484848\";\n    this.o.backgroundColor = \"#fff\";\n    this.o.vertexRadius = 4;\n    this.o.lineWidth = 2;\n    this.o.mouseSensitivity = 1.2;\n\n    // override defaults with provided options\n    super._initOptions(o);\n  }\n\n  /**\n   * Initializes state constraints.\n   * @override\n   * @private\n   */\n  _initStateConstraints() {\n    const _this = this;\n\n    this.stateConstraints = new ConstraintSpec({\n      vertices: [{\n        x: new Constraint({\n          min: _this.o.minXVal,\n          max: _this.o.maxXVal,\n          transform: (num) => {\n            return MathUtil.quantize(num, _this.o.quantizeX);\n          }\n        }),\n        y: new Constraint({\n          min: _this.o.minYVal,\n          max: _this.o.maxYVal,\n          transform: (num) => {\n            return MathUtil.quantize(num, _this.o.quantizeY);\n          }\n        })\n      }]\n    });\n  }\n\n  /**\n   * Initializes state.\n   * @override\n   * @private\n   */\n  _initState() {\n    this.state = {\n      // verices contains an array of vertices\n      // each vertex is an object of form \n      // {\n      //   x: numbber, \n      //   y: number, \n      //   isXFixed: boolean, \n      //   isYFixed: boolean,\n      //   xAnchor: string,\n      //   yAnchor: string\n      // }\n      // isXFixed and isYFixed are boolean values that tell if a given\n      // vertex may be moved in the x and y planes\n      vertices: []\n    };\n  }\n\n  /**\n   * Initializes the svg elements.\n   * @override\n   * @private\n   */\n  _initSvgEls() {\n    const _this = this;\n\n    this.svgEls = {\n      panel: document.createElementNS(this.SVG_NS, \"rect\"),\n      vertices: [],\n      lines: []\n    };\n\n    this.svgEls.panel.setAttribute(\"width\", this._getWidth());\n    this.svgEls.panel.setAttribute(\"height\", this._getHeight());\n    this.svgEls.panel.setAttribute(\"fill\", this.o.backgroundColor);\n    this.svgEls.panel.setAttribute(\"stroke\", this.o.lineColor);\n\n    this._appendSvgEls();\n    this._update();\n  }\n\n  /**\n   * Initializes mouse and touch event handlers.\n   * @override\n   * @private\n   */\n  _initHandlers() {\n    const _this = this;\n\n    let targetVtx = null;\n    let targetLine = null;\n    let vtxPos0 = {}; // original poisition of two vertices affected by a line move\n    let x0 = 0;\n    let y0 = 0;\n    let x1 = 0;\n    let y1 = 0;\n    let dx = 0;\n    let dy = 0;\n\n    this.handlers = {\n\n       touchPanel: function touchPanel(ev) {\n         ev.preventDefault();\n\n         let xPos = ev.clientX - _this._getLeft();\n         let yPos = ev.clientY - _this._getTop();\n         let vertexState = _this._calcVertexState({x: xPos, y: yPos});\n\n         _this.addVertex(vertexState);\n       },\n\n       touchVertex: function touchVertex(ev) {\n         ev.preventDefault();\n\n         targetVtx = ev.target;\n\n         document.addEventListener(\"mousemove\", _this.handlers.moveVertex);\n         document.addEventListener(\"touchmove\", _this.handlers.moveVertex);\n         ev.target.addEventListener(\"mouseup\", _this.handlers.deleteVertex);\n         ev.target.addEventListener(\"touchend\", _this.handlers.deleteVertex);\n       },\n\n       touchLine: function touchLine(ev) {\n         ev.preventDefault();\n\n         targetLine = ev.target;\n\n         x0 = ev.clientX - _this._getLeft();\n         y0 = ev.clientY - _this._getTop();\n         vtxPos0 = null;\n\n         document.addEventListener(\"mousemove\", _this.handlers.moveLine);\n         document.addEventListener(\"touchmove\", _this.handlers.moveLine);\n       },\n\n       moveLine: function moveLine(ev) {\n         ev.preventDefault();\n\n         document.addEventListener(\"mouseup\", _this.handlers.endMoveLine);\n         document.addEventListener(\"touchend\", _this.handlers.endMoveLine);\n\n         x1 = ev.clientX - _this._getLeft();\n         y1 = ev.clientY - _this._getTop();\n\n         // delta position (change in position)\n         let dPos = {\n           x: x1 - x0,\n           y: y1 - y0\n         };\n\n         vtxPos0 = _this._moveLine(targetLine, dPos, vtxPos0);\n       },\n\n       endMoveLine: function endMoveLine(ev) {\n         ev.preventDefault();\n\n         vtxPos0 = null;\n\n         document.removeEventListener(\"mousemove\", _this.handlers.moveLine);\n         document.removeEventListener(\"touchmove\", _this.handlers.moveLine);\n       },\n\n       deleteVertex: function deleteVertex(ev) {\n         ev.preventDefault();\n\n         document.removeEventListener(\"mousemove\", _this.handlers.moveVertex);\n         document.removeEventListener(\"touchmove\", _this.handlers.moveVertex);\n\n         _this._deleteVertex(ev.target);\n\n         ev.target.removeEventListener(\"mouseup\", _this.handlers.deleteVertex);\n         ev.target.removeEventListener(\"touchend\", _this.handlers.deleteVertex);\n       },\n\n       moveVertex: function moveVertex(ev) {\n         ev.preventDefault();\n\n         targetVtx.removeEventListener(\"mouseup\", _this.handlers.deleteVertex);\n         targetVtx.removeEventListener(\"touchend\", _this.handlers.deleteVertex);\n\n         document.addEventListener(\"mouseup\", _this.handlers.endMoveVertex);\n         document.addEventListener(\"touchend\", _this.handlers.endMoveVertex);\n\n         let xPos = ev.clientX - _this._getLeft();\n         let yPos = ev.clientY - _this._getTop();\n\n         _this._moveVertex(targetVtx, {x: xPos, y: yPos});\n       },\n\n       endMoveVertex: function endMoveVertex(ev) {\n         ev.preventDefault();\n\n         document.removeEventListener(\"mousemove\", _this.handlers.moveVertex);\n         document.removeEventListener(\"touchmove\", _this.handlers.moveVertex);\n       }\n    };\n\n    this.svgEls.panel.addEventListener(\"mousedown\", _this.handlers.touchPanel);\n    this.svgEls.panel.addEventListener(\"touchdown\", _this.handlers.touchPanel);\n\n    this.svgEls.vertices.forEach(vtx => {\n      vtx.addEventListener(\"mousedown\", _this.handlers.touchVertex);\n      vtx.addEventListener(\"touchdown\", _this.handlers.touchVertex);\n    });\n\n    this.svgEls.lines.forEach(line => {\n      line.addEventListener(\"mousedown\", _this.handlers.touchLine);\n      line.addEventListener(\"touchdown\", _this.handlers.touchLine);\n    });\n  }\n\n  /**\n   * Updates (redraws) component based on state.\n   * @override\n   * @private\n   */\n  _update() {\n    const _this = this;\n\n    // update vertices to have min and max values if specified\n    _this.state.vertices.forEach(vtx => {\n      vtx.x = (vtx.xAnchor === \"max\") ? _this.o.maxXVal :\n                (vtx.xAnchor === \"min\") ? _this.o.minXVal :\n                vtx.x;\n\n      vtx.y = (vtx.yAnchor === \"max\") ? _this.o.maxYVal :\n                (vtx.yAnchor === \"min\") ? _this.o.minYVal :\n                vtx.y;\n    });\n\n    // sort svg vertexes using a sort map\n    let idxSortMap = _this.state.vertices.map((vtx, idx) => { return { vtx: vtx, idx: idx }; });\n    idxSortMap.sort((a, b) => a.vtx.x - b.vtx.x);\n    _this.state.vertices = idxSortMap.map(el => _this.state.vertices[el.idx]);\n\n    // if there are more state vertices than svg vertices, add a corresponding number of svg vertices and lines\n    for (let i = _this.svgEls.vertices.length; i < _this.state.vertices.length; ++i) {\n      _this._addSvgVertex();\n    }\n\n    // if there are more svg vertices than state vertices, remove a corresponding number of svg vertices and lines\n    for (let i = _this.svgEls.vertices.length; i > _this.state.vertices.length; --i) {\n      _this._removeSvgVertex();\n    }\n\n    // sort the svg vertices according to the vertex sort map\n    _this.svgEls.vertices = idxSortMap.map(el => _this.svgEls.vertices[el.idx]);\n\n    // set the correct position coordinates for every vertex\n    _this.state.vertices.forEach((stateVtx, idx) => {\n      let svgVtx = _this.svgEls.vertices[idx];\n      let pos = _this._calcVertexPos(stateVtx);\n\n      svgVtx.setAttribute(\"cx\", pos.x);\n      svgVtx.setAttribute(\"cy\", pos.y);\n      svgVtx.setAttribute(\"r\", _this.o.vertexRadius);\n\n      let vtxFill = (_this.state.vertices[idx].isXFixed || _this.state.vertices[idx].isYFixed) ?\n                    _this.o.fixedVertexColor :\n                    _this.o.vertexColor;\n\n      svgVtx.setAttribute(\"fill\", vtxFill);\n\n      // for every vertex other than the first, draw a line to the previous vertex\n      if (idx > 0) {\n        let prevVtx = _this.state.vertices[idx - 1];\n        let prevPos = _this._calcVertexPos(prevVtx);\n        let line = _this.svgEls.lines[idx - 1];\n\n        line.setAttribute(\"d\", \"M \" + pos.x + \" \" + pos.y + \" L \" + prevPos.x + \" \" + prevPos.y);\n        line.setAttribute(\"fill\", \"transparent\");\n        line.setAttribute(\"stroke-width\", _this.o.lineWidth);\n        line.setAttribute(\"stroke\", _this.o.lineColor);\n      }\n    });\n\n    // remove and reappend all svg elements so that vertices are on top of lines\n    _this.svgEls.lines.forEach(svgLine => {\n      _this.svg.removeChild(svgLine);\n      _this.svg.appendChild(svgLine);\n    });\n\n    _this.svgEls.vertices.forEach(svgVtx => {\n      _this.svg.removeChild(svgVtx);\n      _this.svg.appendChild(svgVtx);\n    });\n\n    // reassign listeners\n    _this.svgEls.vertices.forEach(vtx => {\n      vtx.addEventListener(\"mousedown\", _this.handlers.touchVertex);\n      vtx.addEventListener(\"touchdown\", _this.handlers.touchVertex);\n    });\n\n    _this.svgEls.lines.forEach(line => {\n      line.addEventListener(\"mousedown\", _this.handlers.touchLine);\n      line.addEventListener(\"touchdown\", _this.handlers.touchLine);\n    });\n  }\n\n  /* ==============================================================================================\n  *  INTERNAL FUNCTIONALITY METHODS\n  */\n\n  /**\n   * Deletes a vertex.\n   * @private\n   * @param {SVGElement} targetVtx - Vertex to Delete\n   */\n  _deleteVertex(targetVtx) {\n    const _this = this;\n\n    let vtxIdx = this.svgEls.vertices.findIndex(vtx => vtx === targetVtx);\n    let isRemovable = !(this.state.vertices[vtxIdx].isXFixed || this.state.vertices[vtxIdx].isYFixed)\n\n    if (vtxIdx !== -1 && isRemovable) {\n      let newVertices = this.getState().vertices.map(x=>x);\n\n      newVertices.splice(vtxIdx, 1);\n      _this.setState({\n        vertices: newVertices\n      });\n    }\n  }\n\n  /**\n   * Adds a new SVG vertex representation.\n   * @private\n   */\n  _addSvgVertex() {\n    const _this = this;\n\n    let newVertex = document.createElementNS(_this.SVG_NS, \"circle\");\n    _this.svgEls.vertices.push(newVertex);\n    _this.svg.appendChild(newVertex);\n\n    // if there is more than 1 svg vertex, we also need to draw lines between them\n    if (_this.svgEls.vertices.length > 1) {\n      this._addSvgLine();\n    }\n  }\n\n  /**\n   * Adds an SVG line connecting two vertices.\n   * @private\n   */\n  _addSvgLine() {\n    let newLine = document.createElementNS(this.SVG_NS, \"path\");\n    this.svg.appendChild(newLine);\n    this.svgEls.lines.push(newLine);\n  }\n\n  /**\n   * Removes an SVG vertex.\n   * @private\n   */\n  _removeSvgVertex() {\n    let vertex = this.svgEls.vertices[this.svgEls.vertices.length - 1];\n\n    this.svg.removeChild(vertex);\n    vertex = null;\n    this.svgEls.vertices.pop();\n\n    if (this.svgEls.lines.length > 0) {\n     this._removeSvgLine();\n    }\n  }\n\n  /**\n   * Removes an SVG line connecting two vertices.\n   * @private\n   */\n  _removeSvgLine() {\n    let line = this.svgEls.lines[this.svgEls.lines.length - 1];\n\n    this.svg.removeChild(line);\n    line = null;\n    this.svgEls.lines.pop();\n  }\n\n  /**\n    * Moves a line.\n    * @private\n    * @param {SVGElement} targetLine - The target line\n    * @param {object} dPos -\n    * @param {number} dPos.x\n    * @param {number} dPos.y\n    * @param {object} vtxPos0 - Original position (before moving)\n    *                           of the two vertices immediately to the left\n    *                           and right of the line being moved in the\n    *                           form { vtx1: {x, y}, vtx2: {x, y}, boundaryBL: {x, y}, boundaryTR: {x, y} }\n    *                           If null, will be calculated from the\n    *                           corresponding svg element.\n    * @param {obect} [vtxPos0.vtx1]\n    * @param {number} [vtxPos0.vtx1.x]\n    * @param {number} [vtxPos0.vtx1.y]\n    * @param {obect} [vtxPos0.vtx2]\n    * @param {number} [vtxPos0.vtx2.x]\n    * @param {number} [vtxPos0.vtx2.y]\n    * @returns {object} Original position of the two vertices affected by the line move in the form\n    *                   { vtx1: {x, y}, vtx2: {x, y}, boundaryBL: {x, y}, boundaryTR: {x, y} }.\n    */\n  _moveLine(targetLine, dPos, vtxPos0) {\n    const _this = this;\n\n    let lineIdx = _this.svgEls.lines.findIndex(line => line === targetLine);\n\n    // get vertices to the left and right of the selected line\n    let vtx1 = _this.svgEls.vertices[lineIdx];\n    let vtx2 = _this.svgEls.vertices[lineIdx + 1];\n\n    let vtx1curPos = {\n      x: parseInt(_this.svgEls.vertices[lineIdx].getAttribute(\"cx\")),\n      y: parseInt(_this.svgEls.vertices[lineIdx].getAttribute(\"cy\"))\n    };\n    let vtx2curPos = {\n      x: parseInt(_this.svgEls.vertices[lineIdx + 1].getAttribute(\"cx\")),\n      y: parseInt(_this.svgEls.vertices[lineIdx + 1].getAttribute(\"cy\"))\n    };\n\n    // if vtxPos0 is null or undefined, this is the first time this function\n    // was called in the line move, and we need to get the position of affected\n    // vertices from the svg attributes.\n    // vtx1 and vtx2 are the left and right vertices bounding the line\n    // boundaryBL is the bottom left boundary restricting movement of the line\n    // boundaryTR is the top right boundary restricting movement of the line\n    if (vtxPos0 === null || vtxPos0 === undefined) {\n\n      let boundaryBL = {\n        x: (lineIdx > 0) ? \n               parseInt(_this.svgEls.vertices[lineIdx - 1].getAttribute(\"cx\"))\n            : _this._calcVertexPos({x: _this.o.minXVal, y: _this.o.minYVal}).x,\n        y: _this._calcVertexPos({x: _this.o.minXVal, y: _this.o.minYVal}).y\n      };\n\n      let boundaryTR = {\n        x: (lineIdx + 2 < _this.svgEls.vertices.length) ? \n              parseInt(_this.svgEls.vertices[lineIdx + 2].getAttribute(\"cx\"))\n            : _this._calcVertexPos({x: _this.o.maxXVal, y: _this.o.maxYVal}).x,\n        y: _this._calcVertexPos({x: _this.o.maxXVal, y: _this.o.maxYVal}).y\n      };\n\n      vtxPos0 = {\n       vtx1: vtx1curPos,\n       vtx2: vtx2curPos,\n       boundaryBL: boundaryBL,\n       boundaryTR: boundaryTR\n      };\n    }\n\n    // calculate the new positions for the two affected vertices\n    let vtx1newPos = {\n      x: vtxPos0.vtx1.x + dPos.x,\n      y: vtxPos0.vtx1.y + dPos.y\n    };\n\n    let vtx2newPos = {\n      x: vtxPos0.vtx2.x + dPos.x,\n      y: vtxPos0.vtx2.y + dPos.y\n    };\n\n    // if moving would take x values outside of boundaries, keep x values the same\n    if (vtx1newPos.x < vtxPos0.boundaryBL.x || \n        vtx2newPos.x < vtxPos0.boundaryBL.x || \n        vtx1newPos.x > vtxPos0.boundaryTR.x || \n        vtx2newPos.x > vtxPos0.boundaryTR.x) {\n      vtx1newPos.x = vtx1curPos.x;\n      vtx2newPos.x = vtx2curPos.x;\n    }\n\n    // if moving would take y values outside of boundaries, keep y values the same\n    // remember that y-coordinates are inverted when dealing with the canvas\n    if (vtx1newPos.y > vtxPos0.boundaryBL.y || \n        vtx2newPos.y > vtxPos0.boundaryBL.y || \n        vtx1newPos.y < vtxPos0.boundaryTR.y || \n        vtx2newPos.y < vtxPos0.boundaryTR.y) {\n      vtx1newPos.y = vtx1curPos.y;\n      vtx2newPos.y = vtx2curPos.y;\n    }\n\n    this._moveVertex(vtx1, vtx1newPos);\n    this._moveVertex(vtx2, vtx2newPos);\n\n    // return the original position so that it may be used again if the line move is not finished\n    return vtxPos0;\n  }\n\n  /**\n  * Moves a vertex.\n  * @private\n  * @param {SVGElement} targetVtx - The target vertex\n  * @param {Object} newPos - The new position\n  * @param {number} newPos.x\n  * @param {number} newPos.y\n  */\n  _moveVertex(targetVtx, newPos) {\n    const _this = this;\n\n    let vtxState = _this._calcVertexState(newPos);\n    let vtxIdx = _this.svgEls.vertices.findIndex(vtx => vtx === targetVtx);\n\n    let vertices = _this.getState().vertices.map(x=>x);\n\n    // move the vertex if it's not fixed in x or y direction\n    vertices[vtxIdx].x = (vertices[vtxIdx].isXFixed) ? vertices[vtxIdx].x : vtxState.x;\n    vertices[vtxIdx].y = (vertices[vtxIdx].isYFixed) ? vertices[vtxIdx].y : vtxState.y;\n\n    _this.setState({\n      vertices: vertices\n    });\n  }\n\n  /* ===========================================================================\n  *  HELPER METHODS\n  */\n\n  /**\n   * Calculates the x and y for a vertex in the graph according to its state value.\n   * @private\n   */\n  _calcVertexPos(vertexState) {\n    let normalizedWidth = this._getWidth() - (2 * this.o.vertexRadius);\n    let normalizedHeight = this._getHeight() - (2 * this.o.vertexRadius);\n\n    return {\n     x: (normalizedWidth * (vertexState.x / this.o.maxXVal)) + this.o.vertexRadius,\n     y: (normalizedHeight - (normalizedHeight * (vertexState.y / this.o.maxYVal))) + this.o.vertexRadius\n    };\n  }\n\n  /**\n   * Calculates the x and y for a vertex state based on position on the graph.\n   * (inverse of _calcVertexPos).\n   * @private\n   */\n  _calcVertexState(vertexPos) {\n    let normalizedWidth = this._getWidth() - (2 * this.o.vertexRadius);\n    let normalizedHeight = this._getHeight() - (2 * this.o.vertexRadius);\n\n    return {\n      x: this.o.maxXVal * ((vertexPos.x - this.o.vertexRadius) / normalizedWidth),\n      y: this.o.maxYVal - (this.o.maxYVal * (vertexPos.y / normalizedHeight))\n    };\n  }\n\n  /**\n   * Converts on-screen x distance to scaled x state-value.\n   * @private\n   */\n  _xPxToVal(x) {\n    return ((x - this.o.vertexRadius) / (this._getWidth() + (2 * this.o.vertexRadius))) \n              * (this.o.maxXVal - this.o.minXVal);\n  }\n\n  /**\n   * Converts on-screen y distance to scaled y state-value.\n   * @private\n   */\n  _yPxToVal(y) {\n    return (y / (this._getHeight() + (2 * this.o.vertexRadius))) * (this.o.maxYVal - this.o.minYVal);\n  }\n}\n\nexport default Graph;\n\n\n// WEBPACK FOOTER //\n// ./src/ui/graph.js","/* ============================================================================================= */\n/* ENVELOPE TEST\n/* ============================================================================================= */\n\nimport AudioModuleManager from \"audio_modules/core/audio-module-manager\";\nimport Graph from \"ui/graph\";\n\nconst AMM = new AudioModuleManager(new AudioContext());\n\nlet osc = AMM.createOscillator();\nlet envelope = AMM.createEnvelope();\nlet gain = AMM.createGain();\n\nosc.connect(envelope);\nenvelope.connect(gain);\ngain.connect(AMM.destination);\n\nosc.frequency.value = 220;\ngain.gain.value = 0;\nosc.start();\n\nconst attackGraph = new Graph(document.querySelector(\"#attack-graph\"), {\n  minXVal: 0,\n  maxXVal: 2,\n  minYVal: 0,\n  maxYVal: 1\n});\nattackGraph.addVertex({x: \"min\", y: 0}, {x: \"max\", y: 0});\nattackGraph.addListener(env => {\n  envelope.setAttackEnvelope(env);\n});\n\nconst releaseGraph = new Graph(document.querySelector(\"#release-graph\"), {\n  minXVal: 0,\n  maxXVal: 2,\n  minYVal: 0,\n  maxYVal: 1,\n});\nreleaseGraph.addVertex({x: \"min\", y: 0}, {x: \"max\", y: 0});\nreleaseGraph.addListener(env => envelope.setReleaseEnvelope(env));\n\nconst attackBtn = document.querySelector(\"#attack-button\");\nconst releaseBtn = document.querySelector(\"#release-button\");\nconst audioToggle = document.querySelector(\"#audio-toggle\");\nconst messageBox = document.querySelector(\".message\");\n\naudioToggle.addEventListener(\"change\", ev => {\n  gain.gain.value = ev.target.checked ? 0.5 : 0;\n});\n\nattackBtn.addEventListener(\"click\", ev => {\n  envelope.attack().then(env => {\n    messageBox.innerHTML = \"Attack finished, attack env: \" + env;\n  });\n});\n\nreleaseBtn.addEventListener(\"click\", ev => {\n  envelope.release().then(env => {\n    messageBox.innerHTML = \"Release finished, release env: \" + env;\n  });\n});\n\n\n// WEBPACK FOOTER //\n// ./test/manual_test/audio_modules/envelope.js"],"sourceRoot":""}