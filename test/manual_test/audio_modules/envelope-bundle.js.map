{"version":3,"sources":["webpack:///webpack/bootstrap b66047f1b3ec4bad13db","webpack:///./src/util/constraint.js","webpack:///./src/util/constraint-def.js","webpack:///./src/audio_modules/core/audio-module.js","webpack:///./src/ui/core/widget.js","webpack:///./src/audio_modules/channel-strip.js","webpack:///./src/audio_modules/core/util.js","webpack:///./src/audio_modules/envelope.js","webpack:///./src/util/util-math.js","webpack:///./src/audio_modules/core/verify-audio-context-features.js","webpack:///./src/audio_modules/core/shim-web-audio-connect.js","webpack:///./src/ui/core/widget-mixin-svgns.js","webpack:///./src/ui/core/widget-mixin-state.js","webpack:///./src/ui/core/widget-mixin-options.js","webpack:///./src/ui/core/widget-mixin-observer.js","webpack:///./src/audio_modules/core/audio-module-manager.js","webpack:///./src/audio_modules/core/audio-patch.js","webpack:///./src/audio_modules/AdditiveSynth.js","webpack:///./src/audio_modules/AdditiveSynthVoice.js","webpack:///./src/audio_modules/core/audio-module-options-mixin.js","webpack:///./src/audio_modules/Overtone.js","webpack:///./src/audio_modules/StereoFeedbackDelay.js","webpack:///./src/ui/graph.js","webpack:///./test/manual_test/audio_modules/envelope.js"],"names":["Constraint","spec","min","max","enum","transform","ConstraintSpec","specDefObj","constraintMap","_parseMap","targetObj","_this","forEach","_constrainBranch","keyBranch","target","constraint","key","undefined","Math","Array","find","c","cMap","push","Object","parentBranch","map","x","keys","keyIdx","newKeyBranch","curKey","length","arrFlag","i","keyBranchSlice","slice","j","_applyConstraint","AudioModule","audioCtx","numInputs","numOutputs","isAudioModule","isWebAudioConnectShimmed","input","createGain","output","audioComponents","_initOptions","_initAudioComponents","_initAudioParams","destination","outputIndex","inputIndex","connect","disconnect","assign","prototype","Widget","container","o","Element","Error","svg","document","createElementNS","SVG_NS","appendChild","setAttribute","getBoundingClientRect","width","height","svgEls","handlers","state","stateConstraints","observers","_initStateConstraints","_initState","_initSvgEls","_initHandlers","values","appendSvgEls","svgEl","child","arrEl","newVal","newState","_getLeft","y","_getTop","top","left","ChannelStrip","inputGain","panner","createStereoPanner","outputGain","err","console","error","gain","pan","value","AudioModuleUtil","midiToFreq","midiPitch","a4tuning","freq","pow","noteNameToMidi","noteName","noteNameFormat","test","log","capture","exec","note","accidental","octave","noteFundamentalMap","noteFundamental","noteNameToFreq","Envelope","envGain","attackEnvelope","releaseEnvelope","newEnv","startTime","currentTime","env","a0","t0","a1","t1","cancelScheduledValues","setValueAtTime","linearRampToValueAtTime","Promise","resolve","reject","window","setTimeout","MathUtil","getPrecision","val","decStr","split","round","precision","factor","quantize","q","qVal","abs","VerifyAudioContextFeatures","features","feature","createAnalyser","createBuffer","createBufferSource","createBiquadFilter","createChannelMerger","createChannelSplitter","createConvolver","createDelay","createDynamicsCompressor","createIIRFilter","createOscillator","createPannerr","StereoPannerShim","warn","shimWebAudioConnect","audioNodePrototype","getPrototypeOf","webAudioConnect","webAudioDisconnect","WidgetStateMixin","getState","setInternalState","isChanged","hasOwnProperty","constrain","_update","setState","_notifyObservers","WidgetOptionsMixin","getOptions","setOptions","WidgetObserverMixin","addObserver","newObserver","observer","removeObserver","targetObserver","idx","splice","addListener","newListener","removeListener","targetListener","getVal","AudioModuleManager","AUDIO_CTX","AudioContext","initObj","moduleMapObj","modules","audioModuleSpec","audioModuleName","newAudioModule","toLowerCase","replace","createChannelStrip","createDestination","createAdditiveSynth","createStereoFeedbackDelay","connections","isArray","connectionPath","currentModule","nextModule","e","AudioPatch","moduleMap","audioModuleManager","MODULE_MAP","AUDIO_MODULE_MANAGER","getAudioContext","AdditiveSynth","_audioCtx","numVoices","_numOvertones","numOvertones","_voices","_availableVoices","_busyVoices","_channelStrip","_audioModuleOutput","newNumVoices","newNumOvertones","newGain","newPan","voiceNum","otNum","getOvertoneAmplitude","newAmp","setOvertoneAmplitude","voice","setOvertoneAttackEnvelope","setOvertoneReleaseEnvelope","selectedVoice","shift","releaseVoice","attackVoice","selectedBusyNodeIndex","findIndex","busyVoice","setFrequency","attack","release","deleteAvailableVoices","numVoicesToDelete","voiceToDelete","pitch","deleteBusyVoices","numBusyVoicesToDelete","numAvailableVoices","AdditiveSynthVoice","_envelope","numberOfOvertones","_overtones","options","newFreq","frequency","amplitude","func","n","fundFreq","sampleRate","pop","freqCeil","AudioModuleOptionsMixin","Oscillator","_oscillator","start","curTime","StereoFeedbackDelay","_maxDelayTime","maxDelayTime","_input","_channelSplitter","_dryMixL","_dryMixR","_wetMixL","_wetMixR","_delayL","_delayR","_feedbackL","_feedbackR","_crossfeedL","_crossfeedR","_channelMerger","_output","_connectAudioNodes","_setAudioDefaults","delayTime","delayTimeL","delayTimeR","dryMixL","dryMixR","wetMixL","wetMixR","feedbackL","feedbackR","crossfeedL","crossfeedR","time","Graph","fixedStartPointY","maxYVal","minYVal","fixedEndPointY","vertices","vtx","vertexArray","xyPair","pos","newVertices","sort","a","b","minXVal","maxXVal","maxNumVertices","quantizeX","quantizeY","xDecimalPrecision","yDecimalPrecision","hasFixedStartPoint","hasFixedEndPoint","isEditable","vertexColor","lineColor","backgroundColor","vertexRadius","lineWidth","mouseSensitivity","num","isFixedStartPointInitialized","isFixedEndPointInitialized","panel","lines","_getWidth","_getHeight","_appendSvgEls","targetVtx","targetLine","vtxPos0","x0","y0","x1","y1","dx","dy","touchPanel","ev","preventDefault","xPos","clientX","yPos","clientY","vertexState","_calcVertexState","addVertex","touchVertex","addEventListener","moveVertex","deleteVertex","touchLine","moveLine","endMoveLine","dPos","_moveLine","removeEventListener","_deleteVertex","endMoveVertex","_moveVertex","line","idxSortMap","el","_addSvgVertex","_removeSvgVertex","stateVtx","svgVtx","_calcVertexPos","prevVtx","prevPos","removeChild","svgLine","vtxIdx","newVertex","_addSvgLine","newLine","vertex","_removeSvgLine","lineIdx","vtx1","vtx2","vtx1curPos","parseInt","getAttribute","vtx2curPos","boundaryBL","boundaryTR","vtx1newPos","vtx2newPos","newPos","vtxState","vertexPos","AMM","osc","envelope","createEnvelope","attackGraph","querySelector","setAttackEnvelope","releaseGraph","setReleaseEnvelope","attackBtn","releaseBtn","audioToggle","messageBox","checked","then","innerHTML"],"mappings":"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","file":"/test/manual_test/audio_modules/envelope-bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 50);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b66047f1b3ec4bad13db","/**\n * @class\n * Constraint object represents constraints on a value.\n * Instances of Constraint are used as leaves on a ConstraintSpec definition.\n * A ConstraintSpec useses Constraints to apply a constraint to leaves of an\n * arbitrarily nested object, whose leaves represent values that may be constrained.\n */\nclass Constraint {\n\n  /**\n   * @constructor\n   * @param {object} [spec] - Spec specifying the constraints.\n   * @param {number} [spec.min] - Minimum value.\n   * @param {number} [spec.max] - Maximum value.\n   * @param {array} [spec.enum] - Array of possible enumerable values.\n   * @param {function} [spec.transform] - A transformation function to apply to the value.\n   */\n  constructor(spec) {\n    spec = spec || {};\n\n    this.min = spec.min;\n    this.max = spec.max;\n    this.enum = spec.enum;\n    this.transform = spec.transform;\n  }\n}\n\nexport default Constraint;\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/constraint.js","import Constraint from \"./constraint\";\n\n/**\n * ConstraintSpec is used to apply a constraining function to a state object of arbitrary nestedness,\n * whose leaves are values that need to be constrained (i.e. to min or max values).\n * In order for ConstraintSpec to work properly, it's constructor must be given an object that\n * exactly mirrors the nested structure of the object to be constrained, with the leaves\n * containing instances of the Constraint class. Additional requirements (i.e. how to deal with nested arrays)\n * are outlined below.\n * TODO: expand explanation\n *\n * @class\n */\nclass ConstraintSpec {\n\n  /**\n   * @constructor\n   * @param {object} specDefObj - The constraint spec definition object, which defines the nesting\n   *                              structure of the objects that need to be constrained. The leaves\n   *                              of this specDef object must be objects of type Constraint, which\n   *                              act as the constraint definitions for each leaf.\n   */\n  constructor(specDefObj) {\n    this.constraintMap = [[]];\n    this._parseMap(specDefObj, this.constraintMap[0], this.constraintMap);\n  }\n\n  /**\n   * Check a constraint map for constraint specs and apply them to obj.\n   * Note: will not mutate the original object. New value is returned.\n   * @public\n   * @param {object} targetObj - The state object to check\n   * @return {number | string | object | array} val - The constrained value.\n   */\n  constrain(targetObj) {\n    const _this = this;\n    _this.constraintMap.forEach(keyBranch => {\n      _this._constrainBranch(targetObj, keyBranch);\n    });\n  }\n\n  /**\n   * Apply a constraint.\n   * @private\n   * @param {object} target - The target object to constrain\n   * @param {Constraint} constraint - The constraint object to use.\n   * @param {symbol} key - The key to use to access the constraint.\n   * @return {number | string | object | array} val - The constrained value.\n   */\n  _applyConstraint(target, constraint, key) {\n    if (constraint.min !== undefined) {\n      target[key] = Math.max(target[key], constraint.min);\n    }\n    if (constraint.max !== undefined) {\n      target[key] = Math.min(target[key], constraint.max);\n    }\n    if (constraint.enum !== undefined && constraint.enum instanceof Array) {\n      target[key] = (constraint.enum.find(target[key]) !== undefined) ? target[key] : constraint.enum[0];\n    }\n    if (constraint.transform !== undefined && typeof constraint.transform === \"function\") {\n      target[key] = constraint.transform(target[key]);\n    }\n\n    return target;\n  }\n\n  /**\n   * Parse a constraint map\n   * @private\n   * @param {object} c - The map object currently being examined.\n   *                     At the top level, this would be the whole map.\n   *                     At the terminal level, this would be an instance of Constraint object.\n   * @param {array} keyBranch - An array of keys that will specify how to get to each Constraint.\n   *                            The last element in this array will be the constraint itself.\n   * @param {array} cMap - An mutable array of key branches.\n   */\n  _parseMap(c, keyBranch, cMap) {\n    const _this = this;\n\n    if (c instanceof Array) {\n      /* if c is an array, add \"_arr_\" to the current map, and examine the first element.\n       * all elements in an array are required to have identical structure, so examining\n       * the first one is enough.\n       */\n      keyBranch.push(\"_arr_\");\n      _this._parseMap(c[0], keyBranch, cMap);\n    } else if (c instanceof Object && !(c instanceof Constraint)) {\n      // keep a copy of the parent branch to create new branches from\n      let parentBranch = keyBranch.map(x=>x);\n\n      // create new branch for each key after the first key using the parentBranch clone\n      Object.keys(c).forEach((key, keyIdx) => {\n        if (keyIdx === 0) {\n          keyBranch.push(key);\n          _this._parseMap(c[key], keyBranch, cMap);\n        } else {\n          let newKeyBranch = parentBranch.map(x=>x);\n          cMap.push(newKeyBranch);\n          newKeyBranch.push(key);\n          _this._parseMap(c[key], newKeyBranch, cMap);\n        }\n      });\n    } else if (c instanceof Constraint) {\n\n      // this will be the last element in the branch - the Constraint object itself\n      keyBranch.push(c);\n    }\n  }\n\n  /**\n   * Apply constraints to one branch of the constraint map.\n   * @private\n   * @param {object} targetObj - The state object to apply the constraint to\n   * @param {object} defObj - The constraint definition object to use.\n   * @param {array} keyBranch - An array of keys representing a path to a constraint object.\n   */\n  _constrainBranch(targetObj, keyBranch) {\n    const _this = this;\n\n    let curKey;\n    let constraint = keyBranch[keyBranch.length - 1];\n    let arrFlag = false;\n\n    /* Drill into targetObj and defObj following keyBranch keys\n     * We go to length - 2, because the next-to-last element might be an\n     * array, and the last element is the Constraint object itself.\n     */\n    for (let i = 0; i < keyBranch.length - 2 && !arrFlag; ++i) {\n      curKey = keyBranch[i];\n\n      // if we encounter an array, drill into each corresponding arry element in targetObj\n      if (curKey === \"_arr_\") {\n        arrFlag = true;\n\n        let keyBranchSlice = keyBranch.slice(i + 1, keyBranch.length);\n\n        for (let j = 0; j < targetObj.length; ++j) {\n          _this._constrainBranch(targetObj[j], keyBranchSlice);\n        }\n      } else {\n        targetObj = targetObj[curKey];\n      }\n    }\n\n    // if arrFlag is set, we've encountered an array somewhere other than on the leaves\n    // in this case we don't need to operate on it\n    if (!arrFlag) {\n      // Apply the constraints\n      curKey = keyBranch[keyBranch.length - 2];\n\n      if (curKey === \"_arr_\") {\n        for (let i = 0; i < targetObj.length; ++i) {\n          _this._applyConstraint(targetObj, constraint, i);\n        }\n      } else {\n        _this._applyConstraint(targetObj, constraint, curKey);\n      }\n    }\n  }\n}\n\nexport default ConstraintSpec;\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/constraint-def.js","import AudioModuleUtil from \"./util\";\nimport shimWebAudioConnect from \"./shim-web-audio-connect\";\nimport AudioModuleOptionsMixin from \"./audio-module-options-mixin\";\n\n/**\n * Base class representing an Audio Module.\n * An AudioModule wraps a set of AudioNodes to provide a higher-order component that can itself be\n * used as an AudioNode.\n * @abstract @class\n */\nclass AudioModule {\n\n  /**\n   * @constructor\n   * @param {AudioContext} - The Audio Context that the module participates in.\n   * @param {number} numInputs - Number of inputs.\n   * @param {number} numOutputs - Number of outputs.\n   */\n  constructor(audioCtx, numInputs, numOutputs) {\n    this.audioCtx = audioCtx;\n\n    // marker boolean to distinguish current object from an AudioNode\n    this.isAudioModule = true;\n\n    // shim the connect method for the Audio Context so that AudioNodes can connect to AudioModules\n    if (this.audioCtx.isWebAudioConnectShimmed !== true) {\n      shimWebAudioConnect(this.audioCtx);\n    }\n\n    this.input = audioCtx.createGain();\n    this.output = audioCtx.createGain();\n\n    this.audioComponents = {};\n\n    this._initOptions();\n    this._initAudioComponents();\n    this._initAudioParams();\n  }\n\n  /* ============================================================================================= */\n  /*  INITIALIZATION METHODS\n  /* ============================================================================================= */\n\n  /**\n   * Initialize audio components and their connections.\n   * @private @abstract\n   */\n  _initAudioComponents() {}\n\n  /**\n   * Initialize and expose Audio Params.\n   * @private @abstract\n   */\n  _initAudioParams() {}\n\n  /**\n   * Initialize the options.\n   * @private @abstract\n   */\n  _initOptions() {}\n\n  /* ============================================================================================ */\n  /*  PUBLIC API\n  /* ============================================================================================ */\n  \n  /**\n   * Returns the AudioContext that the Audio Module is participating in.\n   * @returns {AudioContext} - the AudioContext that the Audio Module is participating in. \n   */\n  getContext() {\n    return this.audioCtx;\n  }\n  \n  /**\n   * Connect to another AudioNode or AudioModule\n   * @public\n   * @param {AudioNode | AudioModule} destination - AudioNode or AudioModule to connect to.\n   * @param {number} outputIndex - Channel of the output to connect.\n   * @param {number} outputIndex - Channel of the destintation to connect to. \n   */\n  connect(destination, outputIndex, inputIndex) {\n    // if destination has an input property, connect to it (destination is an AudioModule)\n    if (destination.isAudioModule === true) {\n      this.output.connect(destination.input);\n    }\n    // else destination is an AudioNode and can be connected to directly\n    else {\n      this.output.connect(destination);\n    }\n  }\n\n  /**\n   * Disconnect from an AudioNode or AudioModule\n   * @param {AudioNode | AudioModule} destination - AudioNode or AudioModule to disconnect from.\n   * @param {number} outputIndex - Channel of the output to disconnect.\n   * @param {number} outputIndex - Channel of the destintation to disconnect from. \n   */\n  disconnect(destination, outputIndex, inputIndex) {\n    // if destination has an input property, disconnect from it (destination is an AudioModule)\n    if (destination.isAudioModule === true) {\n      this.output.disconnect(destination.input);\n    // else destination is an AudioNode and can be disconnected from directly\n    } else {\n      this.output.disconnect(destination);\n    }\n  }\n}\n\nObject.assign(AudioModule.prototype, AudioModuleOptionsMixin);\n\nexport default AudioModule;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/core/audio-module.js","import WidgetSvgNsMixin from \"./widget-mixin-svgns\";\nimport WidgetStateMixin from \"./widget-mixin-state\";\nimport WidgetOptionsMixin from \"./widget-mixin-options\";\nimport WidgetObserverMixin from \"./widget-mixin-observer\";\n\n'use strict';\n\n/**\n * Abstract base class representing an SVG widget that can be placed inside a DOM container.\n * @class\n * @abstract\n */\nclass Widget {\n\n  /**\n   * @constructor\n   * @mixes WidgetSvgNsMixin\n   * @mixes WidgetStateMixin\n   * @mixes WidgetOptionsMixin\n   * @mixes WidgetObserverMixin\n   * @param {DOM element} container - DOM element that will contain the widget.\n   * @param {object=} o - Options.\n   */\n  constructor(container, o) {\n    if (container === undefined || !(container instanceof Element)) {\n      throw new Error(\"widget requires a DOM element specifying its container as the first argument\");\n    }\n\n    this.container = container;\n\n    o = o || {};\n\n    this.svg = document.createElementNS(this.SVG_NS, \"svg\");\n    this.container.appendChild(this.svg);\n    this.svg.setAttribute(\"width\", this.container.getBoundingClientRect().width);\n    this.svg.setAttribute(\"height\", this.container.getBoundingClientRect().height);\n\n    /* Manifest of containers and namespaces */\n    this.o = {};                 // options namespace\n    this.svgEls = {};            // svg element namespace\n    this.handlers = {};          // mouse and touch event handler namespace\n    this.state = {};             // state namespace\n    this.stateConstraints = {};  // state constraints namespace\n    this.observers = [];         // observer callback container\n\n    this._initOptions(o);\n    this._initStateConstraints();\n    this._initState();\n    this._initSvgEls();\n    this._initHandlers();\n  }\n\n  /**\n   * Initialize the options\n   * @abstract\n   * @protected\n   */\n  _initOptions(o) {}\n\n  /**\n   * Initialize state constraints\n   * @abstract\n   * @protected\n   */\n  _initStateConstraints() {}\n\n  /**\n   * Initialize state\n   * @abstract\n   * @protected\n   */\n  _initState() {}\n\n  /**\n   * Initialize the svg elements.\n   * Each implementation of this method must end with calls to _appendSvgEls() and _update(),\n   * in that order, as shown in this template\n   * @abstract\n   * @protected\n   */\n  _initSvgEls() {}\n\n  /**\n   * Append the newly created svg elements to the svg container.\n   * This method should be called exctly once by each implementation of the _initSvgEls() method.\n   * @protected\n   */\n  _appendSvgEls() {\n    const _this = this;\n\n    Object.values(_this.svgEls).forEach(svgEl => {\n      appendSvgEls(svgEl);\n    });\n\n    function appendSvgEls(child) {\n      if (child instanceof Array) {\n        child.forEach(arrEl => appendSvgEls(arrEl));\n      } else {\n        _this.svg.appendChild(child);\n        child.setAttribute(\"shape-rendering\", \"geometricPrecision\");\n      }\n    }\n  }\n\n  /**\n   * Initialize mouse and touch event handlers\n   * @abstract\n   * @protected\n   */\n  _initHandlers() {}\n\n  /**\n   * Update (redraw) component based on state\n   * @abstract\n   * @protected\n   */\n  _update() {}\n\n  /* ===========================================================================\n  *  PUBLIC API\n  */\n\n  /**\n   * Get public representation of the state.\n   * @abstract\n   * @public\n   */\n  getVal() {}\n\n  /**\n   * Set the current state in a format specific to each widget.\n   * Same as setVal(), but will not cause an observer callback trigger.\n   * @abstract \n   * @public\n   */\n  setInternalVal(newVal) {}\n\n  /**\n   * Set the current state in a format specific to each widget.\n   * Same as setInternalVal(), but will cause an observer callback trigger.\n   * @abstract @public\n   */\n  setVal(newVal) {}\n\n  /**\n   * Get the current state.\n   * @abstract\n   * @public\n   * @returns {object} - Copy of this.state\n   */\n  getState() {}\n\n  /**\n   * Set the current state and redraw.\n   * @description If no new state argument is provided, will reassign old state, taking into account the stateConstraints.\n   * As opposed to setState(), setInternalState() does not trigger observer notification.\n   * Will use Widget.stateConstraints to constrain each state value to each constraints min, max, or enum\n   * @abstract\n   * @public\n   * @param {object} [newState] - The new state.\n   * @returns {boolean} A flag indicating whether the state has been changed.\n   */\n  setInternalState(newState) {}\n\n  /**\n   * Sets the current state and redraws.\n   * @description As opposed to setInternalState(), setState() will call the observer callback functions,\n   * so may lead to an infinate loop if an observer calls this method.\n   * @abstract\n   * @public\n   * @param {object} [newState] - The new state.\n   * @returns {boolean} A flag indicating whether the state has been changed.\n   */\n  setState(newState) {}\n  \n  /* ===========================================================================\n  *  HELPER METHODS\n  */\n\n  /** Helper method: get x relative to the container */\n  _getRelativeX(x) {\n    return x - this._getLeft();\n  }\n\n  /** Helper method: get y relative to the container */\n  _getRelativeY(y) {\n    return y - this._getTop();\n  }\n\n   /** Helper method: get the width of the svg container */\n   _getWidth() {\n     return this.svg.getBoundingClientRect().width;\n   }\n\n   /** Helper method: get the height of the svg container */\n   _getHeight() {\n     return this.svg.getBoundingClientRect().height;\n   }\n\n   /** Helper method: get the top edge position of the svg container */\n   _getTop() {\n     return this.svg.getBoundingClientRect().top;\n   }\n\n   /** Helper method: get the left edge position of the svg container */\n   _getLeft() {\n     return this.svg.getBoundingClientRect().left;\n   }\n}\n\nObject.assign(Widget.prototype, WidgetSvgNsMixin);\nObject.assign(Widget.prototype, WidgetStateMixin);\nObject.assign(Widget.prototype, WidgetOptionsMixin);\nObject.assign(Widget.prototype, WidgetObserverMixin);\n\nexport default Widget;\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget.js","import AudioModule from \"audio_modules/core/audio-module\";\nimport verifyAudioContextFeatures from \"audio_modules/core/verify-audio-context-features\";\n\n/**\n * Class representing a Channel Strip.\n * A Channel Strip is a processing component similar to a channel strip found on a mixing board.\n * It facilitates control over input gain, output gain, and pan of a signal.\n * @class\n */\nclass ChannelStrip extends AudioModule {\n\n  /**\n   * @constructor\n   * @param {AudioContext} audioCtx \n   */\n  constructor(audioCtx, o) {\n    super(audioCtx);\n  }\n\n  /* ============================================================================================= */\n  /*  INITIALIZATION METHODS\n  /* ============================================================================================= */\n  \n  /**\n   * Initialize audio components and their connections.\n   * @private @override\n   */\n  _initAudioComponents() {\n    const _this = this;\n\n    try {\n      verifyAudioContextFeatures(_this.audioCtx, [\"Gain\", \"StereoPanner\"]);\n\n      this.audioComponents = {\n        inputGain: _this.input,\n        panner: _this.audioCtx.createStereoPanner(),\n        outputGain: _this.output\n      };\n\n      this.audioComponents.inputGain.connect(this.audioComponents.panner);\n      this.audioComponents.panner.connect(this.audioComponents.outputGain);\n    \n    } catch(err) {\n      console.error(err);\n    }\n  }\n\n  /**\n   * Initialize and expose Audio Params.\n   * @private @abstract\n   */\n  _initAudioParams() {\n    this.inputGain = this.audioComponents.inputGain.gain;\n    this.outputGain = this.audioComponents.outputGain.gain;\n    this.pan = this.audioComponents.panner.pan;\n  }\n  \n  /* ============================================================================================= */\n  /*  GETTERS AND SETTERS\n  /* ============================================================================================= */ \n  \n  /**\n   * Get input gain value.\n   * @returns {number} - Input gain value.\n   */\n  getInputGain() {\n    return this.audioComponents.inputGain.gain.value;\n  }\n\n  /**\n   * Set input gain value.\n   * @param {number} newVal - The new input gain value.\n   */\n  setInputGain(newVal) {\n    this.audioComponents.inputGain.gain.value = newVal;\n  }\n\n  /**\n   * Get pan value.\n   * @returns {number} - Pan value.\n   */\n  getPan() {\n    return this.audioComponents.panner.pan.value;\n  }\n\n  /**\n   * Set pan value.\n   * @param {number} newVal - The new pan value.\n   */\n  setPan(newVal) {\n    this.audioComponents.panner.pan.value = newVal;\n  }\n\n  /**\n   * Get output gain value.\n   * @returns {number} - Output gain value.\n   */\n  getOutputGain() {\n    return this.audioComponents.outputGain.gain.value;\n  }\n\n  /**\n   * Set output gain value.\n   * @param {number} newVal - The new output gain value.\n   */\n  setOutputGain(newVal) {\n    this.audioComponents.outputGain.gain.value = newVal;\n  }\n}\n\nexport default ChannelStrip;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/channel-strip.js","/**\n * A collection of static utility methods for Audio Modules\n */\nlet AudioModuleUtil = {\n\n  /**\n   * Convert MIDI pitch to frequency\n   * @param {number} midiPitch - The midi pitch number.\n   * @param {number} [a4tuning=440] - Tuning of the note A4 (midi pitch 69) in Hz, 440Hz by default.\n   * @return {number} freq - Frequency for the given MIDI pitch.\n   */\n  midiToFreq: function (midiPitch, a4tuning) {\n    a4tuning = a4tuning || 440;\n    let freq = -1;\n\n    if (midiPitch !== -1) freq = Math.pow(2, (midiPitch - 69) / 12) * 440;\n    return freq;\n  },\n\n  /**\n   * Convert note name to MIDI pitch\n   * @param {string} noteName - The note name to convert\n   * @return {number} midiPitch - MIDI pitch for the given note name. Return -1 if invalid argument format.\n   */\n  noteNameToMidi: function (noteName) {\n    let noteNameFormat = /^([a-g]|[A-G])(#|b)?([0-9]|10)$/;\n\n    if(noteNameFormat.test(noteName) === false) {\n      console.log('AudioModuleUtil.noteNameToMidi: invalid note name format');\n      return -1;\n    } else {\n      let capture = noteNameFormat.exec(noteName);\n\n      let note = capture[1];\n      let accidental = capture[2];\n      let octave = capture[3];\n\n      let noteFundamentalMap = {\n        'A': 9,\n        'a': 9,\n        'B': 11,\n        'b': 11,\n        'C': 0,\n        'c': 0,\n        'D': 2,\n        'd': 2,\n        'E': 4,\n        'e': 4,\n        'F': 5,\n        'f': 5,\n        'G': 7,\n        'g': 7\n      };\n\n      let noteFundamental = noteFundamentalMap[note];\n\n      if(accidental === '#') {\n        noteFundamental++;\n      } else if (accidental === 'b') {\n        noteFundamental--;\n      }\n\n      let midiPitch = noteFundamental + (12 * octave);\n\n      return midiPitch;\n    }\n  },\n\n  /**\n   * Convert note name to frequency\n   * @param {string} noteName - The note name to convert\n   * @param {number} [a4tuning=440] - Tuning of the note A4 (midi pitch 69) in Hz, 440Hz by default.\n   * @return {number} freq - Frequency for the given MIDI pitch.\n   */\n  noteNameToFreq: function (noteName, a4tuning) {\n    a4tuning = a4tuning || 440;\n    return AudioModuleUtil.midiToFreq(AudioModuleUtil.noteNameToMidi(noteName), a4tuning);\n  }\n}\n\nexport default AudioModuleUtil;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/core/util.js","import AudioModule from \"audio_modules/core/audio-module\";\nimport verifyAudioContextFeatures from \"audio_modules/core/verify-audio-context-features\";\n\n/**\n * Class representing an Envelope.\n * An envelope controls the evolution of the amplitude of a audio signal over time.\n * The Envelope class defines an envelope with attack and release of an arbitrary number of points\n * (as opposed to, for example, an ADSR envelope, which has 1 point each for attack, decay, and release).\n * This envelope will follow the attack path and sustain until release is triggered, at which point \n * it will floow the specified release path.\n * Attack and release paths are specified as 2D arrays in the form\n * [ [t(0), a(0)], [t(1), a(1)], ... [t(i), a(i)] ],\n * where t(i) specifies the time, in seconds,\n * and a(i) specifies the amplitude of the envelope at the vertex i.\n * @class\n */\nclass Envelope extends AudioModule {\n\n  /**\n   * @constructor\n   * @param {AudioContext} audioCtx\n   * @param {object} o - Options.\n   * @param {array} [o.attackEnvelope] - 2D array specifying the attack envelope.\n   * @param {array} [o.releaseEnvelope] - 2D array specifying the release envelope.\n   */\n  constructor(audioCtx, o) {\n    super(audioCtx);  \n  }\n\n  /* ============================================================================================= */\n  /*  INITIALIZATION METHODS\n  /* ============================================================================================= */\n\n  /**\n   * Initialize audio components and their connections.\n   * @private @override\n   */\n  _initAudioComponents() {\n    const _this = this;\n\n    try {\n      verifyAudioContextFeatures(_this.audioCtx, [\"Gain\"]);\n\n      this.audioComponents = {\n        envGain: _this.audioCtx.createGain()\n      }\n\n      _this.audioComponents.envGain.gain.value = 0;\n      _this.input.connect(_this.audioComponents.envGain);\n      _this.audioComponents.envGain.connect(_this.output);\n          \n    } catch(err) {\n      console.error(err);\n    }\n  }\n\n  /**\n   * Initialize options.\n   * @private @override\n   */\n  _initOptions(o) {\n\n    this.o = {\n      attackEnvelope: [[0, 0], [0.05, 1], [1, 1]],\n      releaseEnvelope: [[0, 1], [0.5, 1], [1, 0]]\n    }\n\n    super._initOptions(o);\n  }\n\n  /* ============================================================================================= */\n  /*  GETTERS AND SETTERS\n  /* ============================================================================================= */ \n\n  /**\n   * Get the attack envelope.\n   * @returns {array} - 2D array representing the attack envelope.\n   */\n  getAttackEnvelope() {\n    return this.o.attackEnvelope;\n  }\n\n  /**\n   * Set the attack envelope.\n   * @param {array} newEnv - A 2D array representing the new envelope, where each value is of the\n   *                         form [t, a] where t is time in seconds, and a is amplitude in the range\n   *                         [0. - 1.]\n   * @returns {this} - A reference to the current envelope object for chaining.\n   */\n  setAttackEnvelope(newEnv) {\n    this.o.attackEnvelope = newEnv;\n    return this;\n  }\n\n  /**\n   * Get the release envelope.\n   * @returns {array} - 2D array representing the release envelope.\n   */\n  getReleaseEnvelope() {\n    return this.o.releaseEnvelope;\n  }\n\n  /**\n   * Set the release envelope.\n   * @param {array} newEnv - A 2D array representing the new envelope, where each value is of the\n   *                         form [t, a] where t is time in seconds, and a is amplitude in the range\n   *                         [0. - 1.] \n   * @returns {this} - A reference to the current envelope object for chaining.\n   */\n  setReleaseEnvelope(newEnv) {\n    this.o.releaseEnvelope = newEnv;\n    return this;\n  }\n\n  /* ============================================================================================= */\n  /*  PUTLIC API\n  /* ============================================================================================= */ \n\n  /**\n   * Execute the attack envelope.\n   * @returns {Promise} - Promise that returns the envelope when the envelope expires.\n   */\n  attack() {\n    let startTime = this.audioCtx.currentTime;\n    let env = this.o.attackEnvelope;\n    let a0 = 0;\n    let t0 = startTime;\n    let a1 = env[1][1];\n    let t1 = startTime + env[0][0];\n\n    // cancel scheduled values in case another change is occuring\n    this.audioComponents.envGain.gain.cancelScheduledValues(startTime);\n\n    this.audioComponents.envGain.gain.setValueAtTime(0, t0);\n    this.audioComponents.envGain.gain.linearRampToValueAtTime(a1, t1);\n\n    // ramp to each subsequent value\n    for (var i = 1; i < (env.length - 1); i++) {\n      a0 = env[i][1];\n      t0 = startTime + env[i][0];\n      a1 = env[i + 1][1];\n      t1 = startTime + env[i + 1][0];\n      \n      this.audioComponents.envGain.gain.setValueAtTime(a0, t0);\n      this.audioComponents.envGain.gain.linearRampToValueAtTime(a1, t1);\n    }\n\n    // set the final value\n    a0 = env[env.length - 1][1];\n    t0 = startTime + env[env.length - 1][0];\n    this.audioComponents.envGain.gain.setValueAtTime(a0, t0);\n\n    return new Promise((resolve, reject) => {\n      window.setTimeout(() => { resolve(env); }, env[env.length -1][0] * 1000);\n    });\n  }\n\n  /**\n   * Execute the release envelope.\n   * @returns {Promise} - Promise that returns the envelope when the envelope expires.\n   */\n  release() {\n    let startTime = this.audioCtx.currentTime;\n    let env = this.o.releaseEnvelope;\n    let a0 = 0;\n    let t0 = startTime;\n    let a1 = env[0][1];\n    let t1 = startTime + env[0][0];\n\n    // cancel scheduled values in case attack is still happening\n    this.audioComponents.envGain.gain.cancelScheduledValues(startTime);\n\n    // ramp to each subsequent value\n    for (var i = 0; i < (env.length - 1); i++) {\n      a0 = env[i][1];\n      t0 = startTime + env[i][0];\n      a1 = env[i + 1][1];\n      t1 = startTime + env[i + 1][0];\n\n      this.audioComponents.envGain.gain.setValueAtTime(a0, t0);\n      this.audioComponents.envGain.gain.linearRampToValueAtTime(a1, t1);\n    }\n\n    // if the gain value at the end is not 0, ramp it down to 0 in 1ms\n    if(env[env.length - 1][1] !== 0) {\n      a0 = 0;\n      t0 = startTime + env[env.length - 1][0] + 0.001;\n\n      this.audioComponents.envGain.gain.linearRampToValueAtTime(a0, t0);\n    }\n\n    return new Promise((resolve, reject) => {\n      window.setTimeout(() => { resolve(env); }, env[env.length - 1][0] * 1000);\n    });\n  } \n}\n\nexport default Envelope;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/envelope.js","/**\n * Useful Math Utility functions\n */\nlet MathUtil = {\n\n  /**\n   * Returns the decimal precision of a number.\n   * @param {number} val - The value whose precision to check.\n   * @returns {number} - Number of decimal places.\n   */\n  getPrecision(val) {\n    let decStr = (''+val).split('.')[1];\n    return (decStr ? decStr.length : 0);\n  },\n\n  /**\n   * Round a number to specified decimal precision.\n   * Same as Number.prototype.toFixed, but does not use toString.\n   * @param {nubmer} val - Value to be rounded.\n   * @param {precision} val - \n   * @returns  \n   */\n  round: function round(val, precision) {\n    let factor = Math.pow(10, precision);\n    return Math.round(val * factor) / factor;\n  },\n\n  /**\n   * Quantize a value (set it to the closest value matching the interval)\n   * Note: result will not necessarily reflect the same number of places of\n   * as the q input due to floating point arithmetic.\n   * @param {number} val - Value to quantize.\n   * @param {number} q - The quantization interval.\n   * @param {number} precision - The decimal precision of the result.\n   * @returns {number} qVal - Quantized val.\n   */\n  quantize: function quantize(val, q, precision) {\n    let qVal;\n\n    if (q == 0) {\n      return 0;\n    } else if (q < 0) {\n      q = Math.abs(q);\n    }\n\n    // quantize\n    qVal = ~~(val / q) * q;\n\n    qVal = Math.abs(val - qVal) > (q / 2) ? \n            qVal > 0 ? \n              qVal + q\n            : qVal - q\n          : qVal;\n\n    if (precision !== undefined) {\n      qVal = MathUtil.round(qVal, precision);\n    }\n\n    return qVal;\n  },\n\n  /**\n   * Alias for quantize(val, q)\n   * @param {number} val - Value to quantize\n   * @param {number} q - The quantization interval\n   * @param {number} precision - The decimal precision of the result.\n   * @returns {number} qVal - Quantized val\n   */\n  q: function q(val, q, precision) {\n    return MathUtil.quantize(val, q, precision);\n  }\n};\n\nexport default MathUtil;\n\n\n// WEBPACK FOOTER //\n// ./src/util/util-math.js","/**\n * Verifies that the given audio context has the requested features and attempts to shim features that are\n * missing.\n * @param {AudioContext} audioCtx - The Audio Context to check.\n * @param {array} features - Array of features to detect, listed as strings (i.e. \"Gain\", \"Oscillator\", \"Analyser\", etc.) \n */\nfunction VerifyAudioContextFeatures(audioCtx, features) {\n\n  features.forEach(feature => {\n\n    switch(feature) {\n\n      case \"Analyser\":\n        if (typeof audioCtx.createAnalyser !== \"function\") {\n          throw new Error(\"Required module AnalyserNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"AudioBuffer\":\n        if (typeof audioCtx.createBuffer !== \"function\") {\n          throw new Error(\"Required module AudioBufferNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n      \n      case \"AudioBufferSource\":\n        if (typeof audioCtx.createBufferSource !== \"function\") {\n          throw new Error(\"Required module AudioBufferSourceNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"BiquadFilter\":\n        if (typeof audioCtx.createBiquadFilter !== \"function\") {\n          throw new Error(\"Required module BiquadFilterNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"ChannelMerger\":\n        if (typeof audioCtx.createChannelMerger !== \"function\") {\n          throw new Error(\"Required module ChannelMergerNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n      \n      case \"ChannelSplitter\":\n        if (typeof audioCtx.createChannelSplitter !== \"function\") {\n          throw new Error(\"Required module ChannelSplitterNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"Convolver\":\n        if (typeof audioCtx.createConvolver !== \"function\") {\n          throw new Error(\"Required module ConvolverNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"Delay\":\n        if (typeof audioCtx.createDelay !== \"function\") {\n          throw new Error(\"Required module DelayNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"DynamicsCompressor\":\n        if (typeof audioCtx.createDynamicsCompressor !== \"function\") {\n          throw new Error(\"Required module DynamicsCompressorNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n       \n      case \"Gain\":\n        if (typeof audioCtx.createGain !== \"function\") {\n          throw new Error(\"Required module GainNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"IIRFilter\":\n        if (typeof audioCtx.createIIRFilter !== \"function\") {\n          throw new Error(\"Required module IIRFilterNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"Oscillator\":\n        if (typeof audioCtx.createOscillator !== \"function\") {\n          throw new Error(\"Required module OscillatorNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n        \n      case \"Panner\":\n        if (typeof audioCtx.createPannerr !== \"function\") {\n          throw new Error(\"Required module PannerNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"StereoPanner\":\n        if (typeof audioCtx.createStereoPanner !== \"function\") {\n          audioCtx.createStereoPanner = function() { return new StereoPannerShim(audioCtx); };\n        }\n        break;\n\n      default:\n        console.warn(\"A check for AudioContext feature \", feature, \"is being requested, but no matching check is implemented\");\n        break;\n    }\n  });\n}\n\nexport default VerifyAudioContextFeatures;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/core/verify-audio-context-features.js","/**\n * Shim the WebAudio connect and disconnect methods to allow WebAudio nodes to connect to Audio Modules.\n * @param {AudioContext} audioCtx - The Audio Context to shim.\n */\nfunction shimWebAudioConnect(audioCtx) {\n  let audioNodePrototype = Object.getPrototypeOf(Object.getPrototypeOf(audioCtx.createGain()));\n\n  // keep a reference to the original connect and disconnect methods as webAudioConnect and webAudioDisconnect\n  audioNodePrototype.webAudioConnect = audioNodePrototype.connect;\n  audioNodePrototype.webAudioDisconnect = audioNodePrototype.disconnect;\n\n  // if the destination object has an 'input' property, it is an Audio Module - connect to 'input'\n  // else it is an AudioNode - connect directly\n  audioNodePrototype.connect = function (destination, outputIndex, inputIndex) {\n    if (destination.isAudioModule === true) {\n      this.webAudioConnect(destination.input, outputIndex, inputIndex);\n    } else {\n      this.webAudioConnect(destination, outputIndex, inputIndex);\n    }\n  };\n\n  audioNodePrototype.disconnect = function (destination, outputIndex, inputIndex) {\n    if (destination.isAudioModule === true) {\n      this.webAudioDisconnect(destination.input, outputIndex, inputIndex);\n    } else {\n      this.webAudioDisconnect(destination, outputIndex, inputIndex);\n    }\n  };\n\n  // flag marking the webAudioConnect feature as shimmed\n  audioCtx.isWebAudioConnectShimmed = true;\n}\n\nexport default shimWebAudioConnect;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/core/shim-web-audio-connect.js","/**\n * Mixin specifying the xml namespace for SVG\n * @mixin\n */\nconst SVG_NS = { SVG_NS: \"http://www.w3.org/2000/svg\" };\n\nexport default SVG_NS;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget-mixin-svgns.js","import Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\n\n/**\n * Mixin for methods related to state management\n * @mixin\n */\nlet WidgetStateMixin = {\n\n  /**\n   * Get the current state.\n   *\n   * @public\n   * @returns {object} - Copy of this.state\n   */\n  getState: function getState() {\n    return Object.assign({}, this.state);\n  },\n\n  /**\n   * Set the current state and redraw.\n   *\n   * @description If no new state argument is provided, will reassign old state, taking into account the stateConstraints.\n   * As opposed to setState(), setInternalState() does not trigger observer notification.\n   * Will use Widget.stateConstraints to constrain each state value to each constraints min, max, or enum\n   *\n   * @protected\n   * @param {object=} newState - The new state.\n   * @return {boolean} isChanged - Returns a boolean indicating whether the state has been changed\n   */\n  setInternalState: function setInternalState(newState) {\n    const _this = this;\n    let isChanged = false;\n\n    newState = newState || this.getState();\n\n    Object.keys(newState).forEach(key => {\n      if (_this.state.hasOwnProperty(key) && _this.state[key] !== newState[key]) {\n        _this.state[key] = newState[key];\n        isChanged = true;\n      }\n    });\n\n    _this.stateConstraints.constrain(_this.state);\n    this._update();\n\n    return isChanged;\n  },\n\n  /**\n   * Set the current state and redraw.\n   *\n   * @description As opposed to setInternalState(), setState() will call the observer callback functions,\n   * so may lead to an infinate loop if an observer calls this method.\n   *\n   * @protected\n   * @param {object=} newState - The new state.\n   * @return {boolean} isChanged - Returns a boolean indicating whether the state has been changed\n   */\n  setState: function setState(newState) {\n    const _this = this;\n    let isChanged = false;\n\n    isChanged = this.setInternalState(newState);\n\n    this._notifyObservers();\n\n    return isChanged;\n  }\n};\n\nexport default WidgetStateMixin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget-mixin-state.js","/**\n * Mixin for methods related to options\n * @mixin\n */\nlet WidgetOptionsMixin = {\n\n  /**\n   * Initializes the options.\n   * @private\n   * @param {object} o - Options.\n   */\n  _initOptions: function _initOptions(o) {\n    const _this = this;\n    o = o || {};\n\n    Object.keys(o).forEach(key => {\n      if (_this.o.hasOwnProperty(key) && _this.o[key] !== o[key]) {\n        _this.o[key] = o[key];\n      }\n    });\n  },\n\n  /**\n   * Get the options object\n   * @public\n   * @return {object} this.o - Options\n   */\n  getOptions: function getOptions() {\n    return Object.assign({}, this.o);\n  },\n\n  /**\n   * Set the options\n   * Uses a diffing function, so only specified keys that have new values will be changed\n   * @public\n   * @param {object} o - options\n   * @return {boolean} isChanged - Returns a boolean indicating whether any option has been changed\n   */\n  setOptions: function setOptions(o) {\n    const _this = this;\n    o = o || {};\n    let isChanged = false;\n\n    Object.keys(o).forEach(key => {\n      if (_this.o.hasOwnProperty(key) && _this.o[key] !== o[key]) {\n        _this.o[key] = o[key];\n        isChanged = true;\n      }\n    });\n\n    if (isChanged) {\n      this.setState();\n    }\n\n    return isChanged;\n  }\n};\n\nexport default WidgetOptionsMixin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget-mixin-options.js","/**\n * Mixin for methods related to observer callback support\n * @mixin\n */\nlet WidgetObserverMixin = {\n\n  /**\n   * Register a new observer function that will recieve the state value every time the state is updated.\n   * @public\n   * @param {function} newObserver - The new observer function to be notified every time the state changes.\n   * @return {boolean} isChanged - Indicates whether an observer was added.\n   */\n  addObserver: function addObserver(newObserver) {\n    let isChanged = false;\n\n    if (!(this.observers.find(observer => observer === newObserver))) {\n      this.observers.push(newObserver);\n      isChanged = true;\n    }\n\n    return isChanged;\n  },\n\n  /**\n   * Remove an observer function from being notified when the state changes.\n   * @public\n   * @param {function} targetObserver - The observer function to be removed.\n   * @return {boolean} isChanged - Indicates whether an observer has been removed\n   */\n  removeObserver: function removeObserver(targetObserver) {\n    const _this = this;\n    let isChanged = false;\n\n    this.observers.forEach((observer, idx) => {\n      if (observer === targetObserver) {\n        _this.observers.splice(idx, 1);\n        isChanged = true;\n      }\n    });\n\n    return isChanged;\n  },\n\n  /**\n   * Alias for addObserver. Registers a listener (observer) function.\n   * @param {function} newListener - The new listener (observer) function to be notified every time the state changes.\n   * @return {boolean} isChanged - Indicates whether an observer was added.\n   */\n  addListener: function addListener(newListener) {\n    this.addObserver(newListener);\n  },\n\n  /**\n   * Alias for removeObserver. Removes a listener (observer) function.\n   * @param {function} targetListener - The listener (observer) function to be removed.\n   * @return {boolean} isChanged - Indicates whether an observer has been removed\n   */\n  removeListener: function removeListener(targetListener) {\n    this.removeObserver(targetListener);\n  },\n\n  /**\n   * Notify all observers of new state\n   * @protected\n   */\n  _notifyObservers() {\n    const _this = this;\n    this.observers.forEach(observer => observer(_this.getVal()));\n  }\n};\n\nexport default WidgetObserverMixin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget-mixin-observer.js","import AudioPatch from './audio-patch';\nimport AudioModuleUtil from 'audio_modules/core/util';\nimport shimWebAudioConnect from 'audio_modules/core/shim-web-audio-connect';\nimport AdditiveSynth from 'audio_modules/AdditiveSynth';\nimport ChannelStrip from 'audio_modules/channel-strip';\nimport Envelope from 'audio_modules/envelope';\nimport StereoFeedbackDelay from 'audio_modules/StereoFeedbackDelay';\n\n/**\n * Class representing an Audio Module Manager.\n * Audio Module Managers facilitate creating and managing Audio Patches.\n * @class\n */\nclass AudioModuleManager {\n  \n  /**\n   * @constructor\n   * @param {AudioContext} [audioCtx] - The Audio Context to use. If this argument is not provided,\n   *                                    a new Audio Context will be created and associated with this\n   *                                    Audio Module Manager.\n   */\n  constructor(audioCtx) {\n    this.AUDIO_CTX = (typeof audioCtx === \"undefined\") ? new AudioContext() : audioCtx;\n\n    // Shim the WebAudio connect and disconnect methods so that we can connect and\n    // disconnect AudioModules the same way as WebAudio AudioNodes and use AudioNodes\n    // interchangably with AudioModules\n    shimWebAudioConnect(this.AUDIO_CTX);\n\n    this.destination = this.AUDIO_CTX.destination;\n  }\n\n  /**\n   * Return the Audio Context associated with this Module Manager.\n   * @returns {AudioContext} - The Audio Context associated with this Module Manager.\n   */\n  getContext() {\n    return this.AUDIO_CTX;\n  }  \n  \n  /**\n  * Return the Audio Context destination associated with with this Module Manager.\n  * @returns {AudioNode} - The audio destination node associated with this Module Manager.\n  */\n getDestination() {\n   return this.AUDIO_CTX.destination;\n }\n\n  /**\n   * An audio patch is a collection of connected audio modules that form a meaningful unit\n   * @param {object} initObj - An object specifying the initialization parameters,\n   *                            containing two properties: modules, and connectionPaths\n   * @param {object} initObj.modules - An object representing the named audio modules used in this patch\n   * @param {array} initObj.connectionPaths - An 2D array of strings, where each string represents the name of\n   *                              an Audio Module (matching the way it is named in the 'modules' object),\n   *                              and the sequence of these names represents an audio path.\n   *                              For example, the following is one possibility:\n   *                                [[\"synth1\", \"delay\", \"reverb\", \"output\"],\n   *                                [\"synth2\", \"reverb\"]]\n   *                              This connection specifies two connection paths:\n   *                                synth1 -> delay -> reverb -> output\n   *                              And the second, where synth2 is connected to the same reverb used\n   *                              in the first paths\n   *                                synth2 -> reverb -> output\n   *                              Note that since the reverb is already connected to the output by the\n   *                              first path, it does not need to be redundantly connected in the second path\n   * @return {object} moduleMapObj - an object used as a map where keys are strings used to name each module,\n   *                                 and values are the module objects themselves\n   */\n  createAudioPatch(initObj) {\n    const _this = this;\n\n    initObj = initObj || {};\n\n    // moduleMap will store the modules created keyed by the names given to them\n    // keys are arbitrary strings used as names for each module\n    // values are the module objects themselves\n    let moduleMapObj = {};\n\n    try {\n      // try to create the modules requested in the initObj and store them in moduleMapObj\n      if (typeof initObj.modules !== \"object\") throw (\"Exception in initAudioPatch: no audio modules provided in initiation object\");\n\n      Object.keys(initObj.modules).forEach(audioModuleName => {\n        let audioModuleSpec = initObj.modules[audioModuleName];\n\n        // if the audio module type is specified as a string, create the corresponding modules\n        if (typeof audioModuleSpec === \"string\") {\n          // placeholder to use when creating the new module\n          let newAudioModule = null;\n\n          // use name in lowercase with whitespace removed\n          switch (audioModuleSpec.toLowerCase().replace(/\\W+/g, \"\")) {\n            case \"channelstrip\":\n              newAudioModule = _this.createChannelStrip();\n              break;\n            case \"destination\":\n              newAudioModule = _this.createDestination()\n              break;\n            case \"envelope\":\n              newAudioModule = _this.createBiquadFilter();\n              break;\n            case \"additivesynth\":\n              newAudioModule = _this.createAdditiveSynth();\n              break;\n            case \"stereofeedbackdelay\":\n            case \"delay\":\n              newAudioModule = _this.createStereoFeedbackDelay();\n              break;\n            case \"biquadfilter\":\n            case \"filter\":\n              newAudioModule = _this.createBiquadFilter();\n              break;\n            default:\n              throw (\"Exception in initAudioPatch: no such module \" + audioModuleSpec);\n              break;\n          }\n\n          moduleMapObj[audioModuleName] = newAudioModule;\n        }\n      });\n\n      // try to connect the modules\n      if (typeof initObj.connections === \"object\" && Array.isArray(initObj.connections)) {\n        initObj.connections.forEach(connectionPath => {\n          for (let i = 0; i < connectionPath.length - 1; i++) {\n            let currentModule = moduleMapObj[connectionPath[i]];\n            let nextModule = moduleMapObj[connectionPath[i + 1]];\n            currentModule.connect(nextModule);\n          }\n        });\n      }\n    }\n    catch (e) {\n      console.log(e);\n      moduleMapObj = null;\n    }\n\n    return new AudioPatch(moduleMapObj, _this.AUDIO_CTX, _this);\n  }\n\n  /**\n   * Create an Additive Synth Audio Module\n   */\n  createAdditiveSynth(o) {\n    o = o || {};\n    return new AdditiveSynth(this.AUDIO_CTX, o);\n  }\n\n  /**\n   * Create a Biquad Filter Audio Module\n   */\n  createBiquadFilter() {\n    return this.AUDIO_CTX.createBiquadFilter();\n  }\n\n  /**\n   * Create an Oscillator\n   */\n  createOscillator() {\n    return this.AUDIO_CTX.createOscillator();\n  }\n\n  /**\n   * Create an Oscillator\n   */\n  createGain() {\n    return this.AUDIO_CTX.createGain();\n  }\n\n  /**\n   * Create a Channel Strip Audio Module\n   */\n  createChannelStrip(o) {\n    o = o || {};\n    return new ChannelStrip(this.AUDIO_CTX, o);\n  }\n\n  /**\n   * Create a destination node\n   */\n  createDestination() {\n    return this.AUDIO_CTX.destination;\n  }\n\n  /**\n   * Create an Envelope Audio Module\n   */\n  createEnvelope(o) {\n    o = o || {};\n    return new Envelope(this.AUDIO_CTX, o);\n  }\n\n  /**\n   * Create a Stereo Feedback Delay Audio Module\n   */\n  createStereoFeedbackDelay(o) {\n    o = o || {};\n    return new StereoFeedbackDelay(this.AUDIO_CTX, o);\n  }\n}\n\nexport default AudioModuleManager;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/core/audio-module-manager.js","/**\n * Class representing an Audio Patch created by an Audio Module Manager.\n * @class \n */\nclass AudioPatch {\n\n  /**\n   * @constructor\n   * @param {Object} moduleMap\n   * @param {AudioContext} audioCtx\n   * @param {AudioModuleManager} audioModuleManager\n   */\n  constructor(moduleMap, audioCtx, audioModuleManager) {\n    this.MODULE_MAP = moduleMap;\n    this.AUDIO_CTX = audioCtx;\n    this.AUDIO_MODULE_MANAGER = audioModuleManager;\n    \n    // a more consise alias\n    this.modules = this.MODULE_MAP;\n  }\n\n  /**\n   * Returns the Audio Context\n   * @returns {AudioContext}\n   */\n  getAudioContext() {\n    return this.AUDIO_CTX;\n  }\n\n  /**\n   * Alias for {getAudioContext}.\n   * @returns {AudioContext}\n   */\n  getAudioCtx() {\n    return this.getAudioContext();\n  }\n\n  /**\n   * Returns the module map.\n   * @returns {object} - Object representing the module map.\n   */\n  getModuleMap() {\n    return this.MODULE_MAP;\n  }\n\n  /**\n   * Alias for {getModuleMap}. Returns the module map.\n   * @returns {object} - Object representing the module map.\n   */\n  modules() {\n    return this.MODULE_MAP;\n  }\n\n  /**\n   * Returns the Audio Module Manager associated with this patch.\n   * @returns {AudioModuleManager} - The Audio Module Manager associated with this patch.\n   */\n  getAudioModuleManager() {\n    return this.AUDIO_MODULE_MANAGER;\n  }\n}\n\nexport default AudioPatch;\n\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/core/audio-patch.js","import AdditiveSynthVoice from './AdditiveSynthVoice';\nimport ChannelStrip from './channel-strip';\nimport AudioModuleUtil from './core/util';\n\nclass AdditiveSynth {\n  constructor (audioCtx, o) {\n      o = o || {};\n\n      this._audioCtx = audioCtx;\n\n      var numVoices = o.numVoices || 16;\n      this._numOvertones = o.numOvertones || 20;\n\n      this._voices = [];\n      this._availableVoices = [];\n      this._busyVoices = []; // { voiceNum: {number}, pitch: {number} }\n      this._channelStrip = new ChannelStrip(this._audioCtx);\n\n      for (var i = 0; i < numVoices; i++) {\n        this._voices.push(new AdditiveSynthVoice(this._audioCtx, { numOvertones: this._numOvertones }));\n        this._voices[i].connect(this._channelStrip.input);\n        this._availableVoices.push(i);\n      }\n\n      this.output = this._channelStrip.output;\n      this._audioModuleOutput = this.output;\n  }\n\n  /* =================== */\n  /* --- Audio setup --- */\n  /* =================== */\n\n  /**\n   * Connect to another AudioNode or AudioModule\n   */\n  connect (destination) {\n    // if destination has an input property, connect to it (destination is an AudioModule)\n    if (typeof destination.input === \"object\") {\n      this.output.connect(destination.input);\n    }\n    // else destination is an AudioNode and can be connected to directly\n    else {\n      this.output.connect(destination);\n    }\n  }\n\n  /**\n   * Disconnect from an AudioNode or AudioModule\n   */\n  disconnect (destination) {\n    // if destination has an input property, disconnect from it (destination is an AudioModule)\n    if (typeof destination.input === \"object\") {\n      this.output.disconnect(destination.input);\n    // else destination is an AudioNode and can be disconnected from directly\n    } else {\n      this.output.disconnect(destination);\n    }\n  }\n\n  /* =========================================================================================== */\n  /* GETTERS AND SETTERS                                                                         */\n  /* =========================================================================================== */\n\n  /** Number of voices */\n  get numVoices () {\n    return this._voices.length;\n  }\n  set numVoices (newNumVoices) {\n    const _this = this;\n\n    // if the new number of voices is more than previous number, we add voices\n    if (newNumVoices > this.numVoices) {\n      for (var i = this.numVoices; i < newNumVoices; i++) {\n        this._voices.push(new AdditiveSynthVoice(this._audioCtx, { numOvertones: this._numOvertones }));\n        this._voices[i].connect(this._channelStrip.input);\n        this._availableVoices.push(i);\n      }\n\n    // if the new number is less than previous, remove voices\n    } else if (newNumVoices < this.numVoices) {\n      let numVoicesToDelete = this.numVoices - newNumVoices;\n      let numAvailableVoices = this._availableVoices.length;\n\n      // if the number of voices to delete is less then or equal to the number of available (inactive) voices, delete these voices\n      if (numVoicesToDelete <= numAvailableVoices) {\n        deleteAvailableVoices(numVoicesToDelete);\n      }\n\n      // else delete all available (inactive) voices and also required number of busy voices\n      else {\n        let numBusyVoicesToDelete = numVoicesToDelete - numAvailableVoices;\n\n        deleteAvailableVoices(numAvailableVoices);\n        deleteBusyVoices(numBusyVoicesToDelete);\n      }\n\n      function deleteAvailableVoices (numVoicesToDelete) {\n        for(let i = 0; i < numVoicesToDelete; i++) {\n          let voiceToDelete = _this._availableVoices[i];\n\n          _this._voices.splice(voiceToDelete, 1);\n          _this._availableVoices.splice(i, 1);\n\n          // remap the available and busy voices because we modified the voices stack\n          _this._availableVoices = _this._availableVoices.map(voice => {\n            return (voice > voiceToDelete) ? voice - 1 : voice;\n          });\n          _this._busyVoices = _this._busyVoices.map(voice => {\n            return {\n              voiceNum: (voice.voiceNum > voiceToDelete) ? voice.voiceNum - 1 : voice.voiceNum,\n              pitch: voice.pitch\n            };\n          });\n        }\n      }\n\n      function deleteBusyVoices (numBusyVoicesToDelete) {\n        // delete the required number of busy voices\n        for (let i = 0; i < numBusyVoicesToDelete; i++) {\n          let voiceToDelete = _this._busyVoices[i].voiceNum;\n\n          _this.releaseVoice(voiceToDelete);\n          _this._voices.splice(voiceToDelete, 1);\n          _this._busyVoices.splice(i, 1);\n\n          // remap the busy voices pointer stack because we modified the voices stack\n          _this._busyVoices = _this._busyVoices.map(voice => {\n            return {\n              voiceNum: (voice.voiceNum > voiceToDelete) ? voice.voiceNum - 1 : voice.voiceNum,\n              pitch: voice.pitch\n            };\n          });\n        }\n      }\n    }\n    console.log('newNumVoices: ' + this.numVoices);\n    return this;\n  }\n  setNumVoices (newNumVoices) {\n    this.numVoices = newNumVoices;\n  }\n\n  /** Number of overtones */\n  get numOvertones () {\n    return this._numOvertones;\n  }\n  set numOvertones (newNumOvertones) {\n    this._voices.forEach(voice => {\n      voice.numOvertones = newNumOvertones;\n    });\n    this._numOvertones = newNumOvertones;\n    return this;\n  }\n  setNumOvertones (newNumOvertones) {\n    this.numOvertones = newNumOvertones;\n  }\n\n  /** Gain */\n  get gain () {\n    return this._channelStrip.outputGain;\n  }\n  set gain (newGain) {\n    this._channelStrip.outputGain = newGain;\n    return this;\n  }\n  setGain (newGain) {\n    this.gain = newGain;\n  }\n\n  /** Pan */\n  get pan () {\n    return this._channelStrip.pan;\n  }\n  set pan (newPan) {\n    this._channelStrip.pan = newPan;\n    return this;\n  }\n  setPan (newPan) {\n    this.pan = newPan;\n  }\n\n  /** Get overtone amplitude */\n  getOvertoneAmplitude (voiceNum, otNum) {\n    this._voices[voiceNum].getOvertoneAmplitude(otNum);\n    return this;\n  }\n\n  /** Overtone amplitude */\n  setOvertoneAmplitude (voiceNum, otNum, newAmp) {\n    this._voices[voiceNum].setOvertoneAmplitude(otNum, newAmp);\n    return this;\n  }\n\n  /* ========================= */\n  /* --- Envelope controls --- */\n  /* ========================= */\n\n  /** Attack envelope */\n  set attackEnvelope (newEnv) {\n    this._voices.forEach(voice => {\n      voice.attackEnvelope = newEnv;\n    });\n  }\n\n  /** Release envelope */\n  set releaseEnvelope (newEnv) {\n    this._voices.forEach(voice => {\n      voice.releaseEnvelope = newEnv;\n    });\n  }\n\n  /** Set the attack envelope for an overtone\n   *  @param {number} otNum - Number of overtone for which to set envelope\n   *  @param {array} newEnv - 2D array representing the new envelope\n   */\n  setOvertoneAttackEnvelope (otNum, newEnv) {\n    this._voices.forEach(voice => {\n      voice.setOvertoneAttackEnvelope(otNum, newEnv);\n    });\n    return this;\n  }\n\n  /** Set the release envelope for an overtone\n   *  @param {number} otNum - Number of overtone for which to set envelope\n   *  @param {array} newEnv - 2D array representing the new envelope\n   */\n  setOvertoneReleaseEnvelope (otNum, newEnv) {\n    this._voices.forEach(voice => {\n      voice.setOvertoneReleaseEnvelope(otNum, newEnv);\n    });\n    return this;\n  }\n\n  /**\n   * Play a note using the current attack envelope\n   * @param {(number|string)} note - MIDI pitch value or note name (i.e. A0 or F#8)\n   */\n  playNote (note) {\n    var noteNameFormat = /^([a-g]|[A-G])(#|b)?([0-9]|10)$/;\n    var selectedVoice = -1;\n    var freq = -1;\n\n    // check for correct note format and convert to freq\n    if (typeof note === 'number'\n        && note >= 0 && note <= 127) {\n      freq = AudioModuleUtil.midiToFreq(note);\n    } else if (typeof note === 'string'\n               && noteNameFormat.test(note) === true) {\n      note = AudioModuleUtil.noteNameToMidi(note); // convert to MIDI so we can keep track of active note in _busyVoices\n      freq = AudioModuleUtil.midiToFreq(note);\n    }\n\n    // if the correct format for note was received\n    if (freq !== -1) {\n      //pick a voice\n      if (this._availableVoices.length > 0) {\n        selectedVoice = this._availableVoices.shift();\n      } else {\n        selectedVoice = this._busyVoices.shift().voiceNum;\n        this.releaseVoice(selectedVoice);\n      }\n      this._busyVoices.push({ voiceNum: selectedVoice, note: note });\n\n      this.attackVoice(selectedVoice, freq);\n    }\n  }\n\n  /**\n   * Release a currently playing note\n   * @param {(number|string)} note - MIDI pitch value or note name (i.e. A0 or F#8)\n   */\n  releaseNote (note) {\n    var noteNameFormat = /^([a-g]|[A-G])(#|b)?([0-9]|10)$/;\n    var selectedVoice = -1;\n\n    // check for correct note format and convert to freq\n    if (typeof note === 'number'\n        && note >= 0 && note <= 127) {\n    } else if (typeof note === 'string'\n               && noteNameFormat.test(note) === true) {\n      note = AudioModuleUtil.noteNameToMidi(note);\n    } else {\n      note = -1;\n    }\n\n    if (note !== -1) {\n      var selectedBusyNodeIndex = this._busyVoices.findIndex((busyVoice) => {\n        return busyVoice.note === note;\n      });\n\n      if (selectedBusyNodeIndex !== -1) {\n        selectedVoice = this._busyVoices[selectedBusyNodeIndex].voiceNum;\n\n        this._availableVoices.push(selectedVoice);\n        this._busyVoices.splice(selectedBusyNodeIndex, 1);\n      }\n    }\n\n    if (selectedVoice !== -1) {\n      this.releaseVoice(selectedVoice);\n    } else return this;\n  }\n\n  /**\n   * Execute the attack for a given voice with a given frequency\n   **/\n  attackVoice (voiceNum, freq) {\n    this._voices[voiceNum].setFrequency(freq);\n    this._voices[voiceNum].attack();\n  }\n\n  /**\n   * Execute the release for a given voice\n   **/\n  releaseVoice (voiceNum) {\n    this._voices[voiceNum].release();\n  }\n}\n\nexport default AdditiveSynth\n\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/AdditiveSynth.js","import ChannelStrip from './channel-strip';\nimport Envelope from './envelope';\nimport Overtone from './Overtone';\n\nclass AdditiveSynthVoice {\n  constructor (audioCtx, o) {\n    o = o || {};\n\n    this._audioCtx = audioCtx;\n\n    this._channelStrip = new ChannelStrip(this._audioCtx);\n    this._envelope = new Envelope(this._audioCtx);\n\n    var numOvertones = o.numOvertones || o.numberOfOvertones || 20;\n    this._overtones = [];\n    for (var i = 0; i < numOvertones; i++) {\n      this._overtones.push(new Overtone(this._audioCtx));\n      this._overtones[i].connect(this._envelope.input);\n      this._envelope.connect(this._channelStrip.input);\n      this._overtones[i].gain = 1 / numOvertones;\n    }\n\n    this.output = this._channelStrip.output;\n    this._audioModuleOutput = this.output;\n\n    // this.frequency = o.frequency || o.freq || 440;\n    // this.pan = o.pan || 0; // -1: hard left, 1: hard right\n    // this.gain = o.gain || 1;\n  }\n\n  /* =================== */\n  /* --- Audio setup --- */\n  /* =================== */\n\n  /**\n   * Connect to another AudioNode or AudioModule\n   */\n  connect (destination) {\n    // if destination has an input property, connect to it (destination is an AudioModule)\n    if (typeof destination.input === \"object\") {\n      this.output.connect(destination.input);\n    }\n    // else destination is an AudioNode and can be connected to directly\n    else {\n      this.output.connect(destination);\n    }\n  }\n\n  /**\n   * Disconnect from an AudioNode or AudioModule\n   */\n  disconnect (destination) {\n    // if destination has an input property, disconnect from it (destination is an AudioModule)\n    if (typeof destination.input === \"object\") {\n      this.output.disconnect(destination.input);\n    // else destination is an AudioNode and can be disconnected from directly\n    } else {\n      this.output.disconnect(destination);\n    }\n  }\n\n  /* =========================== */\n  /* --- Getters and setters --- */\n  /* =========================== */\n\n  /** Options */\n  get options () {\n    return {\n      numOvertones: this.numOvertones,\n      frequency: this.frequency,\n      gain: this.gain,\n      pan: this.pan\n    }\n  }\n  set options (o) {\n    o = o || {};\n\n    if (o.numOvertones) this.numOvertones = o.numOvertones;\n    if (o.frequency) this.frequency = o.frequency;\n    if (o.gain) this.gain = o.gain;\n    if (o.pan) this.pan = o.pan;\n\n    return this;\n  }\n  setOptions (o) {\n    o = o || {};\n    this.options = o;\n  }\n\n  /** Number of overtones (including the fundamental) */\n  get numOvertones () {\n    return this._overtones.length;\n  }\n  set numOvertones (newNumOvertones) {\n    if (newNumOvertones > this.numOvertones) {\n      var fundFreq = this.frequency;\n      for (var i = this.numOvertones; i < newNumOvertones && (i + 1) * fundFreq < this._audioCtx.sampleRate / 2; i++) {\n        this._overtones.push(new Overtone(this._audioCtx));\n        this._overtones[i].frequency = (i + 1) * fundFreq;\n        this._overtones[i].gain = 1 / newNumOvertones;\n      }\n    } else if (newNumOvertones < this.numOvertones) {\n      for (var i = this.numOvertones; i > this.newNumOvertones; i--) {\n        this._overtones.pop();\n        this._overtones[i].gain = 1 / newNumOvertones;\n      }\n    }\n    return this;\n  }\n  setNumOvertones (newNumOvertones) {\n    this.numOvertones = newNumOvertones;\n  }\n\n  /** Fundamental frequency */\n  get frequency () {\n    return this._overtones[0].frequency;\n  }\n  set frequency (newFreq) {\n    var freqCeil = this._audioCtx.sampleRate / 2;\n    var numOvertones = this.numOvertones;\n\n    for (var i = this.numOvertones - 1; i >= 0; i--) {\n      if ( (i + 1) * newFreq < freqCeil ) {\n        this._overtones[i].frequency = (i + 1) * newFreq;\n        this._overtones[i].gain = 1 / numOvertones;\n      } else {\n        this._overtones[i].gain = 0;\n      }\n    }\n    return this;\n  }\n  setFrequency (newFreq) {\n    this.frequency = newFreq;\n  }\n\n  /** Gain */\n  get gain () {\n    return this._channelStrip.outputGain;\n  }\n  set gain (newGain) {\n    this._channelStrip.outputGain = newGain;\n    return this;\n  }\n  setGain (newGain) {\n    this.gain = newGain;\n  }\n\n  /** Pan */\n  get pan () {\n    return this._channelStrip.pan;\n  }\n  set pan (newPan) {\n    this._channelStrip.pan = newPan;\n    return this;\n  }\n  setPan (newPan) {\n    this.pan = newPan;\n  }\n\n  /** Get overtone amplitude\n   * @param {number} otNum - Overtone number (0 for the fundamental).\n   */\n  getOvertoneAmplitude (otNum) {\n    return this._overtones[otNum].amplitude;\n  }\n  /** Set overtone amplitude\n   * @param {number} otNum - Overtone number (0 for the fundamental).\n   * @param {number} newAmp - New amplitude (useful range: 0.0 - 1.0).\n   */\n  setOvertoneAmplitude (otNum, newAmp) {\n    const _this = this;\n\n    try {\n      if (this._overtones[otNum] !== undefined) {\n        this._overtones[otNum].amplitude = newAmp;\n      } else {\n        throw (\"Illegal overtone number\");\n      }\n    } catch (e) {\n      console.log(e);\n    }\n\n    return this;\n  }\n\n  /** Set overtone amplitudes by a formula function\n   * @param {function} func - The function specifying the amplitude of each overtone number n.\n   */\n  setOvertoneAmplitudesByFormula (func) {\n    for (var n = this.numOvertones - 1; n >= 0; n--) {\n      this.setOvertoneAmplitude(n, func(n + 1));\n    }\n    return this;\n  }\n\n  /** Attack envelope */\n  get attackEnvelope () {\n    return this._envelope.attackEnvelope;\n  }\n  set attackEnvelope (newEnv) {\n    this._envelope.attackEnvelope = newEnv;\n    return this;\n  }\n  setAttackEnvelope (newEnv) {\n    this.attackEnvelope = newEnv;\n  }\n\n  /** Release envelope */\n  get releaseEnvelope () {\n    return this._envelope.releaseEnvelope;\n  }\n  set releaseEnvelope (newEnv) {\n    this._envelope.releaseEnvelope = newEnv;\n    return this;\n  }\n  setReleaseEnvelope (newEnv) {\n    this.releaseEnvelope = newEnv;\n  }\n\n  /** Set the attack envelope for an overtone\n   *  @param {number} otNum - Number of overtone for which to set envelope\n   *  @param {array} newEnv - 2D array representing the new envelope\n   */\n  setOvertoneAttackEnvelope (otNum, newEnv) {\n    this._overtones[otNum].attackEnvelope = newEnv;\n    return this;\n  }\n\n  /** Set the release envelope for an overtone\n   *  @param {number} otNum - Number of overtone for which to set envelope\n   *  @param {array} newEnv - 2D array representing the new envelope\n   */\n  setOvertoneReleaseEnvelope (otNum, newEnv) {\n    this._overtones[otNum].releaseEnvelope = newEnv;\n    return this;\n  }\n\n  /* ========================= */\n  /* --- Envelope controls --- */\n  /* ========================= */\n\n  /**\n   * Execute the attack envelope.\n   * Individual envelopes are executed for each overtone, and the envelope for this voice is executed.\n   */\n  attack (o) {\n    if (o) this.options = o;\n\n    for (var i = this.numOvertones - 1; i >= 0; i--) {\n      this._overtones[i].attack();\n    }\n    this._envelope.attack();\n  }\n\n  /**\n   * Execute the release envelope\n   * Individual envelopes are executed for each overtone, and the envelope for this voice is executed.\n   */\n  release () {\n    for (var i = this.numOvertones - 1; i >= 0; i--) {\n      this._overtones[i].release();\n    }\n    this._envelope.release();\n  }\n}\n\nexport default AdditiveSynthVoice\n\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/AdditiveSynthVoice.js","/**\n * Mixin for methods related to options\n * @mixin\n */\nlet AudioModuleOptionsMixin = {\n  \n    /**\n     * Initializes the options.\n     * @private\n     * @param {object} o - Options.\n     */\n    _initOptions: function _initOptions(o) {\n      const _this = this;\n      o = o || {};\n  \n      Object.keys(o).forEach(key => {\n        if (_this.o.hasOwnProperty(key) && _this.o[key] !== o[key]) {\n          _this.o[key] = o[key];\n        }\n      });\n    },\n  \n    /**\n     * Get the options object\n     * @public\n     * @return {object} this.o - Options\n     */\n    getOptions: function getOptions() {\n      return Object.assign({}, this.o);\n    },\n  \n    /**\n     * Set the options\n     * Uses a diffing function, so only specified keys that have new values will be changed\n     * @public\n     * @param {object} o - options\n     * @return {boolean} isChanged - Returns a boolean indicating whether any option has been changed\n     */\n    setOptions: function setOptions(o) {\n      const _this = this;\n      o = o || {};\n      let isChanged = false;\n  \n      Object.keys(o).forEach(key => {\n        if (_this.o.hasOwnProperty(key) && _this.o[key] !== o[key]) {\n          _this.o[key] = o[key];\n          isChanged = true;\n        }\n      });\n  \n      if (isChanged) {\n        this.setState();\n      }\n  \n      return isChanged;\n    }\n  };\n  \n  export default AudioModuleOptionsMixin;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/core/audio-module-options-mixin.js","import AudioModule from \"./core/audio-module\";\nimport ChannelStrip from './channel-strip';\nimport Envelope from './envelope';\n\n/**\n * \n */\nclass Oscillator extends AudioModule {\n  constructor (audioCtx, o) {\n    super(audioCtx)\n\n    o = o || {};\n\n    this._audioCtx = audioCtx;\n\n    this._oscillator = this._audioCtx.createOscillator();\n    this._envelope = new Envelope(this._audioCtx);\n    this._channelStrip = new ChannelStrip(this._audioCtx);\n\n    this._oscillator.connect(this._envelope.input);\n    this._envelope.connect(this._channelStrip.input);\n\n    this._oscillator.start();\n\n    this.output = this._channelStrip.output;\n    this._audioModuleOutput = this.output;\n\n    // this.frequency = o.frequency || 440;\n    // this.pan = o.pan || 1;\n    // this.amplitude = o.amplitude || 1;\n  }\n\n  /* =========================== */\n  /* --- Getters and setters --- */\n  /* =========================== */\n\n  /** Oscillator frequency */\n  get frequency () {\n    return this._oscillator.frequency;\n  }\n  set frequency (newFreq) {\n    var curTime = this._audioCtx.currentTime;\n    this._oscillator.frequency.value = newFreq;\n    return this;\n  }\n\n  /** Pan */\n  get pan () {\n    return this._channelStrip.pan;\n  }\n  set pan (newPan) {\n    this._channelStrip.pan = newPan;\n    return this;\n  }\n\n  /** Overtone amplitude */\n  get amplitude () {\n    return this._channelStrip.inputGain;\n  }\n  set amplitude (newAmp) {\n    this._channelStrip.inputGain = newAmp;\n    return this;\n  }\n\n  /** Overtone output gain (used for balancing volume when several overtones are used in a voice) */\n  get gain () {\n    return this._channelStrip.outputGain;\n  }\n  set gain (newGain) {\n    this._channelStrip.outputGain = newGain;\n    return this;\n  }\n\n  /** Attack envelope */\n  get attackEnvelope () {\n    return this._envelope.attackEnvelope;\n  }\n  set attackEnvelope (newEnv) {\n    this._envelope.attackEnvelope = newEnv;\n    return this;\n  }\n\n  /** Release envelope */\n  get releaseEnvelope () {\n    return this._envelope.releaseEnvelope;\n  }\n  set releaseEnvelope (newEnv) {\n    this._envelope.releaseEnvelope = newEnv;\n    return this;\n  }\n\n  /* =================== */\n  /* --- Audio setup --- */\n  /* =================== */\n\n  /**\n   * Connect to another AudioNode or AudioModule\n   */\n  connect (destination) {\n    // if destination has an input property, connect to it (destination is an AudioModule)\n    if (typeof destination.input === \"object\") {\n      this.output.connect(destination.input);\n    }\n    // else destination is an AudioNode and can be connected to directly\n    else {\n      this.output.connect(destination);\n    }\n  }\n\n  /**\n   * Disconnect from an AudioNode or AudioModule\n   */\n  disconnect (destination) {\n    // if destination has an input property, disconnect from it (destination is an AudioModule)\n    if (typeof destination.input === \"object\") {\n      this.output.disconnect(destination.input);\n    // else destination is an AudioNode and can be disconnected from directly\n    } else {\n      this.output.disconnect(destination);\n    }\n  }\n\n  /* ========================= */\n  /* --- Envelope controls --- */\n  /* ========================= */\n\n  /** Execute the attack envelope */\n  attack () {\n    this._envelope.attack();\n  }\n\n  /** Execute the release envelope */\n  release () {\n    this._envelope.release();\n  }\n}\n\nexport default Oscillator;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/Overtone.js","import AudioModule from \"./core/audio-module\"; \n\nclass StereoFeedbackDelay extends AudioModule {\n\n  /**\n   * Stereo delay with feedback\n   * @param {object} [o] - Options\n   * @param {number} [o.delayTimeL]\n   * @param {number} [o.delayTimeR]\n   * @param {number} [o.feedbackL]\n   * @param {number} [o.feedbackR]\n   * @param {number} [o.crossfeedL]\n   * @param {number} [o.crossfeedR]\n   * @param {number} [o.dryMixL]\n   * @param {number} [o.dryMixR]\n   * @param {number} [o.wetMixL]\n   * @param {number} [o.wetMixR]\n   */\n  constructor (audioCtx, o) {\n\n    try {\n      super(audioCtx);\n\n      // shim StereoPanner if it's not implemented\n      if (typeof this._audioCtx.createStereoPanner === 'undefined') {\n        this._audioCtx.createStereoPanner = function () { return new StereoPannerShim(this)};\n      }\n\n      o = o || {};    \n      this._audioCtx = audioCtx; \n      this._maxDelayTime = o.maxDelayTime || 10;\n\n      this._input = this._audioCtx.createGain();\n      this._channelSplitter = this._audioCtx.createChannelSplitter(2);\n      this._dryMixL = this._audioCtx.createGain();\n      this._dryMixR = this._audioCtx.createGain();\n      this._wetMixL = this._audioCtx.createGain();\n      this._wetMixR = this._audioCtx.createGain();\n      this._delayL = this._audioCtx.createDelay(this._maxDelayTime);\n      this._delayR = this._audioCtx.createDelay(this._maxDelayTime);\n      this._feedbackL = this._audioCtx.createGain();\n      this._feedbackR = this._audioCtx.createGain();\n      this._crossfeedL = this._audioCtx.createGain();\n      this._crossfeedR = this._audioCtx.createGain();\n      this._channelMerger = this._audioCtx.createChannelMerger(2);\n      this._output = this._audioCtx.createGain();\n  \n      this._connectAudioNodes();\n      this._setAudioDefaults(o);\n  \n      this.input = this._input;\n      this.output = this._output;\n\n    } catch (err) {\n\n      console.error(err);\n      throw new Error(\"Failed to create StereoFeedbackDelay audio module.\");\n    }\n  }\n\n  _connectAudioNodes () {\n    this._input.connect(this._channelSplitter);\n    this._channelSplitter.connect(this._dryMixL, 0);\n    this._channelSplitter.connect(this._dryMixR, 1);\n    this._channelSplitter.connect(this._delayL, 0);\n    this._channelSplitter.connect(this._delayR, 1);\n    this._delayL.connect(this._feedbackL);\n    this._delayR.connect(this._feedbackR);\n    this._feedbackL.connect(this._delayL);\n    this._feedbackR.connect(this._delayR);\n    this._delayL.connect(this._crossfeedR);\n    this._delayR.connect(this._crossfeedL);\n    this._crossfeedL.connect(this._delayL);\n    this._crossfeedR.connect(this._delayR);\n    this._delayL.connect(this._wetMixL);\n    this._delayR.connect(this._wetMixR);\n    this._dryMixL.connect(this._channelMerger, 0, 0);\n    this._dryMixR.connect(this._channelMerger, 0, 1);\n    this._wetMixL.connect(this._channelMerger, 0, 0);\n    this._wetMixR.connect(this._channelMerger, 0, 1);\n    this._channelMerger.connect(this._output);\n\n    return this;\n  }\n\n  _setAudioDefaults (o) {\n    o = o || {};\n\n    this._input.gain.value = 1;\n    this._delayL.delayTime.value = o.delayTimeL || 0.5;\n    this._delayR.delayTime.value = o.delayTimeR || 0.5;\n    this._dryMixL.gain.value = o.dryMixL || 1;\n    this._dryMixR.gain.value = o.dryMixR || 1;\n    this._wetMixL.gain.value = o.wetMixL || 0.2;\n    this._wetMixR.gain.value = o.wetMixR || 0.2;\n    this._feedbackL.gain.value = o.feedbackL || 0.1;\n    this._feedbackR.gain.value = o.feedbackR || 0.1;\n    this._crossfeedL.gain.value = o.crossfeedL || 0;\n    this._crossfeedR.gain.value = o.crossfeedR || 0;\n    this._output.gain.value = 1;\n\n    return this;\n  }\n\n  /**\n   * Connect to another AudioNode or AudioModule\n   */\n  connect (destination) {\n    // if destination has an input property, connect to it (destination is an AudioModule)\n    if (typeof destination.input === \"object\") {\n      this.output.connect(destination.input);\n    }\n    // else destination is an AudioNode and can be connected to directly\n    else {\n      this.output.connect(destination);\n    }\n  }\n\n  /**\n   * Disconnect from an AudioNode or AudioModule\n   */\n  disconnect (destination) {\n    // if destination has an input property, disconnect from it (destination is an AudioModule)\n    if (typeof destination.input === \"object\") {\n      this.output.disconnect(destination.input);\n    // else destination is an AudioNode and can be disconnected from directly\n    } else {\n      this.output.disconnect(destination);\n    }\n  }\n\n  /* =========================== */\n  /* --- Getters and setters --- */\n  /* =========================== */\n\n  /** Delay time left */\n  get delayTimeL () {\n    return this._delayL.delayTime;\n  }\n  set delayTimeL (time) {\n    this._delayL.delayTime.value = time;\n    return this;\n  }\n\n  /** Delay time right */\n  get delayTimeR () {\n    return this._delayR.delayTime;\n  }\n  set delayTimeR (time) {\n    this._delayR.delayTime.value = time;\n    return this;\n  }\n\n  /** Feedback L */\n  get feedbackL () {\n    return this._feedbackL.gain;\n  }\n  set feedbackL (gain) {\n    this._feedbackL.gain.value = gain;\n    return this;\n  }\n\n  /** Feedback R */\n  get feedbackR () {\n    return this._feedbackR.gain;\n  }\n  set feedbackR (gain) {\n    this._feedbackR.gain.value = gain;\n    return this;\n  }\n\n  /** Cross-feed L */\n  get crossfeedL () {\n    return this._crossfeedL.gain;\n  }\n  set crossfeedL (gain) {\n    this._crossfeedL.gain.value = gain;\n    return this;\n  }\n\n  /** Cross-feed R */\n  get crossfeedR () {\n    return this._crossfeedR.gain;\n  }\n  set crossfeedR (gain) {\n    this._crossfeedR.gain.value = gain;\n    return this;\n  }\n\n  /** Dry mix L */\n  get dryMixL () {\n    return this._dryMixL.gain;\n  }\n  set dryMixL (gain) {\n    this._dryMixL.gain.value = gain;\n    return this;\n  }\n\n  /** Dry mix R */\n  get dryMixR () {\n    return this._dryMixR.gain;\n  }\n  set dryMixR (gain) {\n    this._dryMixR.gain.value = gain;\n    return this;\n  }\n\n  /** Wet mix L */\n  get wetMixL () {\n    return this._wetMixL.gain;\n  }\n  set wetMixL (gain) {\n    this._wetMixL.gain.value = gain;\n    return this;\n  }\n\n  /** Wet mix R */\n  get wetMixR () {\n    return this._wetMixR.gain;\n  }\n  set wetMixR (gain) {\n    this._wetMixR.gain.value = gain;\n    return this;\n  }\n}\n\nexport default StereoFeedbackDelay;\n\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/StereoFeedbackDelay.js","import Widget from \"ui/core/widget\";\nimport Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\nimport MathUtil from \"util/util-math\";\n\n/**\n * Class representing a Graph widget.\n * @class \n * @implements {Widget}\n */\nclass Graph extends Widget {\n\n  /**\n   * @constructor\n   * @param {object} container - DOM container for the widget.\n   * @param {object} [o] - Options.\n   * @param {number} [o.minXVal=0] - Minimum X value.\n   * @param {number} [o.minYVal=0] - Minimum Y value.\n   * @param {number} [o.maxXVal=100] - Maximum X value.\n   * @param {number} [o.maxYVal=100] - Maximum Y value.\n   * @param {number} [o.maxNumVertices=-1] - Maximum number of vertices.\n   * @param {number} [o.quantizeX=0.1] - X-quantization (\"grid\") value.\n   * @param {number} [o.quantizeY=0.1] - Y-quantization (\"grid\") value.\n   * @param {number} [o.xDecimalPrecision=1] - Number of decimal places for output of the X values.\n   * @param {number} [o.yDecimalPrecision=1] - Number of decimal places for output of the Y values.\n   * @param {boolean} [o.hasFixedStartPoint=false] - Is there a fixed start vertex?\n   * @param {boolean} [o.hasFixedEndPoint=false] - Is there a fixed end vertex?\n   * @param {number} [o.fixedStartPointY=0] - Y value of the fixed start vertex, if exists.\n   * @param {number} [o.fixedEndPointY=0] - Y value of the fixed end vertex, if exists.\n   * @param {boolean} [o.isEditable=true] - Is the graph editable?\n   * @param {string} [o.vertexColor=\"#f40\"] - Color of vertex points.\n   * @param {string} [o.lineColor=\"#484848\"] - Color of lines connecting the vertices.\n   * @param {string} [o.backgroundColor=\"#fff\"] - Background color.\n   * @param {number} [o.lineWidth=2] - Width of the connecting lines.\n   * @param {number} [o.vertexRadius=4] - Radius of the vertex points.\n   * @param {number} [o.mouseSensitivity=1.2] - Mouse sensitivity (how much moving the mouse affects the interaction).\n   */\n  constructor(container, o) {\n    super(container, o);\n  }\n\n  /* ===========================================================================\n  *  PUBLIC API\n  */\n\n  /**\n   * Sets the options.\n   * @public @override\n   */\n  setOptions(o) {\n    o = o || {};\n\n    if (o.fixedStartPointY !== undefined) {\n      o.fixedStartPointY = Math.min(o.fixedStartPointY, this.o.maxYVal);\n      o.fixedStartPointY = Math.max(o.fixedStartPointY, this.o.minYVal);\n    }\n\n    if (o.fixedEndPointY !== undefined) {\n      o.fixedEndPointY = Math.min(o.fixedEndPointY, this.o.maxYVal);\n      o.fixedEndPointY = Math.max(o.fixedEndPointY, this.o.minYVal);\n    }\n\n    super.setOptions(o);\n  }\n\n  /**\n  * Returns the state as an array of [x, y] pairs.\n  * @public @override\n  */\n  getVal() {\n    return this.state.vertices.map(vtx => [vtx.x, vtx.y]);\n  }\n\n  /**\n  * Sets the state as an array of [x, y] vertex pairs.\n  * Same as setVal(), but will not trigger observer callback methods.\n  * @public @override\n  * @param {array} - An array of [x, y] points\n  */\n  setInternalVal(vertexArray) {\n   let vertices = vertexArray.map(xyPair => { return {x: xyPair[0], y: xyPair[1]}; });\n\n   this.setInternalState({ vertices: vertices });\n  }\n\n  /**\n  * Sets the state as an array of [x, y] vertex pairs.\n  * Same as setInternalVal(), but will trigger observer callback methods.\n  * @public @override\n  * @param {array} - An array of [x, y] points.\n  */\n  setVal(vertexArray) {\n    let vertices = vertexArray.map(xyPair => { return {x: xyPair[0], y: xyPair[1]}; });\n\n    this.setState({ vertices: vertices });\n  }\n\n  /**\n   * Adds a new vertex to the state\n   * @public\n   * @param {object} pos\n   * @param {number} pos.x\n   * @param {number} pos.y\n   */\n  addVertex(pos) {\n    let newVertices = this.getState().vertices.map(x=>x);\n\n    newVertices.push({x: pos.x, y: pos.y});\n    newVertices.sort((a, b) => a.x - b.x);\n\n    this.setState({\n     vertices: newVertices\n    });\n  }\n\n  /* ==============================================================================================\n  *  INITIALIZATION METHODS\n  */\n\n  /**\n   * Initializes the options.\n   * @override\n   * @private\n   */\n  _initOptions(o) {\n    // set defaults\n    this.o = {\n      minXVal: 0,\n      minYVal: 0,\n      maxXVal: 100,\n      maxYVal: 100,\n      maxNumVertices: -1,\n      quantizeX: 0.1,\n      quantizeY: 0.1,\n      xDecimalPrecision: 1,\n      yDecimalPrecision: 1,\n      hasFixedStartPoint: false,\n      hasFixedEndPoint: false,\n      fixedStartPointY: 0,\n      fixedEndPointY: 0,\n      isEditable: true,\n      vertexColor: \"#f40\",\n      lineColor: \"#484848\",\n      backgroundColor: \"#fff\",\n      vertexRadius: 4,\n      lineWidth: 2,\n      mouseSensitivity: 1.2\n    };\n\n    // override defaults with provided options\n    super._initOptions(o);\n  }\n\n  /**\n   * Initializes state constraints.\n   * @override\n   * @private\n   */\n  _initStateConstraints() {\n    const _this = this;\n\n    this.stateConstraints = new ConstraintSpec({\n      vertices: [{\n        x: new Constraint({\n          min: _this.o.minXVal,\n          max: _this.o.maxXVal,\n          transform: (num) => {\n            return MathUtil.quantize(num, _this.o.quantizeX);\n          }\n        }),\n        y: new Constraint({\n          min: _this.o.minYVal,\n          max: _this.o.maxYVal,\n          transform: (num) => {\n            return MathUtil.quantize(num, _this.o.quantizeY);\n          }\n        })\n      }]\n    });\n  }\n\n  /**\n   * Initializes state.\n   * @override\n   * @private\n   */\n  _initState() {\n    this.state = {\n      // verices contains an array of vertices\n      // each vertex is an object of form {x, y}\n      vertices: []\n    };\n\n    // Flags for whether fixed start and end points have been\n    // added to the state vertex array.\n    // These are used in the _update() method - if the flags\n    // are not set, and o.hasFixedStartPoint or o.hasFixedEndPoint\n    // are set, verticies representing the fixed points are to be added.\n    // If the flags are set, while o.hasFixedStartPoint or o.hasFixedEndPoint\n    // is not set, then vertices representing the fixed points are to be removed.\n    this.isFixedStartPointInitialized = false;\n    this.isFixedEndPointInitialized = false;\n  }\n\n  /**\n   * Initializes the svg elements.\n   * @override\n   * @private\n   */\n  _initSvgEls() {\n    const _this = this;\n\n    this.svgEls = {\n      panel: document.createElementNS(this.SVG_NS, \"rect\"),\n      vertices: [],\n      lines: []\n    };\n\n    this.svgEls.panel.setAttribute(\"width\", this._getWidth());\n    this.svgEls.panel.setAttribute(\"height\", this._getHeight());\n    this.svgEls.panel.setAttribute(\"fill\", this.o.backgroundColor);\n    this.svgEls.panel.setAttribute(\"stroke\", this.o.lineColor);\n\n    this._appendSvgEls();\n    this._update();\n  }\n\n  /**\n   * Initializes mouse and touch event handlers.\n   * @override\n   * @private\n   */\n  _initHandlers() {\n    const _this = this;\n\n    let targetVtx = null;\n    let targetLine = null;\n    let vtxPos0 = {}; // original poisition of two vertices affected by a line move\n    let x0 = 0;\n    let y0 = 0;\n    let x1 = 0;\n    let y1 = 0;\n    let dx = 0;\n    let dy = 0;\n\n    this.handlers = {\n\n       touchPanel: function touchPanel(ev) {\n         ev.preventDefault();\n\n         let xPos = ev.clientX - _this._getLeft();\n         let yPos = ev.clientY - _this._getTop();\n         let vertexState = _this._calcVertexState({x: xPos, y: yPos});\n\n         _this.addVertex(vertexState);\n       },\n\n       touchVertex: function touchVertex(ev) {\n         ev.preventDefault();\n\n         targetVtx = ev.target;\n\n         document.addEventListener(\"mousemove\", _this.handlers.moveVertex);\n         document.addEventListener(\"touchmove\", _this.handlers.moveVertex);\n         ev.target.addEventListener(\"mouseup\", _this.handlers.deleteVertex);\n         ev.target.addEventListener(\"touchend\", _this.handlers.deleteVertex);\n       },\n\n       touchLine: function touchLine(ev) {\n         ev.preventDefault();\n\n         targetLine = ev.target;\n\n         x0 = ev.clientX - _this._getLeft();\n         y0 = ev.clientY - _this._getTop();\n         vtxPos0 = null;\n\n         document.addEventListener(\"mousemove\", _this.handlers.moveLine);\n         document.addEventListener(\"touchmove\", _this.handlers.moveLine);\n       },\n\n       moveLine: function moveLine(ev) {\n         ev.preventDefault();\n\n         document.addEventListener(\"mouseup\", _this.handlers.endMoveLine);\n         document.addEventListener(\"touchend\", _this.handlers.endMoveLine);\n\n         x1 = ev.clientX - _this._getLeft();\n         y1 = ev.clientY - _this._getTop();\n\n         // delta position (change in position)\n         let dPos = {\n           x: x1 - x0,\n           y: y1 - y0\n         };\n\n         vtxPos0 = _this._moveLine(targetLine, dPos, vtxPos0);\n       },\n\n       endMoveLine: function endMoveLine(ev) {\n         ev.preventDefault();\n\n         vtxPos0 = null;\n\n         document.removeEventListener(\"mousemove\", _this.handlers.moveLine);\n         document.removeEventListener(\"touchmove\", _this.handlers.moveLine);\n       },\n\n       deleteVertex: function deleteVertex(ev) {\n         ev.preventDefault();\n\n         document.removeEventListener(\"mousemove\", _this.handlers.moveVertex);\n         document.removeEventListener(\"touchmove\", _this.handlers.moveVertex);\n\n         _this._deleteVertex(ev.target);\n\n         ev.target.removeEventListener(\"mouseup\", _this.handlers.deleteVertex);\n         ev.target.removeEventListener(\"touchend\", _this.handlers.deleteVertex);\n       },\n\n       moveVertex: function moveVertex(ev) {\n         ev.preventDefault();\n\n         targetVtx.removeEventListener(\"mouseup\", _this.handlers.deleteVertex);\n         targetVtx.removeEventListener(\"touchend\", _this.handlers.deleteVertex);\n\n         document.addEventListener(\"mouseup\", _this.handlers.endMoveVertex);\n         document.addEventListener(\"touchend\", _this.handlers.endMoveVertex);\n\n         let xPos = ev.clientX - _this._getLeft();\n         let yPos = ev.clientY - _this._getTop();\n\n         _this._moveVertex(targetVtx, {x: xPos, y: yPos});\n       },\n\n       endMoveVertex: function endMoveVertex(ev) {\n         ev.preventDefault();\n\n         document.removeEventListener(\"mousemove\", _this.handlers.moveVertex);\n         document.removeEventListener(\"touchmove\", _this.handlers.moveVertex);\n       }\n    };\n\n    this.svgEls.panel.addEventListener(\"mousedown\", _this.handlers.touchPanel);\n    this.svgEls.panel.addEventListener(\"touchdown\", _this.handlers.touchPanel);\n\n    this.svgEls.vertices.forEach(vtx => {\n      vtx.addEventListener(\"mousedown\", _this.handlers.touchVertex);\n      vtx.addEventListener(\"touchdown\", _this.handlers.touchVertex);\n    });\n\n    this.svgEls.lines.forEach(line => {\n      line.addEventListener(\"mousedown\", _this.handlers.touchLine);\n      line.addEventListener(\"touchdown\", _this.handlers.touchLine);\n    });\n  }\n\n  /**\n   * Updates (redraws) component based on state.\n   * @override\n   * @private\n   */\n  _update() {\n    const _this = this;\n\n    // add fixed start vertex if the option is set, but has not been initialized\n    if (this.o.hasFixedStartPoint && !this.isFixedStartPointInitialized) {\n      this.state.vertices.push({ x: _this.o.minXVal, y: _this.o.fixedStartPointY });\n      this.isFixedStartPointInitialized = true;\n    }\n\n    // add fixed end vertex if the option is set, but has not been initialized\n    if (this.o.hasFixedEndPoint && !this.isFixedEndPointInitialized) {\n      this.state.vertices.push({ x: _this.o.maxXVal, y: _this.o.fixedEndPointY });\n      this.isFixedEndPointInitialized = true;\n    }\n\n    // sort svg vertexes using a sort map\n    let idxSortMap = _this.state.vertices.map((vtx, idx) => { return { vtx: vtx, idx: idx }; });\n    idxSortMap.sort((a, b) => a.vtx.x - b.vtx.x);\n    _this.state.vertices = idxSortMap.map(el => _this.state.vertices[el.idx]);\n\n    // update fixed start vertex to the correct y value\n    if (this.o.hasFixedStartPoint && this.isFixedStartPointInitialized) {\n      _this.state.vertices[0].y = _this.o.fixedStartPointY;\n    }\n\n    // update fixed end vertex to the correct y value\n    if (this.o.hasFixedEndPoint && this.isFixedEndPointInitialized) {\n      _this.state.vertices[_this.state.vertices.length - 1].y = _this.o.fixedEndPointY;\n    }\n\n    // remove fixed start vertex if had been initialized, but the option is unset\n    if (!this.o.hasFixedStartPoint && this.isFixedStartPointInitialized) {\n      this.state.vertices.splice(0, 1);\n      idxSortMap.splice(0, 1);\n      idxSortMap.forEach(el => el.idx--);\n      this.isFixedStartPointInitialized = false;\n    }\n\n    // remove fixed end vertex if has been initialized, but the option is unset\n    if (!this.o.hasFixedEndPoint && this.isFixedEndPointInitialized) {\n      this.state.vertices.pop();\n      idxSortMap.pop();\n      this.isFixedEndPointInitialized = false;\n    }\n\n    // if there are more state vertices than svg vertices, add a corresponding number of svg vertices and lines\n    for (let i = _this.svgEls.vertices.length; i < _this.state.vertices.length; ++i) {\n      _this._addSvgVertex();\n    }\n\n    // if there are more svg vertices than state vertices, remove a corresponding number of svg vertices and lines\n    for (let i = _this.svgEls.vertices.length; i > _this.state.vertices.length; --i) {\n      _this._removeSvgVertex();\n    }\n\n    // sort the svg vertices according to the vertex sort map\n    _this.svgEls.vertices = idxSortMap.map(el => _this.svgEls.vertices[el.idx]);\n\n    // set the correct position coordinates for every vertex\n    _this.state.vertices.forEach((stateVtx, idx) => {\n      let svgVtx = _this.svgEls.vertices[idx];\n      let pos = _this._calcVertexPos(stateVtx);\n\n      svgVtx.setAttribute(\"cx\", pos.x);\n      svgVtx.setAttribute(\"cy\", pos.y);\n      svgVtx.setAttribute(\"r\", _this.o.vertexRadius);\n      svgVtx.setAttribute(\"fill\", _this.o.vertexColor);\n\n      // for every vertex other than the first, draw a line to the previous vertex\n      if (idx > 0) {\n        let prevVtx = _this.state.vertices[idx - 1];\n        let prevPos = _this._calcVertexPos(prevVtx);\n        let line = _this.svgEls.lines[idx - 1];\n\n        line.setAttribute(\"d\", \"M \" + pos.x + \" \" + pos.y + \" L \" + prevPos.x + \" \" + prevPos.y);\n        line.setAttribute(\"fill\", \"transparent\");\n        line.setAttribute(\"stroke-width\", _this.o.lineWidth);\n        line.setAttribute(\"stroke\", _this.o.lineColor);\n      }\n    });\n\n    // remove and reappend all svg elements so that vertices are on top of lines\n    _this.svgEls.lines.forEach(svgLine => {\n      _this.svg.removeChild(svgLine);\n      _this.svg.appendChild(svgLine);\n    });\n\n    _this.svgEls.vertices.forEach(svgVtx => {\n      _this.svg.removeChild(svgVtx);\n      _this.svg.appendChild(svgVtx);\n    });\n\n    // reassign listeners\n    _this.svgEls.vertices.forEach(vtx => {\n      vtx.addEventListener(\"mousedown\", _this.handlers.touchVertex);\n      vtx.addEventListener(\"touchdown\", _this.handlers.touchVertex);\n    });\n\n    _this.svgEls.lines.forEach(line => {\n      line.addEventListener(\"mousedown\", _this.handlers.touchLine);\n      line.addEventListener(\"touchdown\", _this.handlers.touchLine);\n    });\n  }\n\n  /* ==============================================================================================\n  *  INTERNAL FUNCTIONALITY METHODS\n  */\n\n  /**\n   * Deletes a vertex.\n   * @private\n   * @param {SVGElement} targetVtx - Vertex to Delete\n   */\n  _deleteVertex(targetVtx) {\n    const _this = this;\n\n    let vtxIdx = this.svgEls.vertices.findIndex(vtx => vtx === targetVtx);\n\n    if (vtxIdx !== -1) {\n     let newVertices = this.getState().vertices.map(x=>x);\n     newVertices.splice(vtxIdx, 1);\n     _this.setState({\n       vertices: newVertices\n     });\n    }\n  }\n\n  /**\n   * Adds a new SVG vertex representation.\n   * @private\n   */\n  _addSvgVertex() {\n    const _this = this;\n\n    let newVertex = document.createElementNS(_this.SVG_NS, \"circle\");\n    _this.svgEls.vertices.push(newVertex);\n    _this.svg.appendChild(newVertex);\n\n    // if there is more than 1 svg vertex, we also need to draw lines between them\n    if (_this.svgEls.vertices.length > 1) {\n      this._addSvgLine();\n    }\n  }\n\n  /**\n   * Adds an SVG line connecting two vertices.\n   * @private\n   */\n  _addSvgLine() {\n    let newLine = document.createElementNS(this.SVG_NS, \"path\");\n    this.svg.appendChild(newLine);\n    this.svgEls.lines.push(newLine);\n  }\n\n  /**\n   * Removes an SVG vertex.\n   * @private\n   */\n  _removeSvgVertex() {\n    let vertex = this.svgEls.vertices[this.svgEls.vertices.length - 1];\n\n    this.svg.removeChild(vertex);\n    vertex = null;\n    this.svgEls.vertices.pop();\n\n    if (this.svgEls.lines.length > 0) {\n     this._removeSvgLine();\n    }\n  }\n\n  /**\n   * Removes an SVG line connecting two vertices.\n   * @private\n   */\n  _removeSvgLine() {\n    let line = this.svgEls.lines[this.svgEls.lines.length - 1];\n\n    this.svg.removeChild(line);\n    line = null;\n    this.svgEls.lines.pop();\n  }\n\n  /**\n    * Moves a line.\n    * @private\n    * @param {SVGElement} targetLine - The target line\n    * @param {object} dPos -\n    * @param {number} dPos.x\n    * @param {number} dPos.y\n    * @param {object} vtxPos0 - Original position (before moving)\n    *                           of the two vertices immediately to the left\n    *                           and right of the line being moved in the\n    *                           form { vtx1: {x, y}, vtx2: {x, y}, boundaryBL: {x, y}, boundaryTR: {x, y} }\n    *                           If null, will be calculated from the\n    *                           corresponding svg element.\n    * @param {obect} [vtxPos0.vtx1]\n    * @param {number} [vtxPos0.vtx1.x]\n    * @param {number} [vtxPos0.vtx1.y]\n    * @param {obect} [vtxPos0.vtx2]\n    * @param {number} [vtxPos0.vtx2.x]\n    * @param {number} [vtxPos0.vtx2.y]\n    * @returns {object} Original position of the two vertices affected by the line move in the form\n    *                   { vtx1: {x, y}, vtx2: {x, y}, boundaryBL: {x, y}, boundaryTR: {x, y} }.\n    */\n  _moveLine(targetLine, dPos, vtxPos0) {\n    const _this = this;\n\n    let lineIdx = _this.svgEls.lines.findIndex(line => line === targetLine);\n\n    // get vertices to the left and right of the selected line\n    let vtx1 = _this.svgEls.vertices[lineIdx];\n    let vtx2 = _this.svgEls.vertices[lineIdx + 1];\n\n    let vtx1curPos = {\n      x: parseInt(_this.svgEls.vertices[lineIdx].getAttribute(\"cx\")),\n      y: parseInt(_this.svgEls.vertices[lineIdx].getAttribute(\"cy\"))\n    };\n    let vtx2curPos = {\n      x: parseInt(_this.svgEls.vertices[lineIdx + 1].getAttribute(\"cx\")),\n      y: parseInt(_this.svgEls.vertices[lineIdx + 1].getAttribute(\"cy\"))\n    };\n\n    // if vtxPos0 is null or undefined, this is the first time this function\n    // was called in the line move, and we need to get the position of affected\n    // vertices from the svg attributes.\n    // vtx1 and vtx2 are the left and right vertices bounding the line\n    // boundaryBL is the bottom left boundary restricting movement of the line\n    // boundaryTR is the top right boundary restricting movement of the line\n    if (vtxPos0 === null || vtxPos0 === undefined) {\n\n      let boundaryBL = {\n        x: (lineIdx > 0) ? \n               parseInt(_this.svgEls.vertices[lineIdx - 1].getAttribute(\"cx\"))\n            : _this._calcVertexPos({x: _this.o.minXVal, y: _this.o.minYVal}).x,\n        y: _this._calcVertexPos({x: _this.o.minXVal, y: _this.o.minYVal}).y\n      };\n\n      let boundaryTR = {\n        x: (lineIdx + 2 < _this.svgEls.vertices.length) ? \n              parseInt(_this.svgEls.vertices[lineIdx + 2].getAttribute(\"cx\"))\n            : _this._calcVertexPos({x: _this.o.maxXVal, y: _this.o.maxYVal}).x,\n        y: _this._calcVertexPos({x: _this.o.maxXVal, y: _this.o.maxYVal}).y\n      };\n\n      vtxPos0 = {\n       vtx1: vtx1curPos,\n       vtx2: vtx2curPos,\n       boundaryBL: boundaryBL,\n       boundaryTR: boundaryTR\n      };\n    }\n\n    // calculate the new positions for the two affected vertices\n    let vtx1newPos = {\n      x: vtxPos0.vtx1.x + dPos.x,\n      y: vtxPos0.vtx1.y + dPos.y\n    };\n\n    let vtx2newPos = {\n      x: vtxPos0.vtx2.x + dPos.x,\n      y: vtxPos0.vtx2.y + dPos.y\n    };\n\n    // if moving would take x values outside of boundaries, keep x values the same\n    if (vtx1newPos.x < vtxPos0.boundaryBL.x || \n        vtx2newPos.x < vtxPos0.boundaryBL.x || \n        vtx1newPos.x > vtxPos0.boundaryTR.x || \n        vtx2newPos.x > vtxPos0.boundaryTR.x) {\n      vtx1newPos.x = vtx1curPos.x;\n      vtx2newPos.x = vtx2curPos.x;\n    }\n\n    // if moving would take y values outside of boundaries, keep y values the same\n    // remember that y-coordinates are inverted when dealing with the canvas\n    if (vtx1newPos.y > vtxPos0.boundaryBL.y || \n        vtx2newPos.y > vtxPos0.boundaryBL.y || \n        vtx1newPos.y < vtxPos0.boundaryTR.y || \n        vtx2newPos.y < vtxPos0.boundaryTR.y) {\n      vtx1newPos.y = vtx1curPos.y;\n      vtx2newPos.y = vtx2curPos.y;\n    }\n\n    this._moveVertex(vtx1, vtx1newPos);\n    this._moveVertex(vtx2, vtx2newPos);\n\n    // return the original position so that it may be used again if the line move is not finished\n    return vtxPos0;\n  }\n\n  /**\n  * Moves a vertex.\n  * @private\n  * @param {SVGElement} targetVtx - The target vertex\n  * @param {Object} newPos - The new position\n  * @param {number} newPos.x\n  * @param {number} newPos.y\n  */\n  _moveVertex(targetVtx, newPos) {\n    const _this = this;\n\n    let vtxState = _this._calcVertexState(newPos);\n    let vtxIdx = _this.svgEls.vertices.findIndex(vtx => vtx === targetVtx);\n\n    // move the vertex if it's not a fixed start or end point\n    if (!(vtxIdx === 0 && this.o.hasFixedStartPoint) && \n        !(vtxIdx === this.state.vertices.length - 1 && \n        this.o.hasFixedEndPoint)) {\n      let vertices = _this.getState().vertices.map(x=>x);\n\n      vertices[vtxIdx].x = vtxState.x;\n      vertices[vtxIdx].y = vtxState.y;\n\n      _this.setState({\n        vertices: vertices\n      });\n    }\n  }\n\n  /* ===========================================================================\n  *  HELPER METHODS\n  */\n\n  /**\n   * Calculates the x and y for a vertex in the graph according to its state value.\n   * @private\n   */\n  _calcVertexPos(vertexState) {\n    return {\n     x: this._getWidth() * (vertexState.x / this.o.maxXVal),\n     y: this._getHeight() - (this._getHeight() * (vertexState.y / this.o.maxYVal))\n    };\n  }\n\n  /**\n   * Calculates the x and y for a vertex state based on position on the graph.\n   * (inverse of _calcVertexPos).\n   * @private\n   */\n  _calcVertexState(vertexPos) {\n    return {\n      x: this.o.maxXVal * (vertexPos.x / this._getWidth()),\n      y: this.o.maxYVal - (this.o.maxYVal * (vertexPos.y / this._getHeight()))\n    };\n  }\n\n  /**\n   * Converts on-screen x distance to scaled x state-value.\n   * @private\n   */\n  _xPxToVal(x) {\n    return (x / this._getWidth()) * (this.o.maxXVal - this.o.minXVal);\n  }\n\n  /**\n   * Converts on-screen y distance to scaled y state-value.\n   * @private\n   */\n  _yPxToVal(y) {\n    return (y / this._getHeight()) * (this.o.maxYVal - this.o.minYVal);\n  }\n}\n\nexport default Graph;\n\n\n// WEBPACK FOOTER //\n// ./src/ui/graph.js","/* ============================================================================================= */\n/* ENVELOPE TEST\n/* ============================================================================================= */\n\nimport AudioModuleManager from \"audio_modules/core/audio-module-manager\";\nimport Graph from \"ui/graph\";\n\nconst AMM = new AudioModuleManager(new AudioContext());\n\nlet osc = AMM.createOscillator();\nlet envelope = AMM.createEnvelope();\nlet gain = AMM.createGain();\n\nosc.connect(envelope);\nenvelope.connect(gain);\ngain.connect(AMM.destination);\n\nosc.frequency.value = 220;\ngain.gain.value = 0;\nosc.start();\n\nconst attackGraph = new Graph(document.querySelector(\"#attack-graph\"), {\n  minXVal: 0,\n  maxXVal: 2,\n  minYVal: 0,\n  maxYVal: 1\n});\nattackGraph.addListener(env => {\n  envelope.setAttackEnvelope(env);\n});\n\nconst releaseGraph = new Graph(document.querySelector(\"#release-graph\"), {\n  minXVal: 0,\n  maxXVal: 2,\n  minYVal: 0,\n  maxYVal: 1\n});\nreleaseGraph.addListener(env => envelope.setReleaseEnvelope(env));\n\nconst attackBtn = document.querySelector(\"#attack-button\");\nconst releaseBtn = document.querySelector(\"#release-button\");\nconst audioToggle = document.querySelector(\"#audio-toggle\");\nconst messageBox = document.querySelector(\".message\");\n\n\n\naudioToggle.addEventListener(\"change\", ev => {\n  gain.gain.value = ev.target.checked ? 0.5 : 0;\n});\n\nattackBtn.addEventListener(\"click\", ev => {\n  envelope.attack().then(env => {\n    messageBox.innerHTML = \"Attack finished, attack env: \" + env;\n  });\n});\n\nreleaseBtn.addEventListener(\"click\", ev => {\n  envelope.release().then(env => {\n    messageBox.innerHTML = \"Release finished, release env: \" + env;\n  });\n});\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./test/manual_test/audio_modules/envelope.js"],"sourceRoot":""}