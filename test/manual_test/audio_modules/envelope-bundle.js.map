{"version":3,"sources":["webpack:///webpack/bootstrap 6a9fc27fc02c4dc44329","webpack:///./src/util/constraint.js","webpack:///./src/audio_modules/core/audio-module.js","webpack:///./src/util/constraint-def.js","webpack:///./src/audio_modules/channel-strip.js","webpack:///./src/ui/core/widget.js","webpack:///./src/audio_modules/envelope.js","webpack:///./src/audio_modules/core/verify-audio-context-features.js","webpack:///./src/audio_modules/core/util.js","webpack:///./src/util/util-math.js","webpack:///./src/audio_modules/core/shim-web-audio-connect.js","webpack:///./src/ui/core/widget-mixin-svgns.js","webpack:///./src/ui/core/widget-mixin-state.js","webpack:///./src/ui/core/widget-mixin-options.js","webpack:///./src/ui/core/widget-mixin-observer.js","webpack:///./src/audio_modules/core/audio-module-manager.js","webpack:///./src/audio_modules/core/audio-patch.js","webpack:///./src/audio_modules/AdditiveSynth.js","webpack:///./src/audio_modules/AdditiveSynthVoice.js","webpack:///./src/audio_modules/core/audio-module-options-mixin.js","webpack:///./src/audio_modules/Overtone.js","webpack:///./src/audio_modules/StereoFeedbackDelay.js","webpack:///./src/audio_modules/oscillator-voice.js","webpack:///./src/ui/graph.js","webpack:///./test/manual_test/audio_modules/envelope.js"],"names":["Constraint","spec","min","max","enum","transform","AudioModule","audioCtx","numInputs","numOutputs","isAudioModule","isWebAudioConnectShimmed","input","createGain","output","audioComponents","_initOptions","_initAudioComponents","_initAudioParams","destination","outputIndex","inputIndex","connect","disconnect","Object","assign","prototype","ConstraintSpec","specDefObj","constraintMap","_parseMap","targetObj","_this","forEach","_constrainBranch","keyBranch","target","constraint","key","undefined","Math","Array","find","c","cMap","push","parentBranch","map","x","keys","keyIdx","newKeyBranch","curKey","length","arrFlag","i","keyBranchSlice","slice","j","_applyConstraint","ChannelStrip","o","inputGain","panner","createStereoPanner","outputGain","err","console","error","gain","pan","value","newVal","Widget","container","Element","Error","svg","document","createElementNS","SVG_NS","appendChild","setAttribute","getBoundingClientRect","width","height","svgEls","handlers","state","stateConstraints","observers","_initStateConstraints","_initState","_initSvgEls","_initHandlers","values","appendSvgEls","svgEl","child","arrEl","newState","_getLeft","y","_getTop","top","left","Envelope","envGain","attackEnvelope","releaseEnvelope","_normalizeAttackEnvelope","_normalizeReleaseEnvelope","newEnv","env","a","t","cancelScheduledValues","currentTime","setValueAtTime","startTime","linearRampToValueAtTime","Promise","resolve","reject","window","setTimeout","point","VerifyAudioContextFeatures","features","feature","createAnalyser","createBuffer","createBufferSource","createBiquadFilter","createChannelMerger","createChannelSplitter","createConvolver","createDelay","createDynamicsCompressor","createIIRFilter","createOscillator","createPannerr","StereoPannerShim","warn","AudioModuleUtil","midiToFreq","midiPitch","a4tuning","freq","pow","midiVelToGain","vel","noteNameToMidi","noteName","noteNameFormat","test","log","capture","exec","note","accidental","octave","noteFundamentalMap","noteFundamental","noteNameToFreq","MathUtil","getPrecision","val","decStr","split","round","precision","factor","quantize","q","qVal","abs","shimWebAudioConnect","audioNodePrototype","getPrototypeOf","webAudioConnect","webAudioDisconnect","WidgetStateMixin","getState","setInternalState","isChanged","hasOwnProperty","constrain","_update","setState","_notifyObservers","WidgetOptionsMixin","getOptions","setOptions","WidgetObserverMixin","addObserver","newObserver","observer","removeObserver","targetObserver","idx","splice","addListener","newListener","removeListener","targetListener","getVal","AudioModuleManager","AUDIO_CTX","AudioContext","initObj","moduleMapObj","modules","audioModuleSpec","audioModuleName","newAudioModule","toLowerCase","replace","createAdditiveSynth","createChannelStrip","createDestination","createOscillatorVoice","createStereoFeedbackDelay","connections","isArray","connectionPath","currentModule","nextModule","e","AudioPatch","moduleMap","audioModuleManager","MODULE_MAP","AUDIO_MODULE_MANAGER","getAudioContext","AdditiveSynth","_audioCtx","numVoices","_numOvertones","numOvertones","_voices","_availableVoices","_busyVoices","_channelStrip","_audioModuleOutput","newNumVoices","newNumOvertones","newGain","newPan","voiceNum","otNum","getOvertoneAmplitude","newAmp","setOvertoneAmplitude","voice","setOvertoneAttackEnvelope","setOvertoneReleaseEnvelope","selectedVoice","shift","releaseVoice","attackVoice","selectedBusyNodeIndex","findIndex","busyVoice","setFrequency","attack","release","deleteAvailableVoices","numVoicesToDelete","voiceToDelete","pitch","deleteBusyVoices","numBusyVoicesToDelete","numAvailableVoices","AdditiveSynthVoice","_envelope","numberOfOvertones","_overtones","options","newFreq","frequency","amplitude","func","n","fundFreq","sampleRate","pop","freqCeil","AudioModuleOptionsMixin","Oscillator","_oscillator","start","curTime","StereoFeedbackDelay","_maxDelayTime","maxDelayTime","_input","_channelSplitter","_dryMixL","_dryMixR","_wetMixL","_wetMixR","_delayL","_delayR","_feedbackL","_feedbackR","_crossfeedL","_crossfeedR","_channelMerger","_output","_connectAudioNodes","_setAudioDefaults","delayTime","delayTimeL","delayTimeR","dryMixL","dryMixR","wetMixL","wetMixR","feedbackL","feedbackR","crossfeedL","crossfeedR","time","OscillatorVoice","oscillator","envelope","channelStrip","setInputGain","glide","type","real","imag","constructor","name","wave","createPeriodicWave","setPeriodicWave","setWaveformType","getOutputGain","setOutputGain","getPan","setPan","osc","getAttackEnvelope","setAttackEnvelope","getReleaseEnvelope","setReleaseEnvelope","setGain","Graph","vertices","vtx","vertexArray","xyPair","newVtx","minXVal","minYVal","isXFixed","isYFixed","xAnchor","yAnchor","maxXVal","maxYVal","newVertices","sort","b","addVertex","maxNumVertices","quantizeX","quantizeY","xDecimalPrecision","yDecimalPrecision","isEditable","vertexColor","fixedVertexColor","lineColor","backgroundColor","vertexRadius","lineWidth","mouseSensitivity","num","panel","lines","_getWidth","_getHeight","_appendSvgEls","targetVtx","targetLine","vtxPos0","x0","y0","x1","y1","dx","dy","touchPanel","ev","preventDefault","xPos","clientX","yPos","clientY","vertexState","_calcVertexState","touchVertex","addEventListener","moveVertex","deleteVertex","touchLine","moveLine","endMoveLine","dPos","_moveLine","removeEventListener","_deleteVertex","endMoveVertex","_moveVertex","line","idxSortMap","el","_addSvgVertex","_removeSvgVertex","stateVtx","svgVtx","pos","_calcVertexPos","vtxFill","prevVtx","prevPos","removeChild","svgLine","vtxIdx","isRemovable","newVertex","_addSvgLine","newLine","vertex","_removeSvgLine","lineIdx","vtx1","vtx2","vtx1curPos","parseInt","getAttribute","vtx2curPos","boundaryBL","boundaryTR","vtx1newPos","vtx2newPos","newPos","vtxState","vertexPos","AMM","createEnvelope","attackGraph","querySelector","releaseGraph","attackBtn","releaseBtn","audioToggle","messageBox","checked","then","innerHTML"],"mappings":"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","file":"/test/manual_test/audio_modules/envelope-bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 51);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6a9fc27fc02c4dc44329","/**\n * @class\n * Constraint object represents constraints on a value.\n * Instances of Constraint are used as leaves on a ConstraintSpec definition.\n * A ConstraintSpec useses Constraints to apply a constraint to leaves of an\n * arbitrarily nested object, whose leaves represent values that may be constrained.\n */\nclass Constraint {\n\n  /**\n   * @constructor\n   * @param {object} [spec] - Spec specifying the constraints.\n   * @param {number} [spec.min] - Minimum value.\n   * @param {number} [spec.max] - Maximum value.\n   * @param {array} [spec.enum] - Array of possible enumerable values.\n   * @param {function} [spec.transform] - A transformation function to apply to the value.\n   */\n  constructor(spec) {\n    spec = spec || {};\n\n    this.min = spec.min;\n    this.max = spec.max;\n    this.enum = spec.enum;\n    this.transform = spec.transform;\n  }\n}\n\nexport default Constraint;\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/constraint.js","import AudioModuleUtil from \"./util\";\nimport shimWebAudioConnect from \"./shim-web-audio-connect\";\nimport AudioModuleOptionsMixin from \"./audio-module-options-mixin\";\n\n/**\n * Base class representing an Audio Module.\n * An AudioModule wraps a set of AudioNodes to provide a higher-order component that can itself be\n * used as an AudioNode.\n * @abstract @class\n */\nclass AudioModule {\n\n  /**\n   * @constructor\n   * @param {AudioContext} - The Audio Context that the module participates in.\n   * @param {number} numInputs - Number of inputs.\n   * @param {number} numOutputs - Number of outputs.\n   */\n  constructor(audioCtx, numInputs, numOutputs) {\n    this.audioCtx = audioCtx;\n\n    // marker boolean to distinguish current object from an AudioNode\n    this.isAudioModule = true;\n\n    // shim the connect method for the Audio Context so that AudioNodes can connect to AudioModules\n    if (this.audioCtx.isWebAudioConnectShimmed !== true) {\n      shimWebAudioConnect(this.audioCtx);\n    }\n\n    this.input = audioCtx.createGain();\n    this.output = audioCtx.createGain();\n\n    this.audioComponents = {};\n\n    this._initOptions();\n    this._initAudioComponents();\n    this._initAudioParams();\n  }\n\n  /* ============================================================================================= */\n  /*  INITIALIZATION METHODS\n  /* ============================================================================================= */\n\n  /**\n   * Initialize audio components and their connections.\n   * @private @abstract\n   */\n  _initAudioComponents() {}\n\n  /**\n   * Initialize and expose Audio Params.\n   * @private @abstract\n   */\n  _initAudioParams() {}\n\n  /**\n   * Initialize the options.\n   * @private @abstract\n   */\n  _initOptions() {}\n\n  /* ============================================================================================ */\n  /*  PUBLIC API\n  /* ============================================================================================ */\n  \n  /**\n   * Returns the AudioContext that the Audio Module is participating in.\n   * @returns {AudioContext} - the AudioContext that the Audio Module is participating in. \n   */\n  getContext() {\n    return this.audioCtx;\n  }\n  \n  /**\n   * Connect to another AudioNode or AudioModule\n   * @public\n   * @param {AudioNode | AudioModule} destination - AudioNode or AudioModule to connect to.\n   * @param {number} outputIndex - Channel of the output to connect.\n   * @param {number} outputIndex - Channel of the destintation to connect to. \n   */\n  connect(destination, outputIndex, inputIndex) {\n    // if destination has an input property, connect to it (destination is an AudioModule)\n    if (destination.isAudioModule === true) {\n      this.output.connect(destination.input);\n    }\n    // else destination is an AudioNode and can be connected to directly\n    else {\n      this.output.connect(destination);\n    }\n  }\n\n  /**\n   * Disconnect from an AudioNode or AudioModule\n   * @param {AudioNode | AudioModule} destination - AudioNode or AudioModule to disconnect from.\n   * @param {number} outputIndex - Channel of the output to disconnect.\n   * @param {number} outputIndex - Channel of the destintation to disconnect from. \n   */\n  disconnect(destination, outputIndex, inputIndex) {\n    // if destination has an input property, disconnect from it (destination is an AudioModule)\n    if (destination.isAudioModule === true) {\n      this.output.disconnect(destination.input);\n    // else destination is an AudioNode and can be disconnected from directly\n    } else {\n      this.output.disconnect(destination);\n    }\n  }\n}\n\nObject.assign(AudioModule.prototype, AudioModuleOptionsMixin);\n\nexport default AudioModule;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/core/audio-module.js","import Constraint from \"./constraint\";\n\n/**\n * ConstraintSpec is used to apply a constraining function to a state object of arbitrary nestedness,\n * whose leaves are values that need to be constrained (i.e. to min or max values).\n * In order for ConstraintSpec to work properly, it's constructor must be given an object that\n * exactly mirrors the nested structure of the object to be constrained, with the leaves\n * containing instances of the Constraint class. Additional requirements (i.e. how to deal with nested arrays)\n * are outlined below.\n * TODO: expand explanation\n *\n * @class\n */\nclass ConstraintSpec {\n\n  /**\n   * @constructor\n   * @param {object} specDefObj - The constraint spec definition object, which defines the nesting\n   *                              structure of the objects that need to be constrained. The leaves\n   *                              of this specDef object must be objects of type Constraint, which\n   *                              act as the constraint definitions for each leaf.\n   */\n  constructor(specDefObj) {\n    this.constraintMap = [[]];\n    this._parseMap(specDefObj, this.constraintMap[0], this.constraintMap);\n  }\n\n  /**\n   * Check a constraint map for constraint specs and apply them to obj.\n   * Note: will not mutate the original object. New value is returned.\n   * @public\n   * @param {object} targetObj - The state object to check\n   * @return {number | string | object | array} val - The constrained value.\n   */\n  constrain(targetObj) {\n    const _this = this;\n    _this.constraintMap.forEach(keyBranch => {\n      _this._constrainBranch(targetObj, keyBranch);\n    });\n  }\n\n  /**\n   * Apply a constraint.\n   * @private\n   * @param {object} target - The target object to constrain\n   * @param {Constraint} constraint - The constraint object to use.\n   * @param {symbol} key - The key to use to access the constraint.\n   * @return {number | string | object | array} val - The constrained value.\n   */\n  _applyConstraint(target, constraint, key) {\n    if (constraint.min !== undefined) {\n      target[key] = Math.max(target[key], constraint.min);\n    }\n    if (constraint.max !== undefined) {\n      target[key] = Math.min(target[key], constraint.max);\n    }\n    if (constraint.enum !== undefined && constraint.enum instanceof Array) {\n      target[key] = (constraint.enum.find(target[key]) !== undefined) ? target[key] : constraint.enum[0];\n    }\n    if (constraint.transform !== undefined && typeof constraint.transform === \"function\") {\n      target[key] = constraint.transform(target[key]);\n    }\n\n    return target;\n  }\n\n  /**\n   * Parse a constraint map\n   * @private\n   * @param {object} c - The map object currently being examined.\n   *                     At the top level, this would be the whole map.\n   *                     At the terminal level, this would be an instance of Constraint object.\n   * @param {array} keyBranch - An array of keys that will specify how to get to each Constraint.\n   *                            The last element in this array will be the constraint itself.\n   * @param {array} cMap - An mutable array of key branches.\n   */\n  _parseMap(c, keyBranch, cMap) {\n    const _this = this;\n\n    if (c instanceof Array) {\n      /* if c is an array, add \"_arr_\" to the current map, and examine the first element.\n       * all elements in an array are required to have identical structure, so examining\n       * the first one is enough.\n       */\n      keyBranch.push(\"_arr_\");\n      _this._parseMap(c[0], keyBranch, cMap);\n    } else if (c instanceof Object && !(c instanceof Constraint)) {\n      // keep a copy of the parent branch to create new branches from\n      let parentBranch = keyBranch.map(x=>x);\n\n      // create new branch for each key after the first key using the parentBranch clone\n      Object.keys(c).forEach((key, keyIdx) => {\n        if (keyIdx === 0) {\n          keyBranch.push(key);\n          _this._parseMap(c[key], keyBranch, cMap);\n        } else {\n          let newKeyBranch = parentBranch.map(x=>x);\n          cMap.push(newKeyBranch);\n          newKeyBranch.push(key);\n          _this._parseMap(c[key], newKeyBranch, cMap);\n        }\n      });\n    } else if (c instanceof Constraint) {\n\n      // this will be the last element in the branch - the Constraint object itself\n      keyBranch.push(c);\n    }\n  }\n\n  /**\n   * Apply constraints to one branch of the constraint map.\n   * @private\n   * @param {object} targetObj - The state object to apply the constraint to\n   * @param {object} defObj - The constraint definition object to use.\n   * @param {array} keyBranch - An array of keys representing a path to a constraint object.\n   */\n  _constrainBranch(targetObj, keyBranch) {\n    const _this = this;\n\n    let curKey;\n    let constraint = keyBranch[keyBranch.length - 1];\n    let arrFlag = false;\n\n    /* Drill into targetObj and defObj following keyBranch keys\n     * We go to length - 2, because the next-to-last element might be an\n     * array, and the last element is the Constraint object itself.\n     */\n    for (let i = 0; i < keyBranch.length - 2 && !arrFlag; ++i) {\n      curKey = keyBranch[i];\n\n      // if we encounter an array, drill into each corresponding arry element in targetObj\n      if (curKey === \"_arr_\") {\n        arrFlag = true;\n\n        let keyBranchSlice = keyBranch.slice(i + 1, keyBranch.length);\n\n        for (let j = 0; j < targetObj.length; ++j) {\n          _this._constrainBranch(targetObj[j], keyBranchSlice);\n        }\n      } else {\n        targetObj = targetObj[curKey];\n      }\n    }\n\n    // if arrFlag is set, we've encountered an array somewhere other than on the leaves\n    // in this case we don't need to operate on it\n    if (!arrFlag) {\n      // Apply the constraints\n      curKey = keyBranch[keyBranch.length - 2];\n\n      if (curKey === \"_arr_\") {\n        for (let i = 0; i < targetObj.length; ++i) {\n          _this._applyConstraint(targetObj, constraint, i);\n        }\n      } else {\n        _this._applyConstraint(targetObj, constraint, curKey);\n      }\n    }\n  }\n}\n\nexport default ConstraintSpec;\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/constraint-def.js","import AudioModule from \"audio_modules/core/audio-module\";\nimport verifyAudioContextFeatures from \"audio_modules/core/verify-audio-context-features\";\n\n/**\n * Class representing a Channel Strip.\n * A Channel Strip is a processing component similar to a channel strip found on a mixing board.\n * It facilitates control over input gain, output gain, and pan of a signal.\n * @class\n */\nclass ChannelStrip extends AudioModule {\n\n  /**\n   * @constructor\n   * @param {AudioContext} audioCtx \n   */\n  constructor(audioCtx, o) {\n    super(audioCtx);\n  }\n\n  /* ============================================================================================= */\n  /*  INITIALIZATION METHODS\n  /* ============================================================================================= */\n  \n  /**\n   * Initialize audio components and their connections.\n   * @private @override\n   */\n  _initAudioComponents() {\n    const _this = this;\n\n    try {\n      verifyAudioContextFeatures(_this.audioCtx, [\"Gain\", \"StereoPanner\"]);\n\n      this.audioComponents = {\n        inputGain: _this.input,\n        panner: _this.audioCtx.createStereoPanner(),\n        outputGain: _this.output\n      };\n\n      this.audioComponents.inputGain.connect(this.audioComponents.panner);\n      this.audioComponents.panner.connect(this.audioComponents.outputGain);\n    \n    } catch(err) {\n      console.error(err);\n    }\n  }\n\n  /**\n   * Initialize and expose Audio Params.\n   * @private @override\n   */\n  _initAudioParams() {\n    this.inputGain = this.audioComponents.inputGain.gain;\n    this.outputGain = this.audioComponents.outputGain.gain;\n    this.pan = this.audioComponents.panner.pan;\n  }\n  \n  /* ============================================================================================= */\n  /*  GETTERS AND SETTERS\n  /* ============================================================================================= */ \n  \n  /**\n   * Get input gain value.\n   * @returns {number} - Input gain value.\n   */\n  getInputGain() {\n    return this.audioComponents.inputGain.gain.value;\n  }\n\n  /**\n   * Set input gain value.\n   * @param {number} newVal - The new input gain value.\n   */\n  setInputGain(newVal) {\n    this.audioComponents.inputGain.gain.value = newVal;\n  }\n\n  /**\n   * Get pan value.\n   * @returns {number} - Pan value.\n   */\n  getPan() {\n    return this.audioComponents.panner.pan.value;\n  }\n\n  /**\n   * Set pan value.\n   * @param {number} newVal - The new pan value.\n   */\n  setPan(newVal) {\n    this.audioComponents.panner.pan.value = newVal;\n  }\n\n  /**\n   * Get output gain value.\n   * @returns {number} - Output gain value.\n   */\n  getOutputGain() {\n    return this.audioComponents.outputGain.gain.value;\n  }\n\n  /**\n   * Set output gain value.\n   * @param {number} newVal - The new output gain value.\n   */\n  setOutputGain(newVal) {\n    this.audioComponents.outputGain.gain.value = newVal;\n  }\n}\n\nexport default ChannelStrip;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/channel-strip.js","import WidgetSvgNsMixin from \"./widget-mixin-svgns\";\nimport WidgetStateMixin from \"./widget-mixin-state\";\nimport WidgetOptionsMixin from \"./widget-mixin-options\";\nimport WidgetObserverMixin from \"./widget-mixin-observer\";\n\n'use strict';\n\n/**\n * Abstract base class representing an SVG widget that can be placed inside a DOM container.\n * @class\n * @abstract\n */\nclass Widget {\n\n  /**\n   * @constructor\n   * @mixes WidgetSvgNsMixin\n   * @mixes WidgetStateMixin\n   * @mixes WidgetOptionsMixin\n   * @mixes WidgetObserverMixin\n   * @param {DOM element} container - DOM element that will contain the widget.\n   * @param {object=} o - Options.\n   */\n  constructor(container, o) {\n    if (container === undefined || !(container instanceof Element)) {\n      throw new Error(\"widget requires a DOM element specifying its container as the first argument\");\n    }\n\n    this.container = container;\n\n    o = o || {};\n\n    this.svg = document.createElementNS(this.SVG_NS, \"svg\");\n    this.container.appendChild(this.svg);\n    this.svg.setAttribute(\"width\", this.container.getBoundingClientRect().width);\n    this.svg.setAttribute(\"height\", this.container.getBoundingClientRect().height);\n\n    /* Manifest of containers and namespaces */\n    this.o = {};                 // options namespace\n    this.svgEls = {};            // svg element namespace\n    this.handlers = {};          // mouse and touch event handler namespace\n    this.state = {};             // state namespace\n    this.stateConstraints = {};  // state constraints namespace\n    this.observers = [];         // observer callback container\n\n    this._initOptions(o);\n    this._initStateConstraints();\n    this._initState();\n    this._initSvgEls();\n    this._initHandlers();\n  }\n\n  /**\n   * Initialize the options\n   * @abstract\n   * @protected\n   */\n  _initOptions(o) {}\n\n  /**\n   * Initialize state constraints\n   * @abstract\n   * @protected\n   */\n  _initStateConstraints() {}\n\n  /**\n   * Initialize state\n   * @abstract\n   * @protected\n   */\n  _initState() {}\n\n  /**\n   * Initialize the svg elements.\n   * Each implementation of this method must end with calls to _appendSvgEls() and _update(),\n   * in that order, as shown in this template\n   * @abstract\n   * @protected\n   */\n  _initSvgEls() {}\n\n  /**\n   * Append the newly created svg elements to the svg container.\n   * This method should be called exctly once by each implementation of the _initSvgEls() method.\n   * @protected\n   */\n  _appendSvgEls() {\n    const _this = this;\n\n    Object.values(_this.svgEls).forEach(svgEl => {\n      appendSvgEls(svgEl);\n    });\n\n    function appendSvgEls(child) {\n      if (child instanceof Array) {\n        child.forEach(arrEl => appendSvgEls(arrEl));\n      } else {\n        _this.svg.appendChild(child);\n        child.setAttribute(\"shape-rendering\", \"geometricPrecision\");\n      }\n    }\n  }\n\n  /**\n   * Initialize mouse and touch event handlers\n   * @abstract\n   * @protected\n   */\n  _initHandlers() {}\n\n  /**\n   * Update (redraw) component based on state\n   * @abstract\n   * @protected\n   */\n  _update() {}\n\n  /* ===========================================================================\n  *  PUBLIC API\n  */\n\n  /**\n   * Get public representation of the state.\n   * @abstract\n   * @public\n   */\n  getVal() {}\n\n  /**\n   * Set the current state in a format specific to each widget.\n   * Same as setVal(), but will not cause an observer callback trigger.\n   * @abstract \n   * @public\n   */\n  setInternalVal(newVal) {}\n\n  /**\n   * Set the current state in a format specific to each widget.\n   * Same as setInternalVal(), but will cause an observer callback trigger.\n   * @abstract @public\n   */\n  setVal(newVal) {}\n\n  /**\n   * Get the current state.\n   * @abstract\n   * @public\n   * @returns {object} - Copy of this.state\n   */\n  getState() {}\n\n  /**\n   * Set the current state and redraw.\n   * @description If no new state argument is provided, will reassign old state, taking into account the stateConstraints.\n   * As opposed to setState(), setInternalState() does not trigger observer notification.\n   * Will use Widget.stateConstraints to constrain each state value to each constraints min, max, or enum\n   * @abstract\n   * @public\n   * @param {object} [newState] - The new state.\n   * @returns {boolean} A flag indicating whether the state has been changed.\n   */\n  setInternalState(newState) {}\n\n  /**\n   * Sets the current state and redraws.\n   * @description As opposed to setInternalState(), setState() will call the observer callback functions,\n   * so may lead to an infinate loop if an observer calls this method.\n   * @abstract\n   * @public\n   * @param {object} [newState] - The new state.\n   * @returns {boolean} A flag indicating whether the state has been changed.\n   */\n  setState(newState) {}\n  \n  /* ===========================================================================\n  *  HELPER METHODS\n  */\n\n  /** Helper method: get x relative to the container */\n  _getRelativeX(x) {\n    return x - this._getLeft();\n  }\n\n  /** Helper method: get y relative to the container */\n  _getRelativeY(y) {\n    return y - this._getTop();\n  }\n\n   /** Helper method: get the width of the svg container */\n   _getWidth() {\n     return this.svg.getBoundingClientRect().width;\n   }\n\n   /** Helper method: get the height of the svg container */\n   _getHeight() {\n     return this.svg.getBoundingClientRect().height;\n   }\n\n   /** Helper method: get the top edge position of the svg container */\n   _getTop() {\n     return this.svg.getBoundingClientRect().top;\n   }\n\n   /** Helper method: get the left edge position of the svg container */\n   _getLeft() {\n     return this.svg.getBoundingClientRect().left;\n   }\n}\n\nObject.assign(Widget.prototype, WidgetSvgNsMixin);\nObject.assign(Widget.prototype, WidgetStateMixin);\nObject.assign(Widget.prototype, WidgetOptionsMixin);\nObject.assign(Widget.prototype, WidgetObserverMixin);\n\nexport default Widget;\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget.js","import AudioModule from \"audio_modules/core/audio-module\";\nimport verifyAudioContextFeatures from \"audio_modules/core/verify-audio-context-features\";\n\n/**\n * Class representing an Envelope.\n * An envelope controls the evolution of the amplitude of a audio signal over time.\n * The Envelope class defines an envelope with attack and release of an arbitrary number of points\n * (as opposed to, for example, an ADSR envelope, which has 1 point each for attack, decay, and release).\n * This envelope will follow the attack path and sustain until release is triggered, at which point \n * it will floow the specified release path.\n * Attack and release paths are specified as 2D arrays in the form\n * [ [t(0), a(0)], [t(1), a(1)], ... [t(i), a(i)] ],\n * where t(i) specifies the time, in seconds,\n * and a(i) specifies the amplitude of the envelope at the vertex i.\n * @class\n */\nclass Envelope extends AudioModule {\n\n  /**\n   * @constructor\n   * @param {AudioContext} audioCtx\n   * @param {object} o - Options.\n   * @param {array} [o.attackEnvelope] - 2D array specifying the attack envelope.\n   * @param {array} [o.releaseEnvelope] - 2D array specifying the release envelope.\n   */\n  constructor(audioCtx, o) {\n    super(audioCtx);  \n  }\n\n  /* ============================================================================================= */\n  /*  INITIALIZATION METHODS\n  /* ============================================================================================= */\n\n  /**\n   * Initialize audio components and their connections.\n   * @private @override\n   */\n  _initAudioComponents() {\n    const _this = this;\n\n    try {\n      verifyAudioContextFeatures(_this.audioCtx, [\"Gain\"]);\n\n      this.audioComponents = {\n        envGain: _this.audioCtx.createGain()\n      }\n\n      _this.audioComponents.envGain.gain.value = 0;\n      _this.input.connect(_this.audioComponents.envGain);\n      _this.audioComponents.envGain.connect(_this.output);\n          \n    } catch(err) {\n      console.error(err);\n    }\n  }\n\n  /**\n   * Initialize options.\n   * @private @override\n   */\n  _initOptions(o) {\n\n    this.o = {\n      attackEnvelope: [[0, 0], [0.05, 1], [1, 1]],\n      releaseEnvelope: [[0, 1], [0.5, 1], [1, 0]]\n    }\n\n    super._initOptions(o);\n\n    this._normalizeAttackEnvelope();\n    this._normalizeReleaseEnvelope();\n  }\n\n  /* ============================================================================================= */\n  /*  GETTERS AND SETTERS\n  /* ============================================================================================= */ \n\n  /**\n   * Get the attack envelope.\n   * @returns {array} - 2D array representing the attack envelope.\n   */\n  getAttackEnvelope() {\n    return this.o.attackEnvelope;\n  }\n\n  /**\n   * Set the attack envelope.\n   * @param {array} newEnv - A 2D array representing the new envelope, where each value is of the\n   *                         form [t, a] where t is time in seconds, and a is amplitude in the range\n   *                         [0. - 1.]\n   * @returns {this} - A reference to the current envelope object for chaining.\n   */\n  setAttackEnvelope(newEnv) {\n    this.o.attackEnvelope = newEnv;\n    this._normalizeAttackEnvelope();\n    return this;\n  }\n\n  /**\n   * Get the release envelope.\n   * @returns {array} - 2D array representing the release envelope.\n   */\n  getReleaseEnvelope() {\n    return this.o.releaseEnvelope;\n  }\n\n  /**\n   * Set the release envelope.\n   * @param {array} newEnv - A 2D array representing the new envelope, where each value is of the\n   *                         form [t, a] where t is time in seconds, and a is amplitude in the range\n   *                         [0. - 1.] \n   * @returns {this} - A reference to the current envelope object for chaining.\n   */\n  setReleaseEnvelope(newEnv) {\n    this.o.releaseEnvelope = newEnv;\n    this._normalizeReleaseEnvelope();\n    return this;\n  }\n\n  /* ============================================================================================= */\n  /*  PUBLIC API\n  /* ============================================================================================= */ \n\n  /**\n   * Execute the attack envelope.\n   * @returns {Promise} - Promise that returns the envelope when the envelope expires.\n   */\n  attack() {\n    const _this = this;\n    const envGain = this.audioComponents.envGain;\n    const env = this.o.attackEnvelope;\n    \n    let a, t;\n\n    // cancel scheduled values in case another change is occuring\n    envGain.gain.cancelScheduledValues(this.audioCtx.currentTime);\n    envGain.gain.setValueAtTime(envGain.gain.value, this.audioCtx.currentTime);\n\n    const startTime = this.audioCtx.currentTime;\n\n    // ramp to each subsequent value\n    for (var i = 0; i < env.length; i++) {\n      a = env[i][1];\n      t = startTime + env[i][0];                                       \n      \n      if (t > this.audioCtx.currentTime) {\n        envGain.gain.linearRampToValueAtTime(a, t);\n      }\n    }\n\n    return new Promise((resolve, reject) => {\n      window.setTimeout(() => { \n        resolve(env); \n      }, env[env.length -1][0] * 1000);\n    });\n  }\n\n  /**\n   * Execute the release envelope.\n   * @returns {Promise} - Promise that returns the envelope when the envelope expires.\n   */\n  release() {\n    const _this = this;\n    const envGain = this.audioComponents.envGain;\n    const env = this.o.releaseEnvelope;\n    \n    let a, t;\n\n    // cancel scheduled values in case another change is occuring\n    envGain.gain.cancelScheduledValues(this.audioCtx.currentTime);\n    envGain.gain.setValueAtTime(envGain.gain.value, this.audioCtx.currentTime);\n\n    const startTime = this.audioCtx.currentTime;\n\n    // ramp to each subsequent value\n    for (var i = 0; i < env.length; i++) {\n      a = env[i][1];\n      t = startTime + env[i][0];                                       \n      \n      if (t > this.audioCtx.currentTime) {\n        envGain.gain.linearRampToValueAtTime(a, t);\n      }\n    }\n\n    return new Promise((resolve, reject) => {\n      window.setTimeout(() => { \n        resolve(env); \n      }, env[env.length -1][0] * 1000);\n    });\n  }\n  \n  /* ============================================================================================= */\n  /* INTERNAL FUNCTIONALITY AND HELPER METHODS\n  /* ============================================================================================= */ \n\n  /**\n   * Normalizes the attack envelope.\n   * Envelope points must be strictly positive (non-zero) and <= 1.\n   * @private\n   */\n  _normalizeAttackEnvelope() {\n    this.o.attackEnvelope.forEach(point => {\n      point[1] = (point[1] <= 0) ? 0.0001 : \n                  (point[1] > 1) ? 1 :\n                  point[1];\n    });\n  }\n\n  /**\n   * Normalizes the release envelope.\n   * Envelope points must be strictly positive (non-zero) and <= 1.\n   * @private\n   */\n  _normalizeReleaseEnvelope() {\n    this.o.releaseEnvelope.forEach(point => {\n      point[1] = (point[1] <= 0) ? 0.0001 : \n                  (point[1] > 1) ? 1 :\n                  point[1];\n    });\n  }\n}\n\nexport default Envelope;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/envelope.js","/**\n * Verifies that the given audio context has the requested features and attempts to shim features that are\n * missing.\n * @param {AudioContext} audioCtx - The Audio Context to check.\n * @param {array} features - Array of features to detect, listed as strings (i.e. \"Gain\", \"Oscillator\", \"Analyser\", etc.) \n */\nfunction VerifyAudioContextFeatures(audioCtx, features) {\n\n  features.forEach(feature => {\n\n    switch(feature) {\n\n      case \"Analyser\":\n        if (typeof audioCtx.createAnalyser !== \"function\") {\n          throw new Error(\"Required module AnalyserNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"AudioBuffer\":\n        if (typeof audioCtx.createBuffer !== \"function\") {\n          throw new Error(\"Required module AudioBufferNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n      \n      case \"AudioBufferSource\":\n        if (typeof audioCtx.createBufferSource !== \"function\") {\n          throw new Error(\"Required module AudioBufferSourceNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"BiquadFilter\":\n        if (typeof audioCtx.createBiquadFilter !== \"function\") {\n          throw new Error(\"Required module BiquadFilterNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"ChannelMerger\":\n        if (typeof audioCtx.createChannelMerger !== \"function\") {\n          throw new Error(\"Required module ChannelMergerNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n      \n      case \"ChannelSplitter\":\n        if (typeof audioCtx.createChannelSplitter !== \"function\") {\n          throw new Error(\"Required module ChannelSplitterNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"Convolver\":\n        if (typeof audioCtx.createConvolver !== \"function\") {\n          throw new Error(\"Required module ConvolverNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"Delay\":\n        if (typeof audioCtx.createDelay !== \"function\") {\n          throw new Error(\"Required module DelayNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"DynamicsCompressor\":\n        if (typeof audioCtx.createDynamicsCompressor !== \"function\") {\n          throw new Error(\"Required module DynamicsCompressorNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n       \n      case \"Gain\":\n        if (typeof audioCtx.createGain !== \"function\") {\n          throw new Error(\"Required module GainNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"IIRFilter\":\n        if (typeof audioCtx.createIIRFilter !== \"function\") {\n          throw new Error(\"Required module IIRFilterNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"Oscillator\":\n        if (typeof audioCtx.createOscillator !== \"function\") {\n          throw new Error(\"Required module OscillatorNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n        \n      case \"Panner\":\n        if (typeof audioCtx.createPannerr !== \"function\") {\n          throw new Error(\"Required module PannerNode is not available in provided Audio Context and could not be shimmed.\");\n        }\n        break;\n\n      case \"StereoPanner\":\n        if (typeof audioCtx.createStereoPanner !== \"function\") {\n          audioCtx.createStereoPanner = function() { return new StereoPannerShim(audioCtx); };\n        }\n        break;\n\n      default:\n        console.warn(\"A check for AudioContext feature \", feature, \"is being requested, but no matching check is implemented\");\n        break;\n    }\n  });\n}\n\nexport default VerifyAudioContextFeatures;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/core/verify-audio-context-features.js","/**\n * A collection of static utility methods for Audio Modules\n */\nlet AudioModuleUtil = {\n\n  /**\n   * Convert MIDI pitch to frequency.\n   * @param {number} midiPitch - The midi pitch number.\n   * @param {number} [a4tuning=440] - Tuning of the note A4 (midi pitch 69) in Hz, 440Hz by default.\n   * @return {number} freq - Frequency for the given MIDI pitch.\n   */\n  midiToFreq: function midiToFreq(midiPitch, a4tuning = 440) {\n    let freq = -1;\n\n    if (midiPitch !== -1) freq = Math.pow(2, (midiPitch - 69) / 12) * 440;\n    return freq;\n  },\n\n  /**\n   * Convert MIDI velocity (0 - 127) to gain (0. - 1.).\n   * @param {number} vel - MIDI velocity (0 - 127).\n   * @returns {number} - Gain (0. - 1.). \n   */\n  midiVelToGain: function midiVelToGain(vel) {\n    return (vel / 127);\n  },\n\n  /**\n   * Convert note name to MIDI pitch\n   * @param {string} noteName - The note name to convert\n   * @return {number} midiPitch - MIDI pitch for the given note name. Return -1 if invalid argument format.\n   */\n  noteNameToMidi: function (noteName) {\n    let noteNameFormat = /^([a-g]|[A-G])(#|b)?([0-9]|10)$/;\n\n    if(noteNameFormat.test(noteName) === false) {\n      console.log('AudioModuleUtil.noteNameToMidi: invalid note name format');\n      return -1;\n    } else {\n      let capture = noteNameFormat.exec(noteName);\n\n      let note = capture[1];\n      let accidental = capture[2];\n      let octave = capture[3];\n\n      let noteFundamentalMap = {\n        'A': 9,\n        'a': 9,\n        'B': 11,\n        'b': 11,\n        'C': 0,\n        'c': 0,\n        'D': 2,\n        'd': 2,\n        'E': 4,\n        'e': 4,\n        'F': 5,\n        'f': 5,\n        'G': 7,\n        'g': 7\n      };\n\n      let noteFundamental = noteFundamentalMap[note];\n\n      if(accidental === '#') {\n        noteFundamental++;\n      } else if (accidental === 'b') {\n        noteFundamental--;\n      }\n\n      let midiPitch = noteFundamental + (12 * octave);\n\n      return midiPitch;\n    }\n  },\n\n  /**\n   * Convert note name to frequency\n   * @param {string} noteName - The note name to convert\n   * @param {number} [a4tuning=440] - Tuning of the note A4 (midi pitch 69) in Hz, 440Hz by default.\n   * @return {number} freq - Frequency for the given MIDI pitch.\n   */\n  noteNameToFreq: function (noteName, a4tuning) {\n    a4tuning = a4tuning || 440;\n    return AudioModuleUtil.midiToFreq(AudioModuleUtil.noteNameToMidi(noteName), a4tuning);\n  }\n}\n\nexport default AudioModuleUtil;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/core/util.js","/**\n * Useful Math Utility functions\n */\nlet MathUtil = {\n\n  /**\n   * Returns the decimal precision of a number.\n   * @param {number} val - The value whose precision to check.\n   * @returns {number} - Number of decimal places.\n   */\n  getPrecision(val) {\n    let decStr = (''+val).split('.')[1];\n    return (decStr ? decStr.length : 0);\n  },\n\n  /**\n   * Round a number to specified decimal precision.\n   * Same as Number.prototype.toFixed, but does not use toString.\n   * @param {nubmer} val - Value to be rounded.\n   * @param {precision} val - \n   * @returns  \n   */\n  round: function round(val, precision) {\n    let factor = Math.pow(10, precision);\n    return Math.round(val * factor) / factor;\n  },\n\n  /**\n   * Quantize a value (set it to the closest value matching the interval)\n   * Note: result will not necessarily reflect the same number of places of\n   * as the q input due to floating point arithmetic.\n   * @param {number} val - Value to quantize.\n   * @param {number} q - The quantization interval.\n   * @param {number} precision - The decimal precision of the result.\n   * @returns {number} qVal - Quantized val.\n   */\n  quantize: function quantize(val, q, precision) {\n    let qVal;\n\n    if (q == 0) {\n      return 0;\n    } else if (q < 0) {\n      q = Math.abs(q);\n    }\n\n    // quantize\n    qVal = ~~(val / q) * q;\n\n    qVal = Math.abs(val - qVal) > (q / 2) ? \n            qVal > 0 ? \n              qVal + q\n            : qVal - q\n          : qVal;\n\n    if (precision !== undefined) {\n      qVal = MathUtil.round(qVal, precision);\n    }\n\n    return qVal;\n  },\n\n  /**\n   * Alias for quantize(val, q)\n   * @param {number} val - Value to quantize\n   * @param {number} q - The quantization interval\n   * @param {number} precision - The decimal precision of the result.\n   * @returns {number} qVal - Quantized val\n   */\n  q: function q(val, q, precision) {\n    return MathUtil.quantize(val, q, precision);\n  }\n};\n\nexport default MathUtil;\n\n\n// WEBPACK FOOTER //\n// ./src/util/util-math.js","/**\n * Shim the WebAudio connect and disconnect methods to allow WebAudio nodes to connect to Audio Modules.\n * @param {AudioContext} audioCtx - The Audio Context to shim.\n */\nfunction shimWebAudioConnect(audioCtx) {\n  let audioNodePrototype = Object.getPrototypeOf(Object.getPrototypeOf(audioCtx.createGain()));\n\n  // keep a reference to the original connect and disconnect methods as webAudioConnect and webAudioDisconnect\n  audioNodePrototype.webAudioConnect = audioNodePrototype.connect;\n  audioNodePrototype.webAudioDisconnect = audioNodePrototype.disconnect;\n\n  // if the destination object has an 'input' property, it is an Audio Module - connect to 'input'\n  // else it is an AudioNode - connect directly\n  audioNodePrototype.connect = function (destination, outputIndex, inputIndex) {\n    if (destination.isAudioModule === true) {\n      this.webAudioConnect(destination.input, outputIndex, inputIndex);\n    } else {\n      this.webAudioConnect(destination, outputIndex, inputIndex);\n    }\n  };\n\n  audioNodePrototype.disconnect = function (destination, outputIndex, inputIndex) {\n    if (destination.isAudioModule === true) {\n      this.webAudioDisconnect(destination.input, outputIndex, inputIndex);\n    } else {\n      this.webAudioDisconnect(destination, outputIndex, inputIndex);\n    }\n  };\n\n  // flag marking the webAudioConnect feature as shimmed\n  audioCtx.isWebAudioConnectShimmed = true;\n}\n\nexport default shimWebAudioConnect;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/core/shim-web-audio-connect.js","/**\n * Mixin specifying the xml namespace for SVG\n * @mixin\n */\nconst SVG_NS = { SVG_NS: \"http://www.w3.org/2000/svg\" };\n\nexport default SVG_NS;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget-mixin-svgns.js","import Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\n\n/**\n * Mixin for methods related to state management\n * @mixin\n */\nlet WidgetStateMixin = {\n\n  /**\n   * Get the current state.\n   *\n   * @public\n   * @returns {object} - Copy of this.state\n   */\n  getState: function getState() {\n    return Object.assign({}, this.state);\n  },\n\n  /**\n   * Set the current state and redraw.\n   *\n   * @description If no new state argument is provided, will reassign old state, taking into account the stateConstraints.\n   * As opposed to setState(), setInternalState() does not trigger observer notification.\n   * Will use Widget.stateConstraints to constrain each state value to each constraints min, max, or enum\n   *\n   * @protected\n   * @param {object=} newState - The new state.\n   * @return {boolean} isChanged - Returns a boolean indicating whether the state has been changed\n   */\n  setInternalState: function setInternalState(newState) {\n    const _this = this;\n    let isChanged = false;\n\n    newState = newState || this.getState();\n\n    Object.keys(newState).forEach(key => {\n      if (_this.state.hasOwnProperty(key) && _this.state[key] !== newState[key]) {\n        _this.state[key] = newState[key];\n        isChanged = true;\n      }\n    });\n\n    _this.stateConstraints.constrain(_this.state);\n    this._update();\n\n    return isChanged;\n  },\n\n  /**\n   * Set the current state and redraw.\n   *\n   * @description As opposed to setInternalState(), setState() will call the observer callback functions,\n   * so may lead to an infinate loop if an observer calls this method.\n   *\n   * @protected\n   * @param {object=} newState - The new state.\n   * @return {boolean} isChanged - Returns a boolean indicating whether the state has been changed\n   */\n  setState: function setState(newState) {\n    const _this = this;\n    let isChanged = false;\n\n    isChanged = this.setInternalState(newState);\n\n    this._notifyObservers();\n\n    return isChanged;\n  }\n};\n\nexport default WidgetStateMixin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget-mixin-state.js","/**\n * Mixin for methods related to options\n * @mixin\n */\nlet WidgetOptionsMixin = {\n\n  /**\n   * Initializes the options.\n   * @private\n   * @param {object} o - Options.\n   */\n  _initOptions: function _initOptions(o) {\n    const _this = this;\n    o = o || {};\n\n    Object.keys(o).forEach(key => {\n      if (_this.o.hasOwnProperty(key) && _this.o[key] !== o[key]) {\n        _this.o[key] = o[key];\n      }\n    });\n  },\n\n  /**\n   * Get the options object\n   * @public\n   * @return {object} this.o - Options\n   */\n  getOptions: function getOptions() {\n    return Object.assign({}, this.o);\n  },\n\n  /**\n   * Set the options\n   * Uses a diffing function, so only specified keys that have new values will be changed\n   * @public\n   * @param {object} o - options\n   * @return {boolean} isChanged - Returns a boolean indicating whether any option has been changed\n   */\n  setOptions: function setOptions(o) {\n    const _this = this;\n    o = o || {};\n    let isChanged = false;\n\n    Object.keys(o).forEach(key => {\n      if (_this.o.hasOwnProperty(key) && _this.o[key] !== o[key]) {\n        _this.o[key] = o[key];\n        isChanged = true;\n      }\n    });\n\n    if (isChanged) {\n      this.setState();\n    }\n\n    return isChanged;\n  }\n};\n\nexport default WidgetOptionsMixin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget-mixin-options.js","/**\n * Mixin for methods related to observer callback support\n * @mixin\n */\nlet WidgetObserverMixin = {\n\n  /**\n   * Register a new observer function that will recieve the state value every time the state is updated.\n   * @public\n   * @param {function} newObserver - The new observer function to be notified every time the state changes.\n   * @return {boolean} isChanged - Indicates whether an observer was added.\n   */\n  addObserver: function addObserver(newObserver) {\n    let isChanged = false;\n\n    if (!(this.observers.find(observer => observer === newObserver))) {\n      this.observers.push(newObserver);\n      isChanged = true;\n    }\n\n    return isChanged;\n  },\n\n  /**\n   * Remove an observer function from being notified when the state changes.\n   * @public\n   * @param {function} targetObserver - The observer function to be removed.\n   * @return {boolean} isChanged - Indicates whether an observer has been removed\n   */\n  removeObserver: function removeObserver(targetObserver) {\n    const _this = this;\n    let isChanged = false;\n\n    this.observers.forEach((observer, idx) => {\n      if (observer === targetObserver) {\n        _this.observers.splice(idx, 1);\n        isChanged = true;\n      }\n    });\n\n    return isChanged;\n  },\n\n  /**\n   * Alias for addObserver. Registers a listener (observer) function.\n   * @param {function} newListener - The new listener (observer) function to be notified every time the state changes.\n   * @return {boolean} isChanged - Indicates whether an observer was added.\n   */\n  addListener: function addListener(newListener) {\n    this.addObserver(newListener);\n  },\n\n  /**\n   * Alias for removeObserver. Removes a listener (observer) function.\n   * @param {function} targetListener - The listener (observer) function to be removed.\n   * @return {boolean} isChanged - Indicates whether an observer has been removed\n   */\n  removeListener: function removeListener(targetListener) {\n    this.removeObserver(targetListener);\n  },\n\n  /**\n   * Notify all observers of new state\n   * @protected\n   */\n  _notifyObservers() {\n    const _this = this;\n    this.observers.forEach(observer => observer(_this.getVal()));\n  }\n};\n\nexport default WidgetObserverMixin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget-mixin-observer.js","import AudioPatch from './audio-patch';\nimport AudioModuleUtil from 'audio_modules/core/util';\nimport shimWebAudioConnect from 'audio_modules/core/shim-web-audio-connect';\nimport AdditiveSynth from 'audio_modules/AdditiveSynth';\nimport ChannelStrip from 'audio_modules/channel-strip';\nimport Envelope from 'audio_modules/envelope';\nimport StereoFeedbackDelay from 'audio_modules/StereoFeedbackDelay';\nimport OscillatorVoice from 'audio_modules/oscillator-voice';\n\n/**\n * Class representing an Audio Module Manager.\n * Audio Module Managers facilitate creating and managing Audio Patches.\n * @class\n */\nclass AudioModuleManager {\n  \n  /**\n   * @constructor\n   * @param {AudioContext} [audioCtx] - The Audio Context to use. If this argument is not provided,\n   *                                    a new Audio Context will be created and associated with this\n   *                                    Audio Module Manager.\n   */\n  constructor(audioCtx) {\n    this.AUDIO_CTX = (typeof audioCtx === \"undefined\") ? new AudioContext() : audioCtx;\n\n    // Shim the WebAudio connect and disconnect methods so that we can connect and\n    // disconnect AudioModules the same way as WebAudio AudioNodes and use AudioNodes\n    // interchangably with AudioModules\n    shimWebAudioConnect(this.AUDIO_CTX);\n\n    this.destination = this.AUDIO_CTX.destination;\n  }\n\n  /**\n   * Return the Audio Context associated with this Module Manager.\n   * @returns {AudioContext} - The Audio Context associated with this Module Manager.\n   */\n  getContext() {\n    return this.AUDIO_CTX;\n  }  \n  \n  /**\n  * Return the Audio Context destination associated with with this Module Manager.\n  * @returns {AudioNode} - The audio destination node associated with this Module Manager.\n  */\n getDestination() {\n   return this.AUDIO_CTX.destination;\n }\n\n  /**\n   * An audio patch is a collection of connected audio modules that form a meaningful unit\n   * @param {object} initObj - An object specifying the initialization parameters,\n   *                            containing two properties: modules, and connectionPaths\n   * @param {object} initObj.modules - An object representing the named audio modules used in this patch\n   * @param {array} initObj.connectionPaths - An 2D array of strings, where each string represents the name of\n   *                              an Audio Module (matching the way it is named in the 'modules' object),\n   *                              and the sequence of these names represents an audio path.\n   *                              For example, the following is one possibility:\n   *                                [[\"synth1\", \"delay\", \"reverb\", \"output\"],\n   *                                [\"synth2\", \"reverb\"]]\n   *                              This connection specifies two connection paths:\n   *                                synth1 -> delay -> reverb -> output\n   *                              And the second, where synth2 is connected to the same reverb used\n   *                              in the first paths\n   *                                synth2 -> reverb -> output\n   *                              Note that since the reverb is already connected to the output by the\n   *                              first path, it does not need to be redundantly connected in the second path\n   * @return {object} moduleMapObj - an object used as a map where keys are strings used to name each module,\n   *                                 and values are the module objects themselves\n   */\n  createAudioPatch(initObj) {\n    const _this = this;\n\n    initObj = initObj || {};\n\n    // moduleMap will store the modules created keyed by the names given to them\n    // keys are arbitrary strings used as names for each module\n    // values are the module objects themselves\n    let moduleMapObj = {};\n\n    try {\n      // try to create the modules requested in the initObj and store them in moduleMapObj\n      if (typeof initObj.modules !== \"object\") throw (\"Exception in initAudioPatch: no audio modules provided in initiation object\");\n\n      Object.keys(initObj.modules).forEach(audioModuleName => {\n        let audioModuleSpec = initObj.modules[audioModuleName];\n\n        // if the audio module type is specified as a string, create the corresponding modules\n        if (typeof audioModuleSpec === \"string\") {\n          // placeholder to use when creating the new module\n          let newAudioModule = null;\n\n          // use name in lowercase with whitespace removed\n          switch (audioModuleSpec.toLowerCase().replace(/[\\W-]+/g, \"\")) {\n            case \"additivesynth\":\n              newAudioModule = _this.createAdditiveSynth();\n              break;\n\n            case \"biquadfilter\":\n            case \"filter\":\n              newAudioModule = _this.createBiquadFilter();\n              break;\n\n            case \"channelstrip\":\n              newAudioModule = _this.createChannelStrip();\n              break;\n\n            case \"destination\":\n              newAudioModule = _this.createDestination()\n              break;\n\n            case \"envelope\":\n              newAudioModule = _this.createBiquadFilter();\n              break;\n\n            case \"oscillator\":\n              newAudioModule = _this.createOscillator();\n              break;\n\n            case \"oscillatorvoice\":\n              newAudioModule = _this.createOscillatorVoice();\n              break;\n\n            case \"stereofeedbackdelay\":\n            case \"delay\":\n              newAudioModule = _this.createStereoFeedbackDelay();\n              break;\n\n            default:\n              throw (\"Exception in initAudioPatch: no such module \" + audioModuleSpec);\n              break;\n          }\n\n          moduleMapObj[audioModuleName] = newAudioModule;\n        }\n      });\n\n      // try to connect the modules\n      if (typeof initObj.connections === \"object\" && Array.isArray(initObj.connections)) {\n        initObj.connections.forEach(connectionPath => {\n          for (let i = 0; i < connectionPath.length - 1; i++) {\n            let currentModule = moduleMapObj[connectionPath[i]];\n            let nextModule = moduleMapObj[connectionPath[i + 1]];\n            currentModule.connect(nextModule);\n          }\n        });\n      }\n    }\n    catch (e) {\n      console.log(e);\n      moduleMapObj = null;\n    }\n\n    return new AudioPatch(moduleMapObj, _this.AUDIO_CTX, _this);\n  }\n\n  /**\n   * Create an Additive Synth Audio Module\n   */\n  createAdditiveSynth(o) {\n    o = o || {};\n    return new AdditiveSynth(this.AUDIO_CTX, o);\n  }\n\n  /**\n   * Create a Biquad Filter Audio Module\n   */\n  createBiquadFilter() {\n    return this.AUDIO_CTX.createBiquadFilter();\n  }\n\n  /**\n   * Create an Oscillator\n   */\n  createOscillator() {\n    return this.AUDIO_CTX.createOscillator();\n  }\n\n  /**\n   * Create an Oscillator Voice\n   */\n  createOscillatorVoice(o) {\n    o = o || {};\n    return new OscillatorVoice(this.AUDIO_CTX, o);\n  }\n\n  /**\n   * Create an Gain\n   */\n  createGain() {\n    return this.AUDIO_CTX.createGain();\n  }\n\n  /**\n   * Create a Channel Strip Audio Module\n   */\n  createChannelStrip(o) {\n    o = o || {};\n    return new ChannelStrip(this.AUDIO_CTX, o);\n  }\n\n  /**\n   * Create a destination node\n   */\n  createDestination() {\n    return this.AUDIO_CTX.destination;\n  }\n\n  /**\n   * Create an Envelope Audio Module\n   */\n  createEnvelope(o) {\n    o = o || {};\n    return new Envelope(this.AUDIO_CTX, o);\n  }\n\n  /**\n   * Create a Stereo Feedback Delay Audio Module\n   */\n  createStereoFeedbackDelay(o) {\n    o = o || {};\n    return new StereoFeedbackDelay(this.AUDIO_CTX, o);\n  }\n}\n\nexport default AudioModuleManager;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/core/audio-module-manager.js","/**\n * Class representing an Audio Patch created by an Audio Module Manager.\n * @class \n */\nclass AudioPatch {\n\n  /**\n   * @constructor\n   * @param {Object} moduleMap\n   * @param {AudioContext} audioCtx\n   * @param {AudioModuleManager} audioModuleManager\n   */\n  constructor(moduleMap, audioCtx, audioModuleManager) {\n    this.MODULE_MAP = moduleMap;\n    this.AUDIO_CTX = audioCtx;\n    this.AUDIO_MODULE_MANAGER = audioModuleManager;\n    \n    // a more consise alias\n    this.modules = this.MODULE_MAP;\n  }\n\n  /**\n   * Returns the Audio Context\n   * @returns {AudioContext}\n   */\n  getAudioContext() {\n    return this.AUDIO_CTX;\n  }\n\n  /**\n   * Alias for {getAudioContext}.\n   * @returns {AudioContext}\n   */\n  getAudioCtx() {\n    return this.getAudioContext();\n  }\n\n  /**\n   * Returns the module map.\n   * @returns {object} - Object representing the module map.\n   */\n  getModuleMap() {\n    return this.MODULE_MAP;\n  }\n\n  /**\n   * Alias for {getModuleMap}. Returns the module map.\n   * @returns {object} - Object representing the module map.\n   */\n  modules() {\n    return this.MODULE_MAP;\n  }\n\n  /**\n   * Returns the Audio Module Manager associated with this patch.\n   * @returns {AudioModuleManager} - The Audio Module Manager associated with this patch.\n   */\n  getAudioModuleManager() {\n    return this.AUDIO_MODULE_MANAGER;\n  }\n}\n\nexport default AudioPatch;\n\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/core/audio-patch.js","import AdditiveSynthVoice from './AdditiveSynthVoice';\nimport ChannelStrip from './channel-strip';\nimport AudioModuleUtil from './core/util';\n\nclass AdditiveSynth {\n  constructor (audioCtx, o) {\n      o = o || {};\n\n      this._audioCtx = audioCtx;\n\n      var numVoices = o.numVoices || 16;\n      this._numOvertones = o.numOvertones || 20;\n\n      this._voices = [];\n      this._availableVoices = [];\n      this._busyVoices = []; // { voiceNum: {number}, pitch: {number} }\n      this._channelStrip = new ChannelStrip(this._audioCtx);\n\n      for (var i = 0; i < numVoices; i++) {\n        this._voices.push(new AdditiveSynthVoice(this._audioCtx, { numOvertones: this._numOvertones }));\n        this._voices[i].connect(this._channelStrip.input);\n        this._availableVoices.push(i);\n      }\n\n      this.output = this._channelStrip.output;\n      this._audioModuleOutput = this.output;\n  }\n\n  /* =================== */\n  /* --- Audio setup --- */\n  /* =================== */\n\n  /**\n   * Connect to another AudioNode or AudioModule\n   */\n  connect (destination) {\n    // if destination has an input property, connect to it (destination is an AudioModule)\n    if (typeof destination.input === \"object\") {\n      this.output.connect(destination.input);\n    }\n    // else destination is an AudioNode and can be connected to directly\n    else {\n      this.output.connect(destination);\n    }\n  }\n\n  /**\n   * Disconnect from an AudioNode or AudioModule\n   */\n  disconnect (destination) {\n    // if destination has an input property, disconnect from it (destination is an AudioModule)\n    if (typeof destination.input === \"object\") {\n      this.output.disconnect(destination.input);\n    // else destination is an AudioNode and can be disconnected from directly\n    } else {\n      this.output.disconnect(destination);\n    }\n  }\n\n  /* =========================================================================================== */\n  /* GETTERS AND SETTERS                                                                         */\n  /* =========================================================================================== */\n\n  /** Number of voices */\n  get numVoices () {\n    return this._voices.length;\n  }\n  set numVoices (newNumVoices) {\n    const _this = this;\n\n    // if the new number of voices is more than previous number, we add voices\n    if (newNumVoices > this.numVoices) {\n      for (var i = this.numVoices; i < newNumVoices; i++) {\n        this._voices.push(new AdditiveSynthVoice(this._audioCtx, { numOvertones: this._numOvertones }));\n        this._voices[i].connect(this._channelStrip.input);\n        this._availableVoices.push(i);\n      }\n\n    // if the new number is less than previous, remove voices\n    } else if (newNumVoices < this.numVoices) {\n      let numVoicesToDelete = this.numVoices - newNumVoices;\n      let numAvailableVoices = this._availableVoices.length;\n\n      // if the number of voices to delete is less then or equal to the number of available (inactive) voices, delete these voices\n      if (numVoicesToDelete <= numAvailableVoices) {\n        deleteAvailableVoices(numVoicesToDelete);\n      }\n\n      // else delete all available (inactive) voices and also required number of busy voices\n      else {\n        let numBusyVoicesToDelete = numVoicesToDelete - numAvailableVoices;\n\n        deleteAvailableVoices(numAvailableVoices);\n        deleteBusyVoices(numBusyVoicesToDelete);\n      }\n\n      function deleteAvailableVoices (numVoicesToDelete) {\n        for(let i = 0; i < numVoicesToDelete; i++) {\n          let voiceToDelete = _this._availableVoices[i];\n\n          _this._voices.splice(voiceToDelete, 1);\n          _this._availableVoices.splice(i, 1);\n\n          // remap the available and busy voices because we modified the voices stack\n          _this._availableVoices = _this._availableVoices.map(voice => {\n            return (voice > voiceToDelete) ? voice - 1 : voice;\n          });\n          _this._busyVoices = _this._busyVoices.map(voice => {\n            return {\n              voiceNum: (voice.voiceNum > voiceToDelete) ? voice.voiceNum - 1 : voice.voiceNum,\n              pitch: voice.pitch\n            };\n          });\n        }\n      }\n\n      function deleteBusyVoices (numBusyVoicesToDelete) {\n        // delete the required number of busy voices\n        for (let i = 0; i < numBusyVoicesToDelete; i++) {\n          let voiceToDelete = _this._busyVoices[i].voiceNum;\n\n          _this.releaseVoice(voiceToDelete);\n          _this._voices.splice(voiceToDelete, 1);\n          _this._busyVoices.splice(i, 1);\n\n          // remap the busy voices pointer stack because we modified the voices stack\n          _this._busyVoices = _this._busyVoices.map(voice => {\n            return {\n              voiceNum: (voice.voiceNum > voiceToDelete) ? voice.voiceNum - 1 : voice.voiceNum,\n              pitch: voice.pitch\n            };\n          });\n        }\n      }\n    }\n    console.log('newNumVoices: ' + this.numVoices);\n    return this;\n  }\n  setNumVoices (newNumVoices) {\n    this.numVoices = newNumVoices;\n  }\n\n  /** Number of overtones */\n  get numOvertones () {\n    return this._numOvertones;\n  }\n  set numOvertones (newNumOvertones) {\n    this._voices.forEach(voice => {\n      voice.numOvertones = newNumOvertones;\n    });\n    this._numOvertones = newNumOvertones;\n    return this;\n  }\n  setNumOvertones (newNumOvertones) {\n    this.numOvertones = newNumOvertones;\n  }\n\n  /** Gain */\n  get gain () {\n    return this._channelStrip.outputGain;\n  }\n  set gain (newGain) {\n    this._channelStrip.outputGain = newGain;\n    return this;\n  }\n  setGain (newGain) {\n    this.gain = newGain;\n  }\n\n  /** Pan */\n  get pan () {\n    return this._channelStrip.pan;\n  }\n  set pan (newPan) {\n    this._channelStrip.pan = newPan;\n    return this;\n  }\n  setPan (newPan) {\n    this.pan = newPan;\n  }\n\n  /** Get overtone amplitude */\n  getOvertoneAmplitude (voiceNum, otNum) {\n    this._voices[voiceNum].getOvertoneAmplitude(otNum);\n    return this;\n  }\n\n  /** Overtone amplitude */\n  setOvertoneAmplitude (voiceNum, otNum, newAmp) {\n    this._voices[voiceNum].setOvertoneAmplitude(otNum, newAmp);\n    return this;\n  }\n\n  /* ========================= */\n  /* --- Envelope controls --- */\n  /* ========================= */\n\n  /** Attack envelope */\n  set attackEnvelope (newEnv) {\n    this._voices.forEach(voice => {\n      voice.attackEnvelope = newEnv;\n    });\n  }\n\n  /** Release envelope */\n  set releaseEnvelope (newEnv) {\n    this._voices.forEach(voice => {\n      voice.releaseEnvelope = newEnv;\n    });\n  }\n\n  /** Set the attack envelope for an overtone\n   *  @param {number} otNum - Number of overtone for which to set envelope\n   *  @param {array} newEnv - 2D array representing the new envelope\n   */\n  setOvertoneAttackEnvelope (otNum, newEnv) {\n    this._voices.forEach(voice => {\n      voice.setOvertoneAttackEnvelope(otNum, newEnv);\n    });\n    return this;\n  }\n\n  /** Set the release envelope for an overtone\n   *  @param {number} otNum - Number of overtone for which to set envelope\n   *  @param {array} newEnv - 2D array representing the new envelope\n   */\n  setOvertoneReleaseEnvelope (otNum, newEnv) {\n    this._voices.forEach(voice => {\n      voice.setOvertoneReleaseEnvelope(otNum, newEnv);\n    });\n    return this;\n  }\n\n  /**\n   * Play a note using the current attack envelope\n   * @param {(number|string)} note - MIDI pitch value or note name (i.e. A0 or F#8)\n   */\n  playNote (note) {\n    var noteNameFormat = /^([a-g]|[A-G])(#|b)?([0-9]|10)$/;\n    var selectedVoice = -1;\n    var freq = -1;\n\n    // check for correct note format and convert to freq\n    if (typeof note === 'number'\n        && note >= 0 && note <= 127) {\n      freq = AudioModuleUtil.midiToFreq(note);\n    } else if (typeof note === 'string'\n               && noteNameFormat.test(note) === true) {\n      note = AudioModuleUtil.noteNameToMidi(note); // convert to MIDI so we can keep track of active note in _busyVoices\n      freq = AudioModuleUtil.midiToFreq(note);\n    }\n\n    // if the correct format for note was received\n    if (freq !== -1) {\n      //pick a voice\n      if (this._availableVoices.length > 0) {\n        selectedVoice = this._availableVoices.shift();\n      } else {\n        selectedVoice = this._busyVoices.shift().voiceNum;\n        this.releaseVoice(selectedVoice);\n      }\n      this._busyVoices.push({ voiceNum: selectedVoice, note: note });\n\n      this.attackVoice(selectedVoice, freq);\n    }\n  }\n\n  /**\n   * Release a currently playing note\n   * @param {(number|string)} note - MIDI pitch value or note name (i.e. A0 or F#8)\n   */\n  releaseNote (note) {\n    var noteNameFormat = /^([a-g]|[A-G])(#|b)?([0-9]|10)$/;\n    var selectedVoice = -1;\n\n    // check for correct note format and convert to freq\n    if (typeof note === 'number'\n        && note >= 0 && note <= 127) {\n    } else if (typeof note === 'string'\n               && noteNameFormat.test(note) === true) {\n      note = AudioModuleUtil.noteNameToMidi(note);\n    } else {\n      note = -1;\n    }\n\n    if (note !== -1) {\n      var selectedBusyNodeIndex = this._busyVoices.findIndex((busyVoice) => {\n        return busyVoice.note === note;\n      });\n\n      if (selectedBusyNodeIndex !== -1) {\n        selectedVoice = this._busyVoices[selectedBusyNodeIndex].voiceNum;\n\n        this._availableVoices.push(selectedVoice);\n        this._busyVoices.splice(selectedBusyNodeIndex, 1);\n      }\n    }\n\n    if (selectedVoice !== -1) {\n      this.releaseVoice(selectedVoice);\n    } else return this;\n  }\n\n  /**\n   * Execute the attack for a given voice with a given frequency\n   **/\n  attackVoice (voiceNum, freq) {\n    this._voices[voiceNum].setFrequency(freq);\n    this._voices[voiceNum].attack();\n  }\n\n  /**\n   * Execute the release for a given voice\n   **/\n  releaseVoice (voiceNum) {\n    this._voices[voiceNum].release();\n  }\n}\n\nexport default AdditiveSynth\n\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/AdditiveSynth.js","import ChannelStrip from './channel-strip';\nimport Envelope from './envelope';\nimport Overtone from './Overtone';\n\nclass AdditiveSynthVoice {\n  constructor (audioCtx, o) {\n    o = o || {};\n\n    this._audioCtx = audioCtx;\n\n    this._channelStrip = new ChannelStrip(this._audioCtx);\n    this._envelope = new Envelope(this._audioCtx);\n\n    var numOvertones = o.numOvertones || o.numberOfOvertones || 20;\n    this._overtones = [];\n    for (var i = 0; i < numOvertones; i++) {\n      this._overtones.push(new Overtone(this._audioCtx));\n      this._overtones[i].connect(this._envelope.input);\n      this._envelope.connect(this._channelStrip.input);\n      this._overtones[i].gain = 1 / numOvertones;\n    }\n\n    this.output = this._channelStrip.output;\n    this._audioModuleOutput = this.output;\n\n    // this.frequency = o.frequency || o.freq || 440;\n    // this.pan = o.pan || 0; // -1: hard left, 1: hard right\n    // this.gain = o.gain || 1;\n  }\n\n  /* =================== */\n  /* --- Audio setup --- */\n  /* =================== */\n\n  /**\n   * Connect to another AudioNode or AudioModule\n   */\n  connect (destination) {\n    // if destination has an input property, connect to it (destination is an AudioModule)\n    if (typeof destination.input === \"object\") {\n      this.output.connect(destination.input);\n    }\n    // else destination is an AudioNode and can be connected to directly\n    else {\n      this.output.connect(destination);\n    }\n  }\n\n  /**\n   * Disconnect from an AudioNode or AudioModule\n   */\n  disconnect (destination) {\n    // if destination has an input property, disconnect from it (destination is an AudioModule)\n    if (typeof destination.input === \"object\") {\n      this.output.disconnect(destination.input);\n    // else destination is an AudioNode and can be disconnected from directly\n    } else {\n      this.output.disconnect(destination);\n    }\n  }\n\n  /* =========================== */\n  /* --- Getters and setters --- */\n  /* =========================== */\n\n  /** Options */\n  get options () {\n    return {\n      numOvertones: this.numOvertones,\n      frequency: this.frequency,\n      gain: this.gain,\n      pan: this.pan\n    }\n  }\n  set options (o) {\n    o = o || {};\n\n    if (o.numOvertones) this.numOvertones = o.numOvertones;\n    if (o.frequency) this.frequency = o.frequency;\n    if (o.gain) this.gain = o.gain;\n    if (o.pan) this.pan = o.pan;\n\n    return this;\n  }\n  setOptions (o) {\n    o = o || {};\n    this.options = o;\n  }\n\n  /** Number of overtones (including the fundamental) */\n  get numOvertones () {\n    return this._overtones.length;\n  }\n  set numOvertones (newNumOvertones) {\n    if (newNumOvertones > this.numOvertones) {\n      var fundFreq = this.frequency;\n      for (var i = this.numOvertones; i < newNumOvertones && (i + 1) * fundFreq < this._audioCtx.sampleRate / 2; i++) {\n        this._overtones.push(new Overtone(this._audioCtx));\n        this._overtones[i].frequency = (i + 1) * fundFreq;\n        this._overtones[i].gain = 1 / newNumOvertones;\n      }\n    } else if (newNumOvertones < this.numOvertones) {\n      for (var i = this.numOvertones; i > this.newNumOvertones; i--) {\n        this._overtones.pop();\n        this._overtones[i].gain = 1 / newNumOvertones;\n      }\n    }\n    return this;\n  }\n  setNumOvertones (newNumOvertones) {\n    this.numOvertones = newNumOvertones;\n  }\n\n  /** Fundamental frequency */\n  get frequency () {\n    return this._overtones[0].frequency;\n  }\n  set frequency (newFreq) {\n    var freqCeil = this._audioCtx.sampleRate / 2;\n    var numOvertones = this.numOvertones;\n\n    for (var i = this.numOvertones - 1; i >= 0; i--) {\n      if ( (i + 1) * newFreq < freqCeil ) {\n        this._overtones[i].frequency = (i + 1) * newFreq;\n        this._overtones[i].gain = 1 / numOvertones;\n      } else {\n        this._overtones[i].gain = 0;\n      }\n    }\n    return this;\n  }\n  setFrequency (newFreq) {\n    this.frequency = newFreq;\n  }\n\n  /** Gain */\n  get gain () {\n    return this._channelStrip.outputGain;\n  }\n  set gain (newGain) {\n    this._channelStrip.outputGain = newGain;\n    return this;\n  }\n  setGain (newGain) {\n    this.gain = newGain;\n  }\n\n  /** Pan */\n  get pan () {\n    return this._channelStrip.pan;\n  }\n  set pan (newPan) {\n    this._channelStrip.pan = newPan;\n    return this;\n  }\n  setPan (newPan) {\n    this.pan = newPan;\n  }\n\n  /** Get overtone amplitude\n   * @param {number} otNum - Overtone number (0 for the fundamental).\n   */\n  getOvertoneAmplitude (otNum) {\n    return this._overtones[otNum].amplitude;\n  }\n  /** Set overtone amplitude\n   * @param {number} otNum - Overtone number (0 for the fundamental).\n   * @param {number} newAmp - New amplitude (useful range: 0.0 - 1.0).\n   */\n  setOvertoneAmplitude (otNum, newAmp) {\n    const _this = this;\n\n    try {\n      if (this._overtones[otNum] !== undefined) {\n        this._overtones[otNum].amplitude = newAmp;\n      } else {\n        throw (\"Illegal overtone number\");\n      }\n    } catch (e) {\n      console.log(e);\n    }\n\n    return this;\n  }\n\n  /** Set overtone amplitudes by a formula function\n   * @param {function} func - The function specifying the amplitude of each overtone number n.\n   */\n  setOvertoneAmplitudesByFormula (func) {\n    for (var n = this.numOvertones - 1; n >= 0; n--) {\n      this.setOvertoneAmplitude(n, func(n + 1));\n    }\n    return this;\n  }\n\n  /** Attack envelope */\n  get attackEnvelope () {\n    return this._envelope.attackEnvelope;\n  }\n  set attackEnvelope (newEnv) {\n    this._envelope.attackEnvelope = newEnv;\n    return this;\n  }\n  setAttackEnvelope (newEnv) {\n    this.attackEnvelope = newEnv;\n  }\n\n  /** Release envelope */\n  get releaseEnvelope () {\n    return this._envelope.releaseEnvelope;\n  }\n  set releaseEnvelope (newEnv) {\n    this._envelope.releaseEnvelope = newEnv;\n    return this;\n  }\n  setReleaseEnvelope (newEnv) {\n    this.releaseEnvelope = newEnv;\n  }\n\n  /** Set the attack envelope for an overtone\n   *  @param {number} otNum - Number of overtone for which to set envelope\n   *  @param {array} newEnv - 2D array representing the new envelope\n   */\n  setOvertoneAttackEnvelope (otNum, newEnv) {\n    this._overtones[otNum].attackEnvelope = newEnv;\n    return this;\n  }\n\n  /** Set the release envelope for an overtone\n   *  @param {number} otNum - Number of overtone for which to set envelope\n   *  @param {array} newEnv - 2D array representing the new envelope\n   */\n  setOvertoneReleaseEnvelope (otNum, newEnv) {\n    this._overtones[otNum].releaseEnvelope = newEnv;\n    return this;\n  }\n\n  /* ========================= */\n  /* --- Envelope controls --- */\n  /* ========================= */\n\n  /**\n   * Execute the attack envelope.\n   * Individual envelopes are executed for each overtone, and the envelope for this voice is executed.\n   */\n  attack (o) {\n    if (o) this.options = o;\n\n    for (var i = this.numOvertones - 1; i >= 0; i--) {\n      this._overtones[i].attack();\n    }\n    this._envelope.attack();\n  }\n\n  /**\n   * Execute the release envelope\n   * Individual envelopes are executed for each overtone, and the envelope for this voice is executed.\n   */\n  release () {\n    for (var i = this.numOvertones - 1; i >= 0; i--) {\n      this._overtones[i].release();\n    }\n    this._envelope.release();\n  }\n}\n\nexport default AdditiveSynthVoice\n\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/AdditiveSynthVoice.js","/**\n * Mixin for methods related to options\n * @mixin\n */\nlet AudioModuleOptionsMixin = {\n  \n    /**\n     * Initializes the options.\n     * @private\n     * @param {object} o - Options.\n     */\n    _initOptions: function _initOptions(o) {\n      const _this = this;\n      o = o || {};\n  \n      Object.keys(o).forEach(key => {\n        if (_this.o.hasOwnProperty(key) && _this.o[key] !== o[key]) {\n          _this.o[key] = o[key];\n        }\n      });\n    },\n  \n    /**\n     * Get the options object\n     * @public\n     * @return {object} this.o - Options\n     */\n    getOptions: function getOptions() {\n      return Object.assign({}, this.o);\n    },\n  \n    /**\n     * Set the options\n     * Uses a diffing function, so only specified keys that have new values will be changed\n     * @public\n     * @param {object} o - options\n     * @return {boolean} isChanged - Returns a boolean indicating whether any option has been changed\n     */\n    setOptions: function setOptions(o) {\n      const _this = this;\n      o = o || {};\n      let isChanged = false;\n  \n      Object.keys(o).forEach(key => {\n        if (_this.o.hasOwnProperty(key) && _this.o[key] !== o[key]) {\n          _this.o[key] = o[key];\n          isChanged = true;\n        }\n      });\n  \n      if (isChanged) {\n        this.setState();\n      }\n  \n      return isChanged;\n    }\n  };\n  \n  export default AudioModuleOptionsMixin;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/core/audio-module-options-mixin.js","import AudioModule from \"./core/audio-module\";\nimport ChannelStrip from './channel-strip';\nimport Envelope from './envelope';\n\n/**\n * \n */\nclass Oscillator extends AudioModule {\n  constructor (audioCtx, o) {\n    super(audioCtx)\n\n    o = o || {};\n\n    this._audioCtx = audioCtx;\n\n    this._oscillator = this._audioCtx.createOscillator();\n    this._envelope = new Envelope(this._audioCtx);\n    this._channelStrip = new ChannelStrip(this._audioCtx);\n\n    this._oscillator.connect(this._envelope.input);\n    this._envelope.connect(this._channelStrip.input);\n\n    this._oscillator.start();\n\n    this.output = this._channelStrip.output;\n    this._audioModuleOutput = this.output;\n\n    // this.frequency = o.frequency || 440;\n    // this.pan = o.pan || 1;\n    // this.amplitude = o.amplitude || 1;\n  }\n\n  /* =========================== */\n  /* --- Getters and setters --- */\n  /* =========================== */\n\n  /** Oscillator frequency */\n  get frequency () {\n    return this._oscillator.frequency;\n  }\n  set frequency (newFreq) {\n    var curTime = this._audioCtx.currentTime;\n    this._oscillator.frequency.value = newFreq;\n    return this;\n  }\n\n  /** Pan */\n  get pan () {\n    return this._channelStrip.pan;\n  }\n  set pan (newPan) {\n    this._channelStrip.pan = newPan;\n    return this;\n  }\n\n  /** Overtone amplitude */\n  get amplitude () {\n    return this._channelStrip.inputGain;\n  }\n  set amplitude (newAmp) {\n    this._channelStrip.inputGain = newAmp;\n    return this;\n  }\n\n  /** Overtone output gain (used for balancing volume when several overtones are used in a voice) */\n  get gain () {\n    return this._channelStrip.outputGain;\n  }\n  set gain (newGain) {\n    this._channelStrip.outputGain = newGain;\n    return this;\n  }\n\n  /** Attack envelope */\n  get attackEnvelope () {\n    return this._envelope.attackEnvelope;\n  }\n  set attackEnvelope (newEnv) {\n    this._envelope.attackEnvelope = newEnv;\n    return this;\n  }\n\n  /** Release envelope */\n  get releaseEnvelope () {\n    return this._envelope.releaseEnvelope;\n  }\n  set releaseEnvelope (newEnv) {\n    this._envelope.releaseEnvelope = newEnv;\n    return this;\n  }\n\n  /* =================== */\n  /* --- Audio setup --- */\n  /* =================== */\n\n  /**\n   * Connect to another AudioNode or AudioModule\n   */\n  connect (destination) {\n    // if destination has an input property, connect to it (destination is an AudioModule)\n    if (typeof destination.input === \"object\") {\n      this.output.connect(destination.input);\n    }\n    // else destination is an AudioNode and can be connected to directly\n    else {\n      this.output.connect(destination);\n    }\n  }\n\n  /**\n   * Disconnect from an AudioNode or AudioModule\n   */\n  disconnect (destination) {\n    // if destination has an input property, disconnect from it (destination is an AudioModule)\n    if (typeof destination.input === \"object\") {\n      this.output.disconnect(destination.input);\n    // else destination is an AudioNode and can be disconnected from directly\n    } else {\n      this.output.disconnect(destination);\n    }\n  }\n\n  /* ========================= */\n  /* --- Envelope controls --- */\n  /* ========================= */\n\n  /** Execute the attack envelope */\n  attack () {\n    this._envelope.attack();\n  }\n\n  /** Execute the release envelope */\n  release () {\n    this._envelope.release();\n  }\n}\n\nexport default Oscillator;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/Overtone.js","import AudioModule from \"./core/audio-module\"; \n\nclass StereoFeedbackDelay extends AudioModule {\n\n  /**\n   * Stereo delay with feedback\n   * @param {object} [o] - Options\n   * @param {number} [o.delayTimeL]\n   * @param {number} [o.delayTimeR]\n   * @param {number} [o.feedbackL]\n   * @param {number} [o.feedbackR]\n   * @param {number} [o.crossfeedL]\n   * @param {number} [o.crossfeedR]\n   * @param {number} [o.dryMixL]\n   * @param {number} [o.dryMixR]\n   * @param {number} [o.wetMixL]\n   * @param {number} [o.wetMixR]\n   */\n  constructor (audioCtx, o) {\n\n    try {\n      super(audioCtx);\n\n      // shim StereoPanner if it's not implemented\n      if (typeof this._audioCtx.createStereoPanner === 'undefined') {\n        this._audioCtx.createStereoPanner = function () { return new StereoPannerShim(this)};\n      }\n\n      o = o || {};    \n      this._audioCtx = audioCtx; \n      this._maxDelayTime = o.maxDelayTime || 10;\n\n      this._input = this._audioCtx.createGain();\n      this._channelSplitter = this._audioCtx.createChannelSplitter(2);\n      this._dryMixL = this._audioCtx.createGain();\n      this._dryMixR = this._audioCtx.createGain();\n      this._wetMixL = this._audioCtx.createGain();\n      this._wetMixR = this._audioCtx.createGain();\n      this._delayL = this._audioCtx.createDelay(this._maxDelayTime);\n      this._delayR = this._audioCtx.createDelay(this._maxDelayTime);\n      this._feedbackL = this._audioCtx.createGain();\n      this._feedbackR = this._audioCtx.createGain();\n      this._crossfeedL = this._audioCtx.createGain();\n      this._crossfeedR = this._audioCtx.createGain();\n      this._channelMerger = this._audioCtx.createChannelMerger(2);\n      this._output = this._audioCtx.createGain();\n  \n      this._connectAudioNodes();\n      this._setAudioDefaults(o);\n  \n      this.input = this._input;\n      this.output = this._output;\n\n    } catch (err) {\n\n      console.error(err);\n      throw new Error(\"Failed to create StereoFeedbackDelay audio module.\");\n    }\n  }\n\n  _connectAudioNodes () {\n    this._input.connect(this._channelSplitter);\n    this._channelSplitter.connect(this._dryMixL, 0);\n    this._channelSplitter.connect(this._dryMixR, 1);\n    this._channelSplitter.connect(this._delayL, 0);\n    this._channelSplitter.connect(this._delayR, 1);\n    this._delayL.connect(this._feedbackL);\n    this._delayR.connect(this._feedbackR);\n    this._feedbackL.connect(this._delayL);\n    this._feedbackR.connect(this._delayR);\n    this._delayL.connect(this._crossfeedR);\n    this._delayR.connect(this._crossfeedL);\n    this._crossfeedL.connect(this._delayL);\n    this._crossfeedR.connect(this._delayR);\n    this._delayL.connect(this._wetMixL);\n    this._delayR.connect(this._wetMixR);\n    this._dryMixL.connect(this._channelMerger, 0, 0);\n    this._dryMixR.connect(this._channelMerger, 0, 1);\n    this._wetMixL.connect(this._channelMerger, 0, 0);\n    this._wetMixR.connect(this._channelMerger, 0, 1);\n    this._channelMerger.connect(this._output);\n\n    return this;\n  }\n\n  _setAudioDefaults (o) {\n    o = o || {};\n\n    this._input.gain.value = 1;\n    this._delayL.delayTime.value = o.delayTimeL || 0.5;\n    this._delayR.delayTime.value = o.delayTimeR || 0.5;\n    this._dryMixL.gain.value = o.dryMixL || 1;\n    this._dryMixR.gain.value = o.dryMixR || 1;\n    this._wetMixL.gain.value = o.wetMixL || 0.2;\n    this._wetMixR.gain.value = o.wetMixR || 0.2;\n    this._feedbackL.gain.value = o.feedbackL || 0.1;\n    this._feedbackR.gain.value = o.feedbackR || 0.1;\n    this._crossfeedL.gain.value = o.crossfeedL || 0;\n    this._crossfeedR.gain.value = o.crossfeedR || 0;\n    this._output.gain.value = 1;\n\n    return this;\n  }\n\n  /**\n   * Connect to another AudioNode or AudioModule\n   */\n  connect (destination) {\n    // if destination has an input property, connect to it (destination is an AudioModule)\n    if (typeof destination.input === \"object\") {\n      this.output.connect(destination.input);\n    }\n    // else destination is an AudioNode and can be connected to directly\n    else {\n      this.output.connect(destination);\n    }\n  }\n\n  /**\n   * Disconnect from an AudioNode or AudioModule\n   */\n  disconnect (destination) {\n    // if destination has an input property, disconnect from it (destination is an AudioModule)\n    if (typeof destination.input === \"object\") {\n      this.output.disconnect(destination.input);\n    // else destination is an AudioNode and can be disconnected from directly\n    } else {\n      this.output.disconnect(destination);\n    }\n  }\n\n  /* =========================== */\n  /* --- Getters and setters --- */\n  /* =========================== */\n\n  /** Delay time left */\n  get delayTimeL () {\n    return this._delayL.delayTime;\n  }\n  set delayTimeL (time) {\n    this._delayL.delayTime.value = time;\n    return this;\n  }\n\n  /** Delay time right */\n  get delayTimeR () {\n    return this._delayR.delayTime;\n  }\n  set delayTimeR (time) {\n    this._delayR.delayTime.value = time;\n    return this;\n  }\n\n  /** Feedback L */\n  get feedbackL () {\n    return this._feedbackL.gain;\n  }\n  set feedbackL (gain) {\n    this._feedbackL.gain.value = gain;\n    return this;\n  }\n\n  /** Feedback R */\n  get feedbackR () {\n    return this._feedbackR.gain;\n  }\n  set feedbackR (gain) {\n    this._feedbackR.gain.value = gain;\n    return this;\n  }\n\n  /** Cross-feed L */\n  get crossfeedL () {\n    return this._crossfeedL.gain;\n  }\n  set crossfeedL (gain) {\n    this._crossfeedL.gain.value = gain;\n    return this;\n  }\n\n  /** Cross-feed R */\n  get crossfeedR () {\n    return this._crossfeedR.gain;\n  }\n  set crossfeedR (gain) {\n    this._crossfeedR.gain.value = gain;\n    return this;\n  }\n\n  /** Dry mix L */\n  get dryMixL () {\n    return this._dryMixL.gain;\n  }\n  set dryMixL (gain) {\n    this._dryMixL.gain.value = gain;\n    return this;\n  }\n\n  /** Dry mix R */\n  get dryMixR () {\n    return this._dryMixR.gain;\n  }\n  set dryMixR (gain) {\n    this._dryMixR.gain.value = gain;\n    return this;\n  }\n\n  /** Wet mix L */\n  get wetMixL () {\n    return this._wetMixL.gain;\n  }\n  set wetMixL (gain) {\n    this._wetMixL.gain.value = gain;\n    return this;\n  }\n\n  /** Wet mix R */\n  get wetMixR () {\n    return this._wetMixR.gain;\n  }\n  set wetMixR (gain) {\n    this._wetMixR.gain.value = gain;\n    return this;\n  }\n}\n\nexport default StereoFeedbackDelay;\n\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/StereoFeedbackDelay.js","import AudioModule from \"audio_modules/core/audio-module\";\nimport verifyAudioContextFeatures from \"audio_modules/core/verify-audio-context-features\";\nimport Envelope from \"audio_modules/envelope\";\nimport ChannelStrip from \"audio_modules/channel-strip\";\nimport AudioUtil from \"audio_modules/core/util\";\n\n/**\n * Class representing an Oscillator Voice. \n * An Oscillator Voice has an oscillator, and a channel strip.\n * @class\n */\nclass OscillatorVoice extends AudioModule {\n\n  /**\n   * @constructor\n   * @param {AudioContext} audioCtx\n   * @param {object} [o] - Options.\n   * @param {number} [o.glide] - Glide time in ms.\n   */\n  constructor(audioCtx, o) {\n    super(audioCtx);  \n  }\n\n  /* ============================================================================================= */\n  /*  INITIALIZATION METHODS\n  /* ============================================================================================= */\n\n  /**\n   * Initialize audio components and their connections.\n   * @private @override\n   */\n  _initAudioComponents() {\n    const _this = this;\n\n    try {\n      verifyAudioContextFeatures(_this.audioCtx, [\"Oscillator\"]);\n\n      this.audioComponents = {\n        oscillator: _this.audioCtx.createOscillator(),\n        envelope: new Envelope(_this.audioCtx),\n        channelStrip: new ChannelStrip(_this.audioCtx)\n      };\n\n      this.audioComponents.oscillator.connect(this.audioComponents.envelope);\n      this.audioComponents.envelope.connect(this.audioComponents.channelStrip);\n      this.audioComponents.channelStrip.connect(this.output);\n      this.audioComponents.channelStrip.setInputGain(1);\n      this.audioComponents.oscillator.start();\n      \n    } catch(err) {\n      console.error(err);\n    }\n  }\n\n  /**\n   * Initialize and expose Audio Params.\n   * @private @override\n   */\n  _initAudioParams() {\n    this.pan = this.audioComponents.channelStrip.pan;\n    this.gain = this.audioComponents.channelStrip.outputGain;\n    this.frequency = this.audioComponents.oscillator.frequency;\n  }\n\n  /**\n   * Initialize options.\n   * @private @override\n   */\n  _initOptions(o) {\n    \n        this.o = {\n          glide: 0\n        }\n    \n        super._initOptions(o);\n      }\n\n  /* ============================================================================================= */\n  /*  GETTERS AND SETTERS\n  /* ============================================================================================= */ \n\n  /**\n   * Returns the type of the waveform set for this oscillator.\n   * @returns {string} - Type of waveform. One of \"sine\", \"square\", \"sawtooth\", \"triangle\", or \"custom\".\n   */\n  getWaveformType() {\n    return this.audioComponents.oscillator.type;\n  }\n\n  /**\n   * Set the type of waveform - one of \"sine\", \"square\", \"sawtooth\", \"triangle\", or \"custom\".\n   * If \"custom\" is selected, you may also provide the real and imaginary components to create\n   * the custom waveform.\n   * @param {string} type - Type of waveform - one of \"sine\", \"square\", \"sawtooth\", \"triangle\", or \"custom\".\n   * @param {Float32Array} [real] - Real part (cosine terms) of an array used to create the custom waveform.\n   * @param {Float32Array} [imag] - Imaginary part (sine terms) of an array used to create the custom waveform.\n   */\n  setWaveformType(type, real, imag) {\n\n    switch (type) {\n      case \"sine\":\n        this.audioComponents.oscillator.type = \"sine\";\n        break;\n      case \"square\":\n        this.audioComponents.oscillator.type = \"squre\";\n        break;\n      case \"sawtooth\":\n      case \"saw\":\n        this.audioComponents.oscillator.type = \"sawtooth\";\n        break;\n      case \"triangle\":\n        this.audioComponents.oscillator.type = \"triangle\";\n        break;\n      case \"custom\":\n        if (typeof real === \"object\" && real.constructor.name === \"Float32Array\"\n            && typeof imag === \"object\" && imag.constructor.name === \"Float32Array\") {              \n              let wave = this.audioCtx.createPeriodicWave(real, imag);\n              this.audioComponents.oscillator.setPeriodicWave(wave);              \n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Set a custom waveform using arrays of real (cosine) and imaginary (sine) terms.\n   * @param {Float32Array} real \n   * @param {Float32Array} imag \n   */\n  setCustomWaveform(real, imag) {\n    this.setWaveformType(\"custom\", real, imag);\n    return this;\n  }\n\n  /**\n   * Returns the gain.\n   * @returns {number} - Gain.\n   */\n  getGain() {\n    return this.audioComponents\n                .channelStrip\n                .getOutputGain();\n  }\n\n  /**\n   * Sets the gain.\n   * @param {number} gain - Gain between 0. and 1.\n   */\n  setGain(gain) {\n    this.audioComponents\n          .channelStrip\n          .setOutputGain(gain);\n    return this;\n  }\n\n  /**\n   * Returns the pan.\n   * @returns {number} - Pan.\n   */\n  getPan() {\n    return this.audioComponents\n                .channelStrip\n                .getPan();\n  }\n  \n  /**\n   * Sets the pan.\n   * @param {number} pan - Pan between -1. (L) and 1. (R).\n   */\n  setPan(pan) {\n    this.audioComponents\n          .channelStrip\n          .setPan(pan);\n    return this;\n  }\n\n  /**\n   * Returns the oscillator frequency.\n   * @returns {number} - Oscillator frequency.\n   */\n  getFrequency() {\n    const osc = this.audioComponents.oscillator\n\n    return osc.frequency.value;\n  }\n\n  /**\n   * Sets the oscillator frequency.\n   * @param {number} freq - Frequency.\n   * @param {number} [glide] - Glide time in ms.\n   */\n  setFrequency(freq, glide) {\n    const osc = this.audioComponents.oscillator;\n\n    glide = (glide === undefined) ? this.o.glide : glide;\n    glide = glide / 1000; // convert to secs\n    \n    osc.frequency.cancelScheduledValues(this.audioCtx.currentTime);\n    osc.frequency.setValueAtTime(osc.frequency.value, this.audioCtx.currentTime);\n    osc.frequency.linearRampToValueAtTime(freq, this.audioCtx.currentTime + glide);\n\n    return this;\n  }\n\n  /**\n   * Get the attack envelope.\n   * @returns {array} - 2D array representing the attack envelope.\n   */\n  getAttackEnvelope() {\n    return this.audioComponents\n                .envelope\n                .getAttackEnvelope();\n  }\n\n  /**\n   * Set the attack envelope.\n   * @param {array} env - A 2D array representing the new envelope, where each value is of the\n   *                         form [t, a] where t is time in seconds, and a is amplitude in the range\n   *                         [0. - 1.]\n   * @returns {this} - A reference to the current envelope object for chaining.\n   */\n\n  setAttackEnvelope(env) {\n    this.audioComponents\n          .envelope\n          .setAttackEnvelope(env);\n    return this;\n  }\n\n  /**\n   * Get the release envelope.\n   * @returns {array} - 2D array representing the release envelope.\n   */\n  getReleaseEnvelope() {\n    return this.audioComponents\n                .envelope\n                .getReleaseEnvelope();\n  }\n\n  /**\n   * Set the release envelope.\n   * @param {array} env - A 2D array representing the new envelope, where each value is of the\n   *                         form [t, a] where t is time in seconds, and a is amplitude in the range\n   *                         [0. - 1.] \n   * @returns {this} - A reference to the current envelope object for chaining.\n   */\n  setReleaseEnvelope(env) {\n    this.audioComponents\n          .envelope\n          .setReleaseEnvelope(env);\n    return this;\n  }\n\n  /* ============================================================================================= */\n  /*  PUTLIC API\n  /* ============================================================================================= */ \n\n  /**\n   * Execute the attack envelope.\n   * @returns {Promise} - Promise that returns the envelope when the envelope expires.\n   */\n  attack() {\n    return this.audioComponents.envelope.attack();\n  }\n\n  /**\n   * Execute the release envelope.\n   * @returns {Promise} - Promise that returns the envelope when the envelope expires.\n   */\n  release() {\n    return this.audioComponents.envelope.release();\n  }\n\n  /**\n   * Play a note with the given MIDI pitch and MIDI velocity.\n   * @public\n   * @param {number} pitch - MIDI pitch.\n   * @param {number} [vel=127] - MIDI velocity. \n   * @param {array} [glide] - Glide time in ms.\n   */\n  playNote(pitch, vel = 127, glide) {\n    let freq = AudioUtil.midiToFreq(pitch);\n    let gain = AudioUtil.midiVelToGain(vel);\n\n    this.setFrequency(freq, glide);\n    this.setGain(gain);\n\n    this.attack();\n  }\n}\n\nexport default OscillatorVoice;\n\n\n// WEBPACK FOOTER //\n// ./src/audio_modules/oscillator-voice.js","import Widget from \"ui/core/widget\";\nimport Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\nimport MathUtil from \"util/util-math\";\n\n/**\n * Class representing a Graph widget.\n * @class \n * @implements {Widget}\n */\nclass Graph extends Widget {\n\n  /**\n   * @constructor\n   * @param {object} container - DOM container for the widget.\n   * @param {object} [o] - Options.\n   * @param {number} [o.minXVal=0] - Minimum X value.\n   * @param {number} [o.minYVal=0] - Minimum Y value.\n   * @param {number} [o.maxXVal=100] - Maximum X value.\n   * @param {number} [o.maxYVal=100] - Maximum Y value.\n   * @param {number} [o.maxNumVertices=-1] - Maximum number of vertices.\n   * @param {number} [o.quantizeX=0.1] - X-quantization (\"grid\") value.\n   * @param {number} [o.quantizeY=0.1] - Y-quantization (\"grid\") value.\n   * @param {number} [o.xDecimalPrecision=1] - Number of decimal places for output of the X values.\n   * @param {number} [o.yDecimalPrecision=1] - Number of decimal places for output of the Y values.\n   * @param {boolean} [o.isEditable=true] - Is the graph editable?\n   * @param {string} [o.vertexColor=\"#f40\"] - Color of vertex points.\n   * @param {string} [o.lineColor=\"#484848\"] - Color of lines connecting the vertices.\n   * @param {string} [o.backgroundColor=\"#fff\"] - Background color.\n   * @param {number} [o.lineWidth=2] - Width of the connecting lines.\n   * @param {number} [o.vertexRadius=4] - Radius of the vertex points.\n   * @param {number} [o.mouseSensitivity=1.2] - Mouse sensitivity (how much moving the mouse affects the interaction).\n   */\n  constructor(container, o) {\n    super(container, o);\n  }\n\n  /* ===========================================================================\n  *  PUBLIC API\n  */\n\n  /**\n   * Sets the options.\n   * @public @override\n   */\n  setOptions(o) {\n    o = o || {};\n\n    super.setOptions(o);\n  }\n\n  /**\n  * Returns the state as an array of [x, y] pairs.\n  * @public @override\n  */\n  getVal() {\n    return this.state.vertices.map(vtx => [vtx.x, vtx.y]);\n  }\n\n  /**\n  * Sets the state as an array of [x, y] vertex pairs.\n  * Same as setVal(), but will not trigger observer callback methods.\n  * @public @override\n  * @param {array} - An array of [x, y] points\n  */\n  setInternalVal(vertexArray) {\n   let vertices = vertexArray.map(xyPair => { return {x: xyPair[0], y: xyPair[1]}; });\n\n   this.setInternalState({ vertices: vertices });\n  }\n\n  /**\n  * Sets the state as an array of [x, y] vertex pairs.\n  * Same as setInternalVal(), but will trigger observer callback methods.\n  * @public @override\n  * @param {array} - An array of [x, y] points.\n  */\n  setVal(vertexArray) {\n    let vertices = vertexArray.map(xyPair => { return {x: xyPair[0], y: xyPair[1]}; });\n\n    this.setState({ vertices: vertices });\n  }\n\n  /**\n   * Sets the value of a particular vertex, selected by its index. \n   * Note: will not trigger observer notifications.\n   * @public\n   * @param {number} val - Value to set.\n   * @param {number} idx - Index of the vertex to set the value for.\n   * @returns {number} - Index of the vertex that has been set, or -1 if no such vertex exists.\n   */\n  setVertexVal(val, idx) {\n    if (idx >= 0 && idx < this.state.vertices.length) {\n      let vertices = this.state.vertices.map(vtx => vtx);\n      vertices[idx].y = val;\n      this.setInternalState({ vertices: vertices });\n      return idx;\n    } else {\n      return -1;\n    }\n  }\n\n  /**\n   * Returns the number of vertices set on this graph.\n   * @public\n   * @return {number} - Number of vertices.\n   */\n  getNumVertices() {\n    return this.state.vertices.length;\n  }\n\n  /**\n   * Adds new vertices to the state.\n   * Each vertex is represented as x and y values, as well as optional boolean flags\n   * specifying whether the x, y, or both values should be fixed (unchangeble).\n   * The x and y values may also take the strings \"min\", \"max\" to specify that the coordinates \n   * should be tied to the minimum or maximum possible x or y values for the graph.\n   * @public\n   * @param {...object} vtx - Object representing the new vertex to add.\n   * @param {number} [vtx.x=minXVal] - X coordinate for the new vertex.\n   * @param {number} [vtx.y=minYVal] - Y coordinate for the new vertex.\n   * @param {boolean} [vtx.isXFixed=false] - Is the X coordinate fixed (unable to move)?\n   * @param {boolean} [vtx.isYFixed=false] - Is the Y coordinate fixed (unable to move)?\n   */\n  addVertex(...vtx) {\n    for (let i = 0; i < vtx.length; i++) {\n      let newVtx = vtx[i];\n\n      newVtx = (typeof newVtx !== 'undefined') ? newVtx : {};\n      newVtx.x = (typeof newVtx.x !== 'undefined') ? newVtx.x : this.o.minXVal;\n      newVtx.y = (typeof newVtx.y !== 'undefined') ? newVtx.y : this.o.minYVal;\n      newVtx.isXFixed = (typeof newVtx.isXFixed !== 'undefined') ? newVtx.isXFixed : false;\n      newVtx.isYFixed = (typeof newVtx.isYFixed !== 'undefined') ? newVtx.isYFixed : false;\n      newVtx.xAnchor = \"\";\n      newVtx.yAnchor = \"\";\n\n      if (newVtx.x === \"max\") {\n        newVtx.isXFixed = true;\n        newVtx.x = this.o.maxXVal;\n        newVtx.xAnchor = \"max\";\n      } else if (newVtx.x === \"min\") {\n        newVtx.isXFixed = true;\n        newVtx.x = this.o.minXVal;\n        newVtx.xAnchor = \"min\";\n      }\n\n      if (newVtx.y === \"max\") {\n        newVtx.isYFixed = true;\n        newVtx.y = this.o.maxYVal;\n        newVtx.yAnchor = \"max\";\n      } else if (newVtx.x === \"min\") {\n        newVtx.isYFixed = true;\n        newVtx.y = this.o.minYVal;\n        newVtx.yAnchor = \"min\";\n      }\n\n      let newVertices = this.getState().vertices.map(x=>x);\n\n      newVertices.push(newVtx);\n      newVertices.sort((a, b) => a.x - b.x);\n\n      this.setState({\n        vertices: newVertices\n      });\n    }\n  }\n\n  /**\n   * Adds a vertex with fixed x and y coordinates.\n   * @param {object} vtx - Vertex coordinates in format {x, y}\n   * @param {number} vtx.x - X coordinate of the vertex.\n   * @param {number} vtx.y - Y coordinate of the vertex.\n   */\n  addFixedVertex(...vtx) {\n    for (let i = 0; i < vtx.length; i++) {\n      let newVtx = vtx[i];\n      this.addVertex({ x: newVtx.x, y: newVtx.y, isXFixed: true, isYFixed: true });\n    }\n  }\n\n  /**\n   * Adds a vertex with fixed y coordinate.\n   * @param {object} vtx - Vertex coordinates in format {x, y}\n   * @param {number} vtx.x - X coordinate of the vertex.\n   * @param {number} vtx.y - Y coordinate of the vertex.\n   */\n  addFixedXVertex(...vtx) {\n    for (let i = 0; i < vtx.length; i++) {\n      let newVtx = vtx[i];\n      this.addVertex({ x: newVtx.x, y: newVtx.y, isXFixed: true, isYFixed: false });\n    }\n  }\n\n\n  /**\n   * Adds a vertex with fixed y coordinate.\n   * @param {object} vtx - Vertex coordinates in format {x, y}\n   * @param {number} vtx.x - X coordinate of the vertex.\n   * @param {number} vtx.y - Y coordinate of the vertex.\n   */\n  addFixedYVertex(...vtx) {\n    for (let i = 0; i < vtx.length; i++) {\n      let newVtx = vtx[i];\n      this.addVertex({ x: newVtx.x, y: newVtx.y, isXFixed: false, isYFixed: true });\n    }\n  }\n\n  /* ============================================================================================= */\n  /* INITIALIZATION METHODS\n  /* ============================================================================================= */\n\n  /**\n   * Initializes the options.\n   * @override\n   * @private\n   */\n  _initOptions(o) {\n    // set defaults\n    this.o = {};\n\n    this.o.minXVal = 0;\n    this.o.minYVal = 0;\n    this.o.maxXVal = 100;\n    this.o.maxYVal = 100;\n    this.o.maxNumVertices = -1;\n    this.o.quantizeX = 0.1;\n    this.o.quantizeY = 0.1;\n    this.o.xDecimalPrecision = 1;\n    this.o.yDecimalPrecision = 1;\n    this.o.isEditable = true;\n    this.o.vertexColor = \"#f40\";\n    this.o.fixedVertexColor = this.o.vertexColor;\n    this.o.lineColor = \"#484848\";\n    this.o.backgroundColor = \"#fff\";\n    this.o.vertexRadius = 4;\n    this.o.lineWidth = 2;\n    this.o.mouseSensitivity = 1.2;\n\n    // override defaults with provided options\n    super._initOptions(o);\n  }\n\n  /**\n   * Initializes state constraints.\n   * @override\n   * @private\n   */\n  _initStateConstraints() {\n    const _this = this;\n\n    this.stateConstraints = new ConstraintSpec({\n      vertices: [{\n        x: new Constraint({\n          min: _this.o.minXVal,\n          max: _this.o.maxXVal,\n          transform: (num) => {\n            return MathUtil.quantize(num, _this.o.quantizeX);\n          }\n        }),\n        y: new Constraint({\n          min: _this.o.minYVal,\n          max: _this.o.maxYVal,\n          transform: (num) => {\n            return MathUtil.quantize(num, _this.o.quantizeY);\n          }\n        })\n      }]\n    });\n  }\n\n  /**\n   * Initializes state.\n   * @override\n   * @private\n   */\n  _initState() {\n    this.state = {\n      // verices contains an array of vertices\n      // each vertex is an object of form \n      // {\n      //   x: numbber, \n      //   y: number, \n      //   isXFixed: boolean, \n      //   isYFixed: boolean,\n      //   xAnchor: string,\n      //   yAnchor: string\n      // }\n      // isXFixed and isYFixed are boolean values that tell if a given\n      // vertex may be moved in the x and y planes\n      vertices: []\n    };\n  }\n\n  /**\n   * Initializes the svg elements.\n   * @override\n   * @private\n   */\n  _initSvgEls() {\n    const _this = this;\n\n    this.svgEls = {\n      panel: document.createElementNS(this.SVG_NS, \"rect\"),\n      vertices: [],\n      lines: []\n    };\n\n    this.svgEls.panel.setAttribute(\"width\", this._getWidth());\n    this.svgEls.panel.setAttribute(\"height\", this._getHeight());\n    this.svgEls.panel.setAttribute(\"fill\", this.o.backgroundColor);\n    this.svgEls.panel.setAttribute(\"stroke\", this.o.lineColor);\n\n    this._appendSvgEls();\n    this._update();\n  }\n\n  /**\n   * Initializes mouse and touch event handlers.\n   * @override\n   * @private\n   */\n  _initHandlers() {\n    const _this = this;\n\n    let targetVtx = null;\n    let targetLine = null;\n    let vtxPos0 = {}; // original poisition of two vertices affected by a line move\n    let x0 = 0;\n    let y0 = 0;\n    let x1 = 0;\n    let y1 = 0;\n    let dx = 0;\n    let dy = 0;\n\n    this.handlers = {\n\n       touchPanel: function touchPanel(ev) {\n         ev.preventDefault();\n\n         let xPos = ev.clientX - _this._getLeft();\n         let yPos = ev.clientY - _this._getTop();\n         let vertexState = _this._calcVertexState({x: xPos, y: yPos});\n\n         _this.addVertex(vertexState);\n       },\n\n       touchVertex: function touchVertex(ev) {\n         ev.preventDefault();\n\n         targetVtx = ev.target;\n\n         document.addEventListener(\"mousemove\", _this.handlers.moveVertex);\n         document.addEventListener(\"touchmove\", _this.handlers.moveVertex);\n         ev.target.addEventListener(\"mouseup\", _this.handlers.deleteVertex);\n         ev.target.addEventListener(\"touchend\", _this.handlers.deleteVertex);\n       },\n\n       touchLine: function touchLine(ev) {\n         ev.preventDefault();\n\n         targetLine = ev.target;\n\n         x0 = ev.clientX - _this._getLeft();\n         y0 = ev.clientY - _this._getTop();\n         vtxPos0 = null;\n\n         document.addEventListener(\"mousemove\", _this.handlers.moveLine);\n         document.addEventListener(\"touchmove\", _this.handlers.moveLine);\n       },\n\n       moveLine: function moveLine(ev) {\n         ev.preventDefault();\n\n         document.addEventListener(\"mouseup\", _this.handlers.endMoveLine);\n         document.addEventListener(\"touchend\", _this.handlers.endMoveLine);\n\n         x1 = ev.clientX - _this._getLeft();\n         y1 = ev.clientY - _this._getTop();\n\n         // delta position (change in position)\n         let dPos = {\n           x: x1 - x0,\n           y: y1 - y0\n         };\n\n         vtxPos0 = _this._moveLine(targetLine, dPos, vtxPos0);\n       },\n\n       endMoveLine: function endMoveLine(ev) {\n         ev.preventDefault();\n\n         vtxPos0 = null;\n\n         document.removeEventListener(\"mousemove\", _this.handlers.moveLine);\n         document.removeEventListener(\"touchmove\", _this.handlers.moveLine);\n       },\n\n       deleteVertex: function deleteVertex(ev) {\n         ev.preventDefault();\n\n         document.removeEventListener(\"mousemove\", _this.handlers.moveVertex);\n         document.removeEventListener(\"touchmove\", _this.handlers.moveVertex);\n\n         _this._deleteVertex(ev.target);\n\n         ev.target.removeEventListener(\"mouseup\", _this.handlers.deleteVertex);\n         ev.target.removeEventListener(\"touchend\", _this.handlers.deleteVertex);\n       },\n\n       moveVertex: function moveVertex(ev) {\n         ev.preventDefault();\n\n         targetVtx.removeEventListener(\"mouseup\", _this.handlers.deleteVertex);\n         targetVtx.removeEventListener(\"touchend\", _this.handlers.deleteVertex);\n\n         document.addEventListener(\"mouseup\", _this.handlers.endMoveVertex);\n         document.addEventListener(\"touchend\", _this.handlers.endMoveVertex);\n\n         let xPos = ev.clientX - _this._getLeft();\n         let yPos = ev.clientY - _this._getTop();\n\n         _this._moveVertex(targetVtx, {x: xPos, y: yPos});\n       },\n\n       endMoveVertex: function endMoveVertex(ev) {\n         ev.preventDefault();\n\n         document.removeEventListener(\"mousemove\", _this.handlers.moveVertex);\n         document.removeEventListener(\"touchmove\", _this.handlers.moveVertex);\n       }\n    };\n\n    this.svgEls.panel.addEventListener(\"mousedown\", _this.handlers.touchPanel);\n    this.svgEls.panel.addEventListener(\"touchdown\", _this.handlers.touchPanel);\n\n    this.svgEls.vertices.forEach(vtx => {\n      vtx.addEventListener(\"mousedown\", _this.handlers.touchVertex);\n      vtx.addEventListener(\"touchdown\", _this.handlers.touchVertex);\n    });\n\n    this.svgEls.lines.forEach(line => {\n      line.addEventListener(\"mousedown\", _this.handlers.touchLine);\n      line.addEventListener(\"touchdown\", _this.handlers.touchLine);\n    });\n  }\n\n  /**\n   * Updates (redraws) component based on state.\n   * @override\n   * @private\n   */\n  _update() {\n    const _this = this;\n\n    // update vertices to have min and max values if specified\n    _this.state.vertices.forEach(vtx => {\n      vtx.x = (vtx.xAnchor === \"max\") ? _this.o.maxXVal :\n                (vtx.xAnchor === \"min\") ? _this.o.minXVal :\n                vtx.x;\n\n      vtx.y = (vtx.yAnchor === \"max\") ? _this.o.maxYVal :\n                (vtx.yAnchor === \"min\") ? _this.o.minYVal :\n                vtx.y;\n    });\n\n    // sort svg vertexes using a sort map\n    let idxSortMap = _this.state.vertices.map((vtx, idx) => { return { vtx: vtx, idx: idx }; });\n    idxSortMap.sort((a, b) => a.vtx.x - b.vtx.x);\n    _this.state.vertices = idxSortMap.map(el => _this.state.vertices[el.idx]);\n\n    // if there are more state vertices than svg vertices, add a corresponding number of svg vertices and lines\n    for (let i = _this.svgEls.vertices.length; i < _this.state.vertices.length; ++i) {\n      _this._addSvgVertex();\n    }\n\n    // if there are more svg vertices than state vertices, remove a corresponding number of svg vertices and lines\n    for (let i = _this.svgEls.vertices.length; i > _this.state.vertices.length; --i) {\n      _this._removeSvgVertex();\n    }\n\n    // sort the svg vertices according to the vertex sort map\n    _this.svgEls.vertices = idxSortMap.map(el => _this.svgEls.vertices[el.idx]);\n\n    // set the correct position coordinates for every vertex\n    _this.state.vertices.forEach((stateVtx, idx) => {\n      let svgVtx = _this.svgEls.vertices[idx];\n      let pos = _this._calcVertexPos(stateVtx);\n\n      svgVtx.setAttribute(\"cx\", pos.x);\n      svgVtx.setAttribute(\"cy\", pos.y);\n      svgVtx.setAttribute(\"r\", _this.o.vertexRadius);\n\n      let vtxFill = (_this.state.vertices[idx].isXFixed || _this.state.vertices[idx].isYFixed) ?\n                    _this.o.fixedVertexColor :\n                    _this.o.vertexColor;\n\n      svgVtx.setAttribute(\"fill\", vtxFill);\n\n      // for every vertex other than the first, draw a line to the previous vertex\n      if (idx > 0) {\n        let prevVtx = _this.state.vertices[idx - 1];\n        let prevPos = _this._calcVertexPos(prevVtx);\n        let line = _this.svgEls.lines[idx - 1];\n\n        line.setAttribute(\"d\", \"M \" + pos.x + \" \" + pos.y + \" L \" + prevPos.x + \" \" + prevPos.y);\n        line.setAttribute(\"fill\", \"transparent\");\n        line.setAttribute(\"stroke-width\", _this.o.lineWidth);\n        line.setAttribute(\"stroke\", _this.o.lineColor);\n      }\n    });\n\n    // remove and reappend all svg elements so that vertices are on top of lines\n    _this.svgEls.lines.forEach(svgLine => {\n      _this.svg.removeChild(svgLine);\n      _this.svg.appendChild(svgLine);\n    });\n\n    _this.svgEls.vertices.forEach(svgVtx => {\n      _this.svg.removeChild(svgVtx);\n      _this.svg.appendChild(svgVtx);\n    });\n\n    // reassign listeners\n    _this.svgEls.vertices.forEach(vtx => {\n      vtx.addEventListener(\"mousedown\", _this.handlers.touchVertex);\n      vtx.addEventListener(\"touchdown\", _this.handlers.touchVertex);\n    });\n\n    _this.svgEls.lines.forEach(line => {\n      line.addEventListener(\"mousedown\", _this.handlers.touchLine);\n      line.addEventListener(\"touchdown\", _this.handlers.touchLine);\n    });\n  }\n\n  /* ==============================================================================================\n  *  INTERNAL FUNCTIONALITY METHODS\n  */\n\n  /**\n   * Deletes a vertex.\n   * @private\n   * @param {SVGElement} targetVtx - Vertex to Delete\n   */\n  _deleteVertex(targetVtx) {\n    const _this = this;\n\n    let vtxIdx = this.svgEls.vertices.findIndex(vtx => vtx === targetVtx);\n    let isRemovable = !(this.state.vertices[vtxIdx].isXFixed || this.state.vertices[vtxIdx].isYFixed)\n\n    if (vtxIdx !== -1 && isRemovable) {\n      let newVertices = this.getState().vertices.map(x=>x);\n\n      newVertices.splice(vtxIdx, 1);\n      _this.setState({\n        vertices: newVertices\n      });\n    }\n  }\n\n  /**\n   * Adds a new SVG vertex representation.\n   * @private\n   */\n  _addSvgVertex() {\n    const _this = this;\n\n    let newVertex = document.createElementNS(_this.SVG_NS, \"circle\");\n    _this.svgEls.vertices.push(newVertex);\n    _this.svg.appendChild(newVertex);\n\n    // if there is more than 1 svg vertex, we also need to draw lines between them\n    if (_this.svgEls.vertices.length > 1) {\n      this._addSvgLine();\n    }\n  }\n\n  /**\n   * Adds an SVG line connecting two vertices.\n   * @private\n   */\n  _addSvgLine() {\n    let newLine = document.createElementNS(this.SVG_NS, \"path\");\n    this.svg.appendChild(newLine);\n    this.svgEls.lines.push(newLine);\n  }\n\n  /**\n   * Removes an SVG vertex.\n   * @private\n   */\n  _removeSvgVertex() {\n    let vertex = this.svgEls.vertices[this.svgEls.vertices.length - 1];\n\n    this.svg.removeChild(vertex);\n    vertex = null;\n    this.svgEls.vertices.pop();\n\n    if (this.svgEls.lines.length > 0) {\n     this._removeSvgLine();\n    }\n  }\n\n  /**\n   * Removes an SVG line connecting two vertices.\n   * @private\n   */\n  _removeSvgLine() {\n    let line = this.svgEls.lines[this.svgEls.lines.length - 1];\n\n    this.svg.removeChild(line);\n    line = null;\n    this.svgEls.lines.pop();\n  }\n\n  /**\n    * Moves a line.\n    * @private\n    * @param {SVGElement} targetLine - The target line\n    * @param {object} dPos -\n    * @param {number} dPos.x\n    * @param {number} dPos.y\n    * @param {object} vtxPos0 - Original position (before moving)\n    *                           of the two vertices immediately to the left\n    *                           and right of the line being moved in the\n    *                           form { vtx1: {x, y}, vtx2: {x, y}, boundaryBL: {x, y}, boundaryTR: {x, y} }\n    *                           If null, will be calculated from the\n    *                           corresponding svg element.\n    * @param {obect} [vtxPos0.vtx1]\n    * @param {number} [vtxPos0.vtx1.x]\n    * @param {number} [vtxPos0.vtx1.y]\n    * @param {obect} [vtxPos0.vtx2]\n    * @param {number} [vtxPos0.vtx2.x]\n    * @param {number} [vtxPos0.vtx2.y]\n    * @returns {object} Original position of the two vertices affected by the line move in the form\n    *                   { vtx1: {x, y}, vtx2: {x, y}, boundaryBL: {x, y}, boundaryTR: {x, y} }.\n    */\n  _moveLine(targetLine, dPos, vtxPos0) {\n    const _this = this;\n\n    let lineIdx = _this.svgEls.lines.findIndex(line => line === targetLine);\n\n    // get vertices to the left and right of the selected line\n    let vtx1 = _this.svgEls.vertices[lineIdx];\n    let vtx2 = _this.svgEls.vertices[lineIdx + 1];\n\n    let vtx1curPos = {\n      x: parseInt(_this.svgEls.vertices[lineIdx].getAttribute(\"cx\")),\n      y: parseInt(_this.svgEls.vertices[lineIdx].getAttribute(\"cy\"))\n    };\n    let vtx2curPos = {\n      x: parseInt(_this.svgEls.vertices[lineIdx + 1].getAttribute(\"cx\")),\n      y: parseInt(_this.svgEls.vertices[lineIdx + 1].getAttribute(\"cy\"))\n    };\n\n    // if vtxPos0 is null or undefined, this is the first time this function\n    // was called in the line move, and we need to get the position of affected\n    // vertices from the svg attributes.\n    // vtx1 and vtx2 are the left and right vertices bounding the line\n    // boundaryBL is the bottom left boundary restricting movement of the line\n    // boundaryTR is the top right boundary restricting movement of the line\n    if (vtxPos0 === null || vtxPos0 === undefined) {\n\n      let boundaryBL = {\n        x: (lineIdx > 0) ? \n               parseInt(_this.svgEls.vertices[lineIdx - 1].getAttribute(\"cx\"))\n            : _this._calcVertexPos({x: _this.o.minXVal, y: _this.o.minYVal}).x,\n        y: _this._calcVertexPos({x: _this.o.minXVal, y: _this.o.minYVal}).y\n      };\n\n      let boundaryTR = {\n        x: (lineIdx + 2 < _this.svgEls.vertices.length) ? \n              parseInt(_this.svgEls.vertices[lineIdx + 2].getAttribute(\"cx\"))\n            : _this._calcVertexPos({x: _this.o.maxXVal, y: _this.o.maxYVal}).x,\n        y: _this._calcVertexPos({x: _this.o.maxXVal, y: _this.o.maxYVal}).y\n      };\n\n      vtxPos0 = {\n       vtx1: vtx1curPos,\n       vtx2: vtx2curPos,\n       boundaryBL: boundaryBL,\n       boundaryTR: boundaryTR\n      };\n    }\n\n    // calculate the new positions for the two affected vertices\n    let vtx1newPos = {\n      x: vtxPos0.vtx1.x + dPos.x,\n      y: vtxPos0.vtx1.y + dPos.y\n    };\n\n    let vtx2newPos = {\n      x: vtxPos0.vtx2.x + dPos.x,\n      y: vtxPos0.vtx2.y + dPos.y\n    };\n\n    // if moving would take x values outside of boundaries, keep x values the same\n    if (vtx1newPos.x < vtxPos0.boundaryBL.x || \n        vtx2newPos.x < vtxPos0.boundaryBL.x || \n        vtx1newPos.x > vtxPos0.boundaryTR.x || \n        vtx2newPos.x > vtxPos0.boundaryTR.x) {\n      vtx1newPos.x = vtx1curPos.x;\n      vtx2newPos.x = vtx2curPos.x;\n    }\n\n    // if moving would take y values outside of boundaries, keep y values the same\n    // remember that y-coordinates are inverted when dealing with the canvas\n    if (vtx1newPos.y > vtxPos0.boundaryBL.y || \n        vtx2newPos.y > vtxPos0.boundaryBL.y || \n        vtx1newPos.y < vtxPos0.boundaryTR.y || \n        vtx2newPos.y < vtxPos0.boundaryTR.y) {\n      vtx1newPos.y = vtx1curPos.y;\n      vtx2newPos.y = vtx2curPos.y;\n    }\n\n    this._moveVertex(vtx1, vtx1newPos);\n    this._moveVertex(vtx2, vtx2newPos);\n\n    // return the original position so that it may be used again if the line move is not finished\n    return vtxPos0;\n  }\n\n  /**\n  * Moves a vertex.\n  * @private\n  * @param {SVGElement} targetVtx - The target vertex\n  * @param {Object} newPos - The new position\n  * @param {number} newPos.x\n  * @param {number} newPos.y\n  */\n  _moveVertex(targetVtx, newPos) {\n    const _this = this;\n\n    let vtxState = _this._calcVertexState(newPos);\n    let vtxIdx = _this.svgEls.vertices.findIndex(vtx => vtx === targetVtx);\n\n    let vertices = _this.getState().vertices.map(x=>x);\n\n    // move the vertex if it's not fixed in x or y direction\n    vertices[vtxIdx].x = (vertices[vtxIdx].isXFixed) ? vertices[vtxIdx].x : vtxState.x;\n    vertices[vtxIdx].y = (vertices[vtxIdx].isYFixed) ? vertices[vtxIdx].y : vtxState.y;\n\n    _this.setState({\n      vertices: vertices\n    });\n  }\n\n  /* ===========================================================================\n  *  HELPER METHODS\n  */\n\n  /**\n   * Calculates the x and y for a vertex in the graph according to its state value.\n   * @private\n   */\n  _calcVertexPos(vertexState) {\n    return {\n     x: this._getWidth() * (vertexState.x / this.o.maxXVal),\n     y: this._getHeight() - (this._getHeight() * (vertexState.y / this.o.maxYVal))\n    };\n  }\n\n  /**\n   * Calculates the x and y for a vertex state based on position on the graph.\n   * (inverse of _calcVertexPos).\n   * @private\n   */\n  _calcVertexState(vertexPos) {\n    return {\n      x: this.o.maxXVal * (vertexPos.x / this._getWidth()),\n      y: this.o.maxYVal - (this.o.maxYVal * (vertexPos.y / this._getHeight()))\n    };\n  }\n\n  /**\n   * Converts on-screen x distance to scaled x state-value.\n   * @private\n   */\n  _xPxToVal(x) {\n    return (x / this._getWidth()) * (this.o.maxXVal - this.o.minXVal);\n  }\n\n  /**\n   * Converts on-screen y distance to scaled y state-value.\n   * @private\n   */\n  _yPxToVal(y) {\n    return (y / this._getHeight()) * (this.o.maxYVal - this.o.minYVal);\n  }\n}\n\nexport default Graph;\n\n\n// WEBPACK FOOTER //\n// ./src/ui/graph.js","/* ============================================================================================= */\n/* ENVELOPE TEST\n/* ============================================================================================= */\n\nimport AudioModuleManager from \"audio_modules/core/audio-module-manager\";\nimport Graph from \"ui/graph\";\n\nconst AMM = new AudioModuleManager(new AudioContext());\n\nlet osc = AMM.createOscillator();\nlet envelope = AMM.createEnvelope();\nlet gain = AMM.createGain();\n\nosc.connect(envelope);\nenvelope.connect(gain);\ngain.connect(AMM.destination);\n\nosc.frequency.value = 220;\ngain.gain.value = 0;\nosc.start();\n\nconst attackGraph = new Graph(document.querySelector(\"#attack-graph\"), {\n  minXVal: 0,\n  maxXVal: 2,\n  minYVal: 0,\n  maxYVal: 1\n});\nattackGraph.addVertex({x: \"min\", y: 0}, {x: \"max\", y: 0});\nattackGraph.addListener(env => {\n  envelope.setAttackEnvelope(env);\n});\n\nconst releaseGraph = new Graph(document.querySelector(\"#release-graph\"), {\n  minXVal: 0,\n  maxXVal: 2,\n  minYVal: 0,\n  maxYVal: 1,\n});\nreleaseGraph.addVertex({x: \"min\", y: 0}, {x: \"max\", y: 0});\nreleaseGraph.addListener(env => envelope.setReleaseEnvelope(env));\n\nconst attackBtn = document.querySelector(\"#attack-button\");\nconst releaseBtn = document.querySelector(\"#release-button\");\nconst audioToggle = document.querySelector(\"#audio-toggle\");\nconst messageBox = document.querySelector(\".message\");\n\naudioToggle.addEventListener(\"change\", ev => {\n  gain.gain.value = ev.target.checked ? 0.5 : 0;\n});\n\nattackBtn.addEventListener(\"click\", ev => {\n  envelope.attack().then(env => {\n    messageBox.innerHTML = \"Attack finished, attack env: \" + env;\n  });\n});\n\nreleaseBtn.addEventListener(\"click\", ev => {\n  envelope.release().then(env => {\n    messageBox.innerHTML = \"Release finished, release env: \" + env;\n  });\n});\n\n\n// WEBPACK FOOTER //\n// ./test/manual_test/audio_modules/envelope.js"],"sourceRoot":""}