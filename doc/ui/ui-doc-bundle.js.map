{"version":3,"sources":["webpack:///webpack/bootstrap cec844c5efb35df2f50c","webpack:///./src/util/constraint.js","webpack:///./src/util/constraint-def.js","webpack:///./src/ui/core/widget.js","webpack:///./src/ui/dial.js","webpack:///./src/util/util-math.js","webpack:///./src/ui/numberbox.js","webpack:///./src/ui/core/widget-mixin-svgns.js","webpack:///./src/ui/core/widget-mixin-state.js","webpack:///./src/ui/core/widget-mixin-options.js","webpack:///./src/ui/core/widget-mixin-observer.js","webpack:///./src/ui/dropmenu.js","webpack:///./src/ui/slider.js","webpack:///./src/ui/keyboard.js","webpack:///./src/ui/graph.js","webpack:///./src/ui/multislider.js","webpack:///./src/ui/meter.js","webpack:///./doc/ui/ui-doc.js"],"names":["Constraint","spec","min","max","enum","transform","ConstraintSpec","specDefObj","constraintMap","_parseMap","targetObj","_this","forEach","_constrainBranch","keyBranch","target","constraint","key","undefined","Math","Array","find","c","cMap","push","Object","parentBranch","map","x","keys","keyIdx","newKeyBranch","curKey","length","arrFlag","i","keyBranchSlice","slice","j","_applyConstraint","Widget","container","o","Element","Error","svg","document","createElementNS","SVG_NS","appendChild","setAttribute","getBoundingClientRect","width","height","svgEls","handlers","state","stateConstraints","observers","_initOptions","_initStateConstraints","_initState","_initSvgEls","_initHandlers","values","appendSvgEls","svgEl","child","arrEl","newVal","newState","_getLeft","y","_getTop","top","left","assign","prototype","Dial","val","setInternalState","setState","stepPrecision","getPrecision","stepInterval","minVal","maxVal","needleColor","activeColor","mouseSensitivity","quantize","num","bgArc","activeArc","needle","_calcSvgArcPath","_calcNeedleCenter","_calcDialRadius","PI","_calcArcStrokeWidth","_calcNeedleEnd","_calcNeedleWidth","_appendSvgEls","_update","y0","yD","getState","touch","ev","clientY","addEventListener","move","release","preventDefault","_calcMovePrecision","removeEventListener","_calcNeedleAngle","radius","_getWidth","_getHeight","trunc","sin","cos","cx","cy","r","startAngle","endAngle","x1","y1","x2","y2","largeArc","sweep","join","precision","MathUtil","decStr","split","round","factor","pow","q","qVal","abs","Numberbox","quantizeInterval","backgroundColor","fontColor","fontSize","fontFamily","appendString","valConstraintDef","console","log","toFixed","panel","text","overlay","stopPropagation","getVal","textContent","panelWidth","panelHeight","textWidth","textHeight","WidgetStateMixin","isChanged","hasOwnProperty","constrain","_notifyObservers","WidgetOptionsMixin","getOptions","setOptions","WidgetObserverMixin","addObserver","newObserver","observer","removeObserver","targetObserver","idx","splice","Dropmenu","selectedItemIdx","menuItems","itemIdx","item","findIndex","menuItem","setVal","menuItemFontSize","menuItemFontFamily","menuItemVerticalPadding","menuItemHorizontalPadding","selectedItemBackgroundColor","selectedItemFontColor","hasFocus","menuTogglePanel","menuToggleText","menuToggleOverlay","menuBodyCanvasContainer","createElement","menuBodyCanvas","menuBodyPanel","menuItemPanels","menuItemTextboxes","menuItemOverlays","style","position","focus","blur","body","mouseOverItem","targetOverlay","_mouseOverItem","mouseLeaveItem","select","_mouseLeaveItem","hoverOut","_selectItem","_updateEls","display","removeChild","menuItemDims","_calcMenuItemDims","menuDims","curPanel","curTextbox","curOverlay","_addSvgMenuItem","_removeSvgMenuItem","targetPanel","targetTextbox","newItemText","newItemPanel","newItemOverlay","targetItemTexbox","pop","targetItemPanel","targetItemOverlay","maxHeight","maxWidth","bbox","Slider","sliderBodyColor","sliderHandleColor","dims","offsetBottom","offsetTop","bodyWidth","handleWidth","handleHeight","handle","touchBody","_calcTouchVal","touchHandle","moveHandle","releaseHandle","sliderBodyPos","_calcSliderBodyPos","_calcSliderBodyHeight","sliderHandlePoints","_calcSliderHandlePoints","sliderBodyHeight","x0","valRange","bodyY","_getRelativeY","touchVal","Keyboard","bottomNote","_isWhiteKey","topNote","lastNoteEvent","activeNotes","note","pitch","vel","newNote","isVelToggled","_getNewStateFromNewNote","keyBorderColor","blackKeyColor","whiteKeyColor","blackKeyActiveColor","whiteKeyActiveColor","blackKeyHeightAspect","blackKeyWidthAspect","mode","orientation","isEditable","numKeys","_getNumKeys","_addSvgKey","_removeSvgKey","touchVel","ceil","_getKeyboardHeight","_touchKey","targetKey","fill","stroke","blackKeys","notes","activeNote","_updateSvgEls","whiteKeyIdx","_getPitchForKeyIdx","attr","_getWhiteKeyWidth","_setKeyAttributes","noteIdx","newKey","whiteKeyCount","curNote","_getKeyboardWidth","_getNumWhiteKeys","Graph","fixedStartPointY","maxYVal","minYVal","fixedEndPointY","vertices","vtx","vertexArray","xyPair","pos","newVertices","sort","a","b","minXVal","maxXVal","maxNumVertices","quantizeX","quantizeY","xDecimalPrecision","yDecimalPrecision","hasFixedStartPoint","hasFixedEndPoint","vertexColor","lineColor","vertexRadius","lineWidth","isFixedStartPointInitialized","isFixedEndPointInitialized","lines","targetVtx","targetLine","vtxPos0","dx","dy","touchPanel","xPos","clientX","yPos","vertexState","_calcVertexState","addVertex","touchVertex","moveVertex","deleteVertex","touchLine","moveLine","endMoveLine","dPos","_moveLine","_deleteVertex","endMoveVertex","_moveVertex","line","idxSortMap","el","_addSvgVertex","_removeSvgVertex","stateVtx","svgVtx","_calcVertexPos","prevVtx","prevPos","svgLine","vtxIdx","newVertex","_addSvgLine","newLine","vertex","_removeSvgLine","lineIdx","vtx1","vtx2","vtx1curPos","parseInt","getAttribute","vtx2curPos","boundaryBL","boundaryTR","vtx1newPos","vtx2newPos","newPos","vtxState","vertexPos","Multislider","numSliders","sliderColors","sliderVals","sliders","sliderPanels","_setSliderVal","sliderPos","_calcSliderPos","_calcSliderWidth","_calcSliderHeight","_addSvgSlider","_removeSvgSlider","newSliderVals","newSlider","newSliderPanel","targetSlider","targetSliderPanel","targetIdx","sliderPanel","Meter","audioCtx","_initCanvasElements","_initAudioModules","initAmplitude","amplitude","prevAmplitude","peak","peakSetTime","currentTime","scriptProcessor","createScriptProcessor","connect","destination","onaudioprocess","e","_calcAmplitude","inputBuffer","getChannelData","_calcPeak","input","canvas","ctx","getContext","containerDims","ledGradient","createLinearGradient","addColorStop","redraw","ledHeight","peakYPos","clearRect","fillStyle","fillRect","window","requestAnimationFrame","audioSource","buffer","sum","sqrt","dialContainer","getElementById","dialDisplay","nextElementSibling","dial","innerHTML","envelopeGraphContainer","envelopeGraphDisplay","envelopeGraph","keyboardContainer","keyboardDisplay","keyboard","getActiveNotes","an","multisliderContainer","multisliderDisplay","multislider","sliderContainer","sliderDisplay","slider","sliderVal","meterContainer","meterDisplay","AudioContext","meter","osc","createOscillator","lfo1","lfo2","amp1","createGain","amp2","amp3","frequency","value","gain","receiveAudioFrom","start","dropmenuContainer","dropmenuDisplay","dropmenu","setMenuItems","selectedItem","numberboxContainer","numberboxDisplay","numberbox"],"mappings":"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","file":"/doc/ui/ui-doc-bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 37);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap cec844c5efb35df2f50c","/**\n * @class\n * Constraint object represents constraints on a value.\n * Instances of Constraint are used as leaves on a ConstraintSpec definition.\n * A ConstraintSpec useses Constraints to apply a constraint to leaves of an\n * arbitrarily nested object, whose leaves represent values that may be constrained.\n */\nclass Constraint {\n\n  /**\n   * @constructor\n   * @param {object} [spec] - Spec specifying the constraints.\n   * @param {number} [spec.min] - Minimum value.\n   * @param {number} [spec.max] - Maximum value.\n   * @param {array} [spec.enum] - Array of possible enumerable values.\n   * @param {function} [spec.transform] - A transformation function to apply to the value.\n   */\n  constructor(spec) {\n    spec = spec || {};\n\n    this.min = spec.min;\n    this.max = spec.max;\n    this.enum = spec.enum;\n    this.transform = spec.transform;\n  }\n}\n\nexport default Constraint;\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/constraint.js","import Constraint from \"./constraint\";\n\n/**\n * ConstraintSpec is used to apply a constraining function to a state object of arbitrary nestedness,\n * whose leaves are values that need to be constrained (i.e. to min or max values).\n * In order for ConstraintSpec to work properly, it's constructor must be given an object that\n * exactly mirrors the nested structure of the object to be constrained, with the leaves\n * containing instances of the Constraint class. Additional requirements (i.e. how to deal with nested arrays)\n * are outlined below.\n * TODO: expand explanation\n *\n * @class\n */\nclass ConstraintSpec {\n\n  /**\n   * @constructor\n   * @param {object} specDefObj - The constraint spec definition object, which defines the nesting\n   *                              structure of the objects that need to be constrained. The leaves\n   *                              of this specDef object must be objects of type Constraint, which\n   *                              act as the constraint definitions for each leaf.\n   */\n  constructor(specDefObj) {\n    this.constraintMap = [[]];\n    this._parseMap(specDefObj, this.constraintMap[0], this.constraintMap);\n  }\n\n  /**\n   * Check a constraint map for constraint specs and apply them to obj.\n   * Note: will not mutate the original object. New value is returned.\n   * @public\n   * @param {object} targetObj - The state object to check\n   * @return {number | string | object | array} val - The constrained value.\n   */\n  constrain(targetObj) {\n    const _this = this;\n    _this.constraintMap.forEach(keyBranch => {\n      _this._constrainBranch(targetObj, keyBranch);\n    });\n  }\n\n  /**\n   * Apply a constraint.\n   * @private\n   * @param {object} target - The target object to constrain\n   * @param {Constraint} constraint - The constraint object to use.\n   * @param {symbol} key - The key to use to access the constraint.\n   * @return {number | string | object | array} val - The constrained value.\n   */\n  _applyConstraint(target, constraint, key) {\n    if (constraint.min !== undefined) {\n      target[key] = Math.max(target[key], constraint.min);\n    }\n    if (constraint.max !== undefined) {\n      target[key] = Math.min(target[key], constraint.max);\n    }\n    if (constraint.enum !== undefined && constraint.enum instanceof Array) {\n      target[key] = (constraint.enum.find(target[key]) !== undefined) ? target[key] : constraint.enum[0];\n    }\n    if (constraint.transform !== undefined && typeof constraint.transform === \"function\") {\n      target[key] = constraint.transform(target[key]);\n    }\n\n    return target;\n  }\n\n  /**\n   * Parse a constraint map\n   * @private\n   * @param {object} c - The map object currently being examined.\n   *                     At the top level, this would be the whole map.\n   *                     At the terminal level, this would be an instance of Constraint object.\n   * @param {array} keyBranch - An array of keys that will specify how to get to each Constraint.\n   *                            The last element in this array will be the constraint itself.\n   * @param {array} cMap - An mutable array of key branches.\n   */\n  _parseMap(c, keyBranch, cMap) {\n    const _this = this;\n\n    if (c instanceof Array) {\n      /* if c is an array, add \"_arr_\" to the current map, and examine the first element.\n       * all elements in an array are required to have identical structure, so examining\n       * the first one is enough.\n       */\n      keyBranch.push(\"_arr_\");\n      _this._parseMap(c[0], keyBranch, cMap);\n    } else if (c instanceof Object && !(c instanceof Constraint)) {\n      // keep a copy of the parent branch to create new branches from\n      let parentBranch = keyBranch.map(x=>x);\n\n      // create new branch for each key after the first key using the parentBranch clone\n      Object.keys(c).forEach((key, keyIdx) => {\n        if (keyIdx === 0) {\n          keyBranch.push(key);\n          _this._parseMap(c[key], keyBranch, cMap);\n        } else {\n          let newKeyBranch = parentBranch.map(x=>x);\n          cMap.push(newKeyBranch);\n          newKeyBranch.push(key);\n          _this._parseMap(c[key], newKeyBranch, cMap);\n        }\n      });\n    } else if (c instanceof Constraint) {\n\n      // this will be the last element in the branch - the Constraint object itself\n      keyBranch.push(c);\n    }\n  }\n\n  /**\n   * Apply constraints to one branch of the constraint map.\n   * @private\n   * @param {object} targetObj - The state object to apply the constraint to\n   * @param {object} defObj - The constraint definition object to use.\n   * @param {array} keyBranch - An array of keys representing a path to a constraint object.\n   */\n  _constrainBranch(targetObj, keyBranch) {\n    const _this = this;\n\n    let curKey;\n    let constraint = keyBranch[keyBranch.length - 1];\n    let arrFlag = false;\n\n    /* Drill into targetObj and defObj following keyBranch keys\n     * We go to length - 2, because the next-to-last element might be an\n     * array, and the last element is the Constraint object itself.\n     */\n    for (let i = 0; i < keyBranch.length - 2 && !arrFlag; ++i) {\n      curKey = keyBranch[i];\n\n      // if we encounter an array, drill into each corresponding arry element in targetObj\n      if (curKey === \"_arr_\") {\n        arrFlag = true;\n\n        let keyBranchSlice = keyBranch.slice(i + 1, keyBranch.length);\n\n        for (let j = 0; j < targetObj.length; ++j) {\n          _this._constrainBranch(targetObj[j], keyBranchSlice);\n        }\n      } else {\n        targetObj = targetObj[curKey];\n      }\n    }\n\n    // if arrFlag is set, we've encountered an array somewhere other than on the leaves\n    // in this case we don't need to operate on it\n    if (!arrFlag) {\n      // Apply the constraints\n      curKey = keyBranch[keyBranch.length - 2];\n\n      if (curKey === \"_arr_\") {\n        for (let i = 0; i < targetObj.length; ++i) {\n          _this._applyConstraint(targetObj, constraint, i);\n        }\n      } else {\n        _this._applyConstraint(targetObj, constraint, curKey);\n      }\n    }\n  }\n}\n\nexport default ConstraintSpec;\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/constraint-def.js","import WidgetSvgNsMixin from \"./widget-mixin-svgns\";\nimport WidgetStateMixin from \"./widget-mixin-state\";\nimport WidgetOptionsMixin from \"./widget-mixin-options\";\nimport WidgetObserverMixin from \"./widget-mixin-observer\";\n\n'use strict';\n\n/**\n * Abstract base class representing an SVG widget that can be placed inside a DOM container.\n * @class\n * @abstract\n */\nclass Widget {\n\n  /**\n   * @constructor\n   * @mixes WidgetSvgNsMixin\n   * @mixes WidgetStateMixin\n   * @mixes WidgetOptionsMixin\n   * @mixes WidgetObserverMixin\n   * @param {DOM element} container - DOM element that will contain the widget.\n   * @param {object=} o - Options.\n   */\n  constructor(container, o) {\n    if (container === undefined || !(container instanceof Element)) {\n      throw new Error(\"widget requires a DOM element specifying its container as the first argument\");\n    }\n\n    this.container = container;\n\n    o = o || {};\n\n    this.svg = document.createElementNS(this.SVG_NS, \"svg\");\n    this.container.appendChild(this.svg);\n    this.svg.setAttribute(\"width\", this.container.getBoundingClientRect().width);\n    this.svg.setAttribute(\"height\", this.container.getBoundingClientRect().height);\n\n    /* Manifest of containers and namespaces */\n    this.o = {};                 // options namespace\n    this.svgEls = {};            // svg element namespace\n    this.handlers = {};          // mouse and touch event handler namespace\n    this.state = {};             // state namespace\n    this.stateConstraints = {};  // state constraints namespace\n    this.observers = [];         // observer callback container\n\n    this._initOptions(o);\n    this._initStateConstraints();\n    this._initState();\n    this._initSvgEls();\n    this._initHandlers();\n  }\n\n  /**\n   * Initialize the options\n   * @abstract\n   * @protected\n   */\n  _initOptions(o) {}\n\n  /**\n   * Initialize state constraints\n   * @abstract\n   * @protected\n   */\n  _initStateConstraints() {}\n\n  /**\n   * Initialize state\n   * @abstract\n   * @protected\n   */\n  _initState() {}\n\n  /**\n   * Initialize the svg elements.\n   * Each implementation of this method must end with calls to _appendSvgEls() and _update(),\n   * in that order, as shown in this template\n   * @abstract\n   * @protected\n   */\n  _initSvgEls() {}\n\n  /**\n   * Append the newly created svg elements to the svg container.\n   * This method should be called exctly once by each implementation of the _initSvgEls() method.\n   * @protected\n   */\n  _appendSvgEls() {\n    const _this = this;\n\n    Object.values(_this.svgEls).forEach(svgEl => {\n      appendSvgEls(svgEl);\n    });\n\n    function appendSvgEls(child) {\n      if (child instanceof Array) {\n        child.forEach(arrEl => appendSvgEls(arrEl));\n      } else {\n        _this.svg.appendChild(child);\n        child.setAttribute(\"shape-rendering\", \"geometricPrecision\");\n      }\n    }\n  }\n\n  /**\n   * Initialize mouse and touch event handlers\n   * @abstract\n   * @protected\n   */\n  _initHandlers() {}\n\n  /**\n   * Update (redraw) component based on state\n   * @abstract\n   * @protected\n   */\n  _update() {}\n\n  /* ===========================================================================\n  *  PUBLIC API\n  */\n\n  /**\n   * Get public representation of the state.\n   * @abstract\n   * @public\n   */\n  getVal() {}\n\n  /**\n   * Set the current state in a format specific to each widget.\n   * Same as setVal(), but will not cause an observer callback trigger.\n   * @abstract \n   * @public\n   */\n  setInternalVal(newVal) {}\n\n  /**\n   * Set the current state in a format specific to each widget.\n   * Same as setInternalVal(), but will cause an observer callback trigger.\n   * @abstract @public\n   */\n  setVal(newVal) {}\n\n  /**\n   * Get the current state.\n   * @abstract\n   * @public\n   * @returns {object} - Copy of this.state\n   */\n  getState() {}\n\n  /**\n   * Set the current state and redraw.\n   * @description If no new state argument is provided, will reassign old state, taking into account the stateConstraints.\n   * As opposed to setState(), setInternalState() does not trigger observer notification.\n   * Will use Widget.stateConstraints to constrain each state value to each constraints min, max, or enum\n   * @abstract\n   * @public\n   * @param {object} [newState] - The new state.\n   * @returns {boolean} A flag indicating whether the state has been changed.\n   */\n  setInternalState(newState) {}\n\n  /**\n   * Sets the current state and redraws.\n   * @description As opposed to setInternalState(), setState() will call the observer callback functions,\n   * so may lead to an infinate loop if an observer calls this method.\n   * @abstract\n   * @public\n   * @param {object} [newState] - The new state.\n   * @returns {boolean} A flag indicating whether the state has been changed.\n   */\n  setState(newState) {}\n  \n  /* ===========================================================================\n  *  HELPER METHODS\n  */\n\n  /** Helper method: get x relative to the container */\n  _getRelativeX(x) {\n    return x - this._getLeft();\n  }\n\n  /** Helper method: get y relative to the container */\n  _getRelativeY(y) {\n    return y - this._getTop();\n  }\n\n   /** Helper method: get the width of the svg container */\n   _getWidth() {\n     return this.svg.getBoundingClientRect().width;\n   }\n\n   /** Helper method: get the height of the svg container */\n   _getHeight() {\n     return this.svg.getBoundingClientRect().height;\n   }\n\n   /** Helper method: get the top edge position of the svg container */\n   _getTop() {\n     return this.svg.getBoundingClientRect().top;\n   }\n\n   /** Helper method: get the left edge position of the svg container */\n   _getLeft() {\n     return this.svg.getBoundingClientRect().left;\n   }\n}\n\nObject.assign(Widget.prototype, WidgetSvgNsMixin);\nObject.assign(Widget.prototype, WidgetStateMixin);\nObject.assign(Widget.prototype, WidgetOptionsMixin);\nObject.assign(Widget.prototype, WidgetObserverMixin);\n\nexport default Widget;\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget.js","'use strict';\n\nimport Widget from \"ui/core/widget\";\nimport Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\nimport MathUtil from \"util/util-math\";\n\n/**\n * Class representing an SVG Dial widget.\n * @class\n * @implements {Widget}\n */\nclass Dial extends Widget {\n\n  /**\n   * @constructor\n   * @param {object} container - DOM container for the widget.\n   * @param {object=} o - options.\n   * @param {number=0} o.minVal - Minimum value constraint.\n   * @param {number=127} o.maxVal - Maximum value constraint.\n   * @param {number=1} o.stepInterval - Interval of the steps in which the dial changes value. \n   * @param {string=\"#000\"} o.needleColor - Dial needle color.\n   * @param {string=\"#f40\"} o.activeColor - Dial active color.\n   */\n  constructor(container, o) {\n    super(container, o);\n  }\n\n  /* ===========================================================================\n  *  PUBLIC API\n  */\n\n  /**\n   * Returns the dial value.\n   * @public @override\n   * @returns {number} - Value of the dial.\n   */\n  getVal() {\n    return this.state.val;\n  }\n\n  /**\n   * Sets the dial value.\n   * Same as setVal(), but will not trigger observer callbacks.\n   * @public @override\n   * @param {number} newVal - The new value.\n   */\n  setInternalVal(newVal) {\n    this.setInternalState({ val: newVal });\n  }\n\n  /**\n   * Sets the dial value.\n   * Same as setInternalVal(), but will trigger observer callbacks.\n   * @public @override\n   * @param {number} newVal - The new value.\n   */\n  setVal(newVal) {\n    this.setState({ val: newVal });\n  }\n\n  /**\n   * Sets the options. \n   * @public @override\n   * @param {object} o - Options.\n   */\n  setOptions(o) {\n    super.setOptions(o);\n    this.o.stepPrecision = MathUtil.getPrecision(this.o.stepInterval);\n  }\n\n  /* ==============================================================================================\n  *  INITIALIZATION METHODS\n  */\n\n  /**\n   * Initializes the options.\n   * @override\n   * @private\n   */\n  _initOptions(o) {\n    // set the defaults\n    this.o = {\n      minVal: 0,\n      maxVal: 127,\n      stepInterval: 1,\n      needleColor: \"#414141\",\n      activeColor: \"#f40\",\n      mouseSensitivity: 1.2\n    };\n\n    // override defaults with provided options\n    super._initOptions(o);\n\n    // set the precision based on the step interval\n    this.o.stepPrecision =  MathUtil.getPrecision(this.o.stepInterval);\n  }\n\n  /**\n   * Initializes state constraints.\n   * @override\n   * @private\n   */\n  _initStateConstraints() {\n    const _this = this;\n\n    this.stateConstraints = new ConstraintSpec({\n      val: new Constraint({\n        min: _this.o.minVal,\n        max: _this.o.maxVal,\n        transform: num => MathUtil.quantize(num, _this.o.stepInterval, _this.o.stepPrecision)\n      })\n    });\n  }\n\n  /**\n   * Initializes state.\n   * @override\n   * @private\n   */\n  _initState() {\n    this.state = {\n      val: 0\n    };\n  }\n\n  /**\n   * Initializes the svg elements.\n   * @override\n   * @private\n   */\n  _initSvgEls() {\n    const _this = this;\n\n    this.svgEls = {\n      bgArc: document.createElementNS(this.SVG_NS, \"path\"),\n      activeArc: document.createElementNS(this.SVG_NS, \"path\"),\n      needle: document.createElementNS(this.SVG_NS, \"line\")\n    };\n\n    // draw the background arc\n    this.svgEls.bgArc.setAttribute(\"d\",\n      _this._calcSvgArcPath(\n        _this._calcNeedleCenter().x,\n        _this._calcNeedleCenter().y,\n        _this._calcDialRadius(),\n        0.67 * Math.PI,\n        2.35 * Math.PI\n    ));\n    this.svgEls.bgArc.setAttribute(\"stroke-width\", _this._calcArcStrokeWidth());\n    this.svgEls.bgArc.setAttribute(\"stroke\", _this.o.needleColor);\n    this.svgEls.bgArc.setAttribute(\"fill\", \"transparent\");\n    this.svgEls.bgArc.setAttribute(\"stroke-linecap\", \"round\");\n\n    // draw the active arc\n    this.svgEls.activeArc.setAttribute(\"stroke-width\", _this._calcArcStrokeWidth());\n    this.svgEls.activeArc.setAttribute(\"stroke\", _this.o.activeColor);\n    this.svgEls.activeArc.setAttribute(\"fill\", \"transparent\");\n    this.svgEls.activeArc.setAttribute(\"stroke-linecap\", \"round\");\n\n    // draw the needle\n    this.svgEls.needle.setAttribute(\"x1\", _this._calcNeedleCenter().x);\n    this.svgEls.needle.setAttribute(\"y1\", _this._calcNeedleCenter().y);\n    this.svgEls.needle.setAttribute(\"x2\", _this._calcNeedleEnd().x);\n    this.svgEls.needle.setAttribute(\"y2\", _this._calcNeedleEnd().y);\n    this.svgEls.needle.setAttribute(\"stroke-width\", _this._calcNeedleWidth());\n    this.svgEls.needle.setAttribute(\"stroke\", _this.o.needleColor);\n    this.svgEls.needle.setAttribute(\"z-index\", \"1000\");\n    this.svgEls.needle.setAttribute(\"stroke-linecap\", \"round\");\n\n    this._appendSvgEls();\n    this._update();\n  }\n\n  /**\n   * Initializes mouse and touch event handlers.\n   * @override\n   * @private\n   */\n   _initHandlers() {\n      const _this = this;\n\n      let y0 = 0;\n      let yD = 0;\n      let newVal = _this.getState().val;\n\n      this.handlers = {\n       touch: function(ev) {\n         y0 = ev.clientY;\n\n         document.addEventListener(\"mousemove\", _this.handlers.move);\n         document.addEventListener(\"touchmove\", _this.handlers.move);\n         document.addEventListener(\"mouseup\", _this.handlers.release);\n         document.addEventListener(\"touchend\", _this.handlers.release);\n       },\n       move: function(ev) {\n         ev.preventDefault();\n\n         yD = y0 - ev.clientY;\n         y0 = ev.clientY;\n\n         newVal = _this.state.val + (yD * _this.o.mouseSensitivity * _this._calcMovePrecision());\n         newVal = Math.max(newVal, _this.o.minVal);\n         newVal = Math.min(newVal, _this.o.maxVal);\n\n         _this.setState({\n           val: newVal\n         });\n       },\n       release: function() {\n         document.removeEventListener(\"mousemove\", _this.handlers.move);\n         document.removeEventListener(\"touchmove\", _this.handlers.move);\n       }\n      };\n\n      this.svg.addEventListener(\"mousedown\", _this.handlers.touch);\n      this.svg.addEventListener(\"touchstart\", _this.handlers.touch);\n   }\n\n  /**\n   * Updates (redraws) components based on state.\n   * @override\n   * @private\n   */\n   _update() {\n     // change the needle angle\n     this.svgEls.needle.setAttribute(\"x1\", this._calcNeedleCenter().x);\n     this.svgEls.needle.setAttribute(\"y1\", this._calcNeedleCenter().y);\n     this.svgEls.needle.setAttribute(\"x2\", this._calcNeedleEnd().x);\n     this.svgEls.needle.setAttribute(\"y2\", this._calcNeedleEnd().y);\n\n     // change the active arc length\n     this.svgEls.activeArc.setAttribute(\"d\",\n       this._calcSvgArcPath(\n         this._calcNeedleCenter().x,\n         this._calcNeedleCenter().y,\n         this._calcDialRadius(),\n         0.65 * Math.PI,\n         this._calcNeedleAngle() - 0.5 * Math.PI\n     ));\n\n     // if the value is at min, change the color to match needle color\n     // - otherwise the active part will be visible beneath the needle\n     if (this.state.val === this.o.minVal) {\n       this.svgEls.activeArc.setAttribute(\"stroke\", this.o.needleColor);\n     } else {\n       this.svgEls.activeArc.setAttribute(\"stroke\", this.o.activeColor);\n     }\n   }\n\n  /* ==============================================================================================\n  *  INTERNAL FUNCTIONALITY METHODS\n  */\n\n   /** \n    * Calcultes the stroke width for the background and active arcs.\n    * @private\n    * @returns {number} - Arc stroke width;\n    */\n   _calcArcStrokeWidth() {\n     return this._calcDialRadius() / 5;\n   }\n\n   /** \n    * Calculates the dial radius.\n    * @private\n    * @returns {number} - Radius of the dial.\n    */\n   _calcDialRadius() {\n     let radius = (Math.min(this._getWidth(), this._getHeight()) / 2) * 0.89;\n     radius = Math.trunc(radius);\n     return radius;\n   }\n\n   /** \n    * Calculates the needle angle for a given state val.\n    * @private\n    * @returns {number} - Angle of the needle.\n    */\n   _calcNeedleAngle() {\n     const _this = this;\n\n     return (\n              // protect against divide by 0:\n              ((this.o.maxVal - _this.o.minVal) !== 0) ?\n                  (  \n                    (_this.state.val - _this.o.minVal) / (_this.o.maxVal - _this.o.minVal) * (1.7 * Math.PI) + \n                    (1.15 * Math.PI)\n                  )  \n                : ( 0.5 * (1.7 * Math.PI) + (1.15 * Math.PI) )\n            );\n   }\n\n   /** \n    * Calculates the center of the needle.\n    * @private\n    * @returns {object} - {x, y} object representing the needle center coordinates.\n    */\n   _calcNeedleCenter() {\n     const _this = this;\n     return {\n       x: Math.trunc(_this._getWidth() / 2),\n       y: Math.trunc(_this._getHeight() / 2)\n     };\n   }\n\n   /** \n    * Calculates the position of end of the needle\n    * @private\n    * @returns {object} - {x, y} object representing the end of the needle. \n    */\n   _calcNeedleEnd() {\n     const _this = this;\n     return {\n       x: _this._calcNeedleCenter().x + (Math.sin(_this._calcNeedleAngle()) * _this._calcDialRadius()),\n       y: _this._calcNeedleCenter().y - (Math.cos(_this._calcNeedleAngle()) * _this._calcDialRadius())\n     };\n   }\n\n   /** \n    * Calculates the needle width.\n    * @private\n    * @returns {number} - The width of the needle in px.\n    */\n   _calcNeedleWidth() {\n     return this._calcDialRadius() / 5;\n   }\n\n   /** \n    * Calculates the path for an svg arc based on cx, cy, r, startAngle, endAngle.\n    * The input parameters are the way arcs are represented in HTML canvas.\n    * @private\n    * @param {number} cx - Center X.\n    * @param {number} cy - Center Y.\n    * @param {number} r - Radius.\n    * @param {number} startAngle - Start angle in radians.\n    * @param {number} endAngle - End angle in radians.\n    * @returns {string} - A string to be used for the arc path by an SVG arc object.\n    */\n   _calcSvgArcPath(cx, cy, r, startAngle, endAngle) {\n     let x1 = cx + (r * Math.cos(startAngle));\n     let y1 = cy + (r * Math.sin(startAngle));\n     let x2 = cx + (r * Math.cos(endAngle));\n     let y2 = cy + (r * Math.sin(endAngle));\n     let largeArc = (endAngle - startAngle) < Math.PI ? 0 : 1;\n     let sweep = (endAngle - startAngle) < Math.PI ? 1 : 1;\n\n     return [\"M\", x1, y1, \"A\", r, r, 0, largeArc, sweep, x2, y2].join(\" \");\n   }\n\n   /**\n    * Calculates the precision with which the state value changes when moved.\n    */\n   _calcMovePrecision() {\n     let precision = (this.o.maxVal - this.o.minVal) / 127;\n     return precision;\n   }\n}\n\nexport default Dial;\n\n\n// WEBPACK FOOTER //\n// ./src/ui/dial.js","/**\n * Useful Math Utility functions\n */\nlet MathUtil = {\n\n  /**\n   * Returns the decimal precision of a number.\n   * @param {number} val - The value whose precision to check.\n   * @returns {number} - Number of decimal places.\n   */\n  getPrecision(val) {\n    let decStr = (''+val).split('.')[1];\n    return (decStr ? decStr.length : 0);\n  },\n\n  /**\n   * Round a number to specified decimal precision.\n   * Same as Number.prototype.toFixed, but does not use toString.\n   * @param {nubmer} val - Value to be rounded.\n   * @param {precision} val - \n   * @returns  \n   */\n  round: function round(val, precision) {\n    let factor = Math.pow(10, precision);\n    return Math.round(val * factor) / factor;\n  },\n\n  /**\n   * Quantize a value (set it to the closest value matching the interval)\n   * Note: result will not necessarily reflect the same number of places of\n   * as the q input due to floating point arithmetic.\n   * @param {number} val - Value to quantize.\n   * @param {number} q - The quantization interval.\n   * @param {number} precision - The decimal precision of the result.\n   * @returns {number} qVal - Quantized val.\n   */\n  quantize: function quantize(val, q, precision) {\n    let qVal;\n\n    if (q == 0) {\n      return 0;\n    } else if (q < 0) {\n      q = Math.abs(q);\n    }\n\n    // quantize\n    qVal = ~~(val / q) * q;\n\n    qVal = Math.abs(val - qVal) > (q / 2) ? \n            qVal > 0 ? \n              qVal + q\n            : qVal - q\n          : qVal;\n\n    if (precision !== undefined) {\n      qVal = MathUtil.round(qVal, precision);\n    }\n\n    return qVal;\n  },\n\n  /**\n   * Alias for quantize(val, q)\n   * @param {number} val - Value to quantize\n   * @param {number} q - The quantization interval\n   * @param {number} precision - The decimal precision of the result.\n   * @returns {number} qVal - Quantized val\n   */\n  q: function q(val, q, precision) {\n    return MathUtil.quantize(val, q, precision);\n  }\n};\n\nexport default MathUtil;\n\n\n// WEBPACK FOOTER //\n// ./src/util/util-math.js","import Widget from \"ui/core/widget\";\nimport Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\n\n'use strict';\n\n/**\n * Class representing an Numberbox widget.\n * @class\n * @implements {Widget}\n */\nclass Numberbox extends Widget {\n\n  /**\n   * @constructor\n   * @param {object} container - DOM container for the widget.\n   * @param {object} [o] - Options.\n   * @param {number} [o.minVal=null] - Minimum value. \n   * @param {number} [o.maxVal=null] - Maximum value.\n   * @param {number} [o.precision=0] - Number of decimal places to use.\n   * @param {string} [o.backgroundColor=\"#282828\"] - The background color.\n   * @param {string} [o.fontColor=\"#aaa\"] - The font color.\n   * @param {string} [o.fontSize=\"12px\"] - The font size.\n   * @param {string} [o.fontFamily=\"Arial\"] - The font family.\n   * @param {string} [o.appendString=\"\"] - String to append to the value when displaying (i.e. \" Hz\").\n   */\n  constructor(container, o) {\n    super(container, o);\n  }\n\n  /* ==============================================================================================\n  *  PUBLIC API\n  */\n\n  /**\n   * Returns the current value.\n   * @public @override\n   * @returns {number} - Current value.\n   */\n  getVal() {\n    return this.state.val;\n  }\n\n  /**\n   * Sets the current value.\n   * Same as setVal(), but will not cause an observer callback trigger.\n   * @public @override\n   * @param {number} newVal - The new value.\n   */\n  setInternalVal(newVal) {\n    this.setInternalState({ val: newVal });\n  }\n\n  /**\n   * Sets the current value.\n   * Same as setInternalVal(), but will cause an observer callback trigger.\n   * @public @override\n   * @param {number} newVal - The new value.\n   */\n  setVal(newVal) {\n    this.setState({ val: newVal });\n  }\n\n  /* ==============================================================================================\n  *  INITIALIZATION METHODS\n  */\n\n  /**\n   * Initializes the options.\n   * @private @override\n   */\n  _initOptions(o) {\n    // set the defaults\n    this.o = {\n      minVal: 0,\n      maxVal: 127,\n      precision: 0,\n      quantizeInterval: 1, \n      backgroundColor: \"#282828\",\n      fontColor: \"#ccc\",\n      fontSize: \"12px\",\n      fontFamily: \"Arial\",\n      appendString: \"\",\n      mouseSensitivity: 1.2\n    };\n\n    // override defaults with provided options\n    super._initOptions(o);\n  }\n\n  /**\n   * Initializes state constraints.\n   * @private @override\n   */\n  _initStateConstraints() {\n    const _this = this;\n\n    let valConstraintDef = {\n      transform: (num) => {\n        console.log(\"val: \", _this.state.val, \"num: \", num); \n        return num.toFixed(0); \n      }\n    };\n\n    if (this.o.minVal !== null) {\n      valConstraintDef.minVal = this.o.minVal;\n    }\n\n    if (this.o.maxVal !== null) {\n      valConstraintDef.maxVal = this.o.maxVal;\n    }\n\n    this.stateConstraints = new ConstraintSpec({\n      val: new Constraint(valConstraintDef)\n    });\n  }\n\n  /**\n   * Initializes the state.\n   * @private @override\n   */\n  _initState() {\n    this.state = {\n      val: 0\n    };\n  }\n\n  /**\n   * Initializes the svg elements.\n   * @private @override\n   */\n  _initSvgEls() {\n    const _this = this;\n\n    this.svgEls = {\n      panel: document.createElementNS(_this.SVG_NS, \"rect\"),\n      text: document.createElementNS(_this.SVG_NS, \"text\"),\n      overlay: document.createElementNS(_this.SVG_NS, \"rect\"),\n    };\n\n    this.svgEls.text.setAttribute(\"alignment-baseline\", \"middle\");\n    this.svgEls.text.setAttribute(\"text-anchor\", \"middle\");\n\n    this._appendSvgEls();\n    this._update();\n  }\n\n  /**\n   * Initializes mouse and touch event handlers.\n   * @private @override\n   */\n  _initHandlers() {\n    const _this = this;\n    \n    let y0 = 0;\n    let yD = 0;\n    let newVal = _this.getState().val;\n\n    this.handlers = {\n\n      touch: function(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        y0 = ev.clientY;\n\n        document.addEventListener(\"mousemove\", _this.handlers.move);\n        document.addEventListener(\"touchmove\", _this.handlers.move);\n        document.addEventListener(\"mouseup\", _this.handlers.release);\n        document.addEventListener(\"touchend\", _this.handlers.release);\n      },\n\n      move: function(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        yD = y0 - ev.clientY;\n\n        newVal = _this.getVal() + (yD * _this.o.mouseSensitivity);\n\n        _this.setState({\n          val: newVal\n        });\n      },\n\n      release: function(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        document.removeEventListener(\"mousemove\", _this.handlers.move);\n        document.removeEventListener(\"touchmove\", _this.handlers.move);\n      }\n    };\n\n    this.svg.addEventListener(\"mousedown\", _this.handlers.touch);\n    this.svg.addEventListener(\"touchstart\", _this.handlers.touch);\n  }\n\n  /**\n   * Updates (redraws) components based on state.\n   * @private @override\n   */\n  _update() {\n    const _this = this;\n\n    this.svgEls.text.textContent = this.state.val + this.o.appendString;\n\n    let panelWidth = _this._getWidth();\n    let panelHeight = _this._getHeight();\n    let textWidth = this.svgEls.text.getBoundingClientRect().width;\n    let textHeight = this.svgEls.text.getBoundingClientRect().height;\n\n    this.svgEls.panel.setAttribute(\"fill\", _this.o.backgroundColor);\n    this.svgEls.panel.setAttribute(\"width\", panelWidth);\n    this.svgEls.panel.setAttribute(\"height\", panelHeight);\n\n    this.svgEls.text.setAttribute(\"x\", panelWidth / 2);\n    this.svgEls.text.setAttribute(\"y\", panelHeight / 2);\n    this.svgEls.text.setAttribute(\"fill\", _this.o.fontColor);\n\n    this.svgEls.overlay.setAttribute(\"fill\", \"transparent\");\n    this.svgEls.overlay.setAttribute(\"width\", _this._getWidth());\n    this.svgEls.overlay.setAttribute(\"height\", _this._getHeight());\n  }\n\n  /* ==============================================================================================\n  *  INTERNAL FUNCTIONALITY METHODS\n  */\n}\n\nexport default Numberbox;\n\n\n// WEBPACK FOOTER //\n// ./src/ui/numberbox.js","/**\n * Mixin specifying the xml namespace for SVG\n * @mixin\n */\nconst SVG_NS = { SVG_NS: \"http://www.w3.org/2000/svg\" };\n\nexport default SVG_NS;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget-mixin-svgns.js","import Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\n\n/**\n * Mixin for methods related to state management\n * @mixin\n */\nlet WidgetStateMixin = {\n\n  /**\n   * Get the current state.\n   *\n   * @public\n   * @returns {object} - Copy of this.state\n   */\n  getState: function getState() {\n    return Object.assign({}, this.state);\n  },\n\n  /**\n   * Set the current state and redraw.\n   *\n   * @description If no new state argument is provided, will reassign old state, taking into account the stateConstraints.\n   * As opposed to setState(), setInternalState() does not trigger observer notification.\n   * Will use Widget.stateConstraints to constrain each state value to each constraints min, max, or enum\n   *\n   * @protected\n   * @param {object=} newState - The new state.\n   * @return {boolean} isChanged - Returns a boolean indicating whether the state has been changed\n   */\n  setInternalState: function setInternalState(newState) {\n    const _this = this;\n    let isChanged = false;\n\n    newState = newState || this.getState();\n\n    Object.keys(newState).forEach(key => {\n      if (_this.state.hasOwnProperty(key) && _this.state[key] !== newState[key]) {\n        _this.state[key] = newState[key];\n        isChanged = true;\n      }\n    });\n\n    _this.stateConstraints.constrain(_this.state);\n    this._update();\n\n    return isChanged;\n  },\n\n  /**\n   * Set the current state and redraw.\n   *\n   * @description As opposed to setInternalState(), setState() will call the observer callback functions,\n   * so may lead to an infinate loop if an observer calls this method.\n   *\n   * @protected\n   * @param {object=} newState - The new state.\n   * @return {boolean} isChanged - Returns a boolean indicating whether the state has been changed\n   */\n  setState: function setState(newState) {\n    const _this = this;\n    let isChanged = false;\n\n    isChanged = this.setInternalState(newState);\n\n    this._notifyObservers();\n\n    return isChanged;\n  }\n};\n\nexport default WidgetStateMixin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget-mixin-state.js","/**\n * Mixin for methods related to options\n * @mixin\n */\nlet WidgetOptionsMixin = {\n\n  /**\n   * Initializes the options.\n   * @private\n   * @param {object} o - Options.\n   */\n  _initOptions: function _initOptions(o) {\n    const _this = this;\n    o = o || {};\n\n    Object.keys(o).forEach(key => {\n      if (_this.o.hasOwnProperty(key) && _this.o[key] !== o[key]) {\n        _this.o[key] = o[key];\n      }\n    });\n  },\n\n  /**\n   * Get the options object\n   * @public\n   * @return {object} this.o - Options\n   */\n  getOptions: function getOptions() {\n    return Object.assign({}, this.o);\n  },\n\n  /**\n   * Set the options\n   * Uses a diffing function, so only specified keys that have new values will be changed\n   * @public\n   * @param {object} o - options\n   * @return {boolean} isChanged - Returns a boolean indicating whether any option has been changed\n   */\n  setOptions: function setOptions(o) {\n    const _this = this;\n    o = o || {};\n    let isChanged = false;\n\n    Object.keys(o).forEach(key => {\n      if (_this.o.hasOwnProperty(key) && _this.o[key] !== o[key]) {\n        _this.o[key] = o[key];\n        isChanged = true;\n      }\n    });\n\n    if (isChanged) {\n      this.setState();\n    }\n\n    return isChanged;\n  }\n};\n\nexport default WidgetOptionsMixin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget-mixin-options.js","/**\n * Mixin for methods related to observer callback support\n * @mixin\n */\nlet WidgetObserverMixin = {\n\n  /**\n   * Register a new observer function that will recieve the state value every time the state is updated.\n   * @public\n   * @param {function} newObserver - The new observer function to be notified every time the state changes.\n   * @return {boolean} isChanged - Indicates whether an observer was added.\n   */\n  addObserver: function addObserver(newObserver) {\n    let isChanged = false;\n\n    if (!(this.observers.find(observer => observer === newObserver))) {\n      this.observers.push(newObserver);\n      isChanged = true;\n    }\n\n    return isChanged;\n  },\n\n  /**\n   * Remove an observer function from being notified when the state changes.\n   * @public\n   * @param {function} targetObserver - The observer function to be removed.\n   * @return {boolean} isChanged - Indicates whether an observer has been removed\n   */\n  removeObserver: function removeObserver(targetObserver) {\n    const _this = this;\n    let isChanged = false;\n\n    this.observers.forEach((observer, idx) => {\n      if (observer === targetObserver) {\n        _this.observers.splice(idx, 1);\n        isChanged = true;\n      }\n    });\n\n    return isChanged;\n  },\n\n  /**\n   * Notify all observers of new state\n   * @protected\n   */\n  _notifyObservers() {\n    const _this = this;\n    this.observers.forEach(observer => observer(_this.getVal()));\n  }\n};\n\nexport default WidgetObserverMixin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget-mixin-observer.js","'use strict';\n\nimport Widget from \"ui/core/widget\";\nimport Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\n\n/**\n * Class representing an Dropmenu widget.\n * @class\n * @implements {Widget}\n */\nclass Dropmenu extends Widget {\n\n  /**\n   * @constructor\n   * @param {object} container - DOM container for the widget.\n   * @param {object} [o] - Options.\n   * @param {object} [o.menuItems=[]] - The items to populate the menu with.\n   * @param {string} [o.backgroundColor=\"#282828\"] - The background color.\n   * @param {string} [o.fontColor=\"#ccc\"] - The font color.\n   * @param {string} [o.fontSize=\"12px\"] - The font size.\n   * @param {string} [o.fontFamily=\"Arial\"] - The font family.\n   * @param {string} [o.menuItemFontSize=\"12px\"] - The font size for items in the opened drop-down menu.\n   * @param {string} [o.menuItemFontFamily=\"Arial\"] - The font family for items in the opened drop-down menu.\n   * @param {string} [o.selectedItemBackgroundColor=\"#f40\"] - The background cover for the selected (hovered) item in the opened drop-down menu.\n   * @param {string} [o.selectedItemFontColor=\"#fff\"] - The font color for the selected (hovered) item in the opened drop-down menu.\n   * @param {number} [o.menuItemHorizontalPadding=10] - Extra horizontal padding to add to each menu item.\n   * @param {number} [o.menuItemVerticalPadding=5] - Extra vertical padding to add to each menu item. \n   */\n  constructor(container, o) {\n    super(container, o);\n  }\n\n  /* ==============================================================================================\n  *  PUBLIC API\n  */\n\n  /**\n   * Returns the currently selected menu item index.\n   * @public @override\n   * @returns {number} - Index of the item currently selected.\n   */\n  getVal() {\n    return this.state.selectedItemIdx;\n  }\n\n  /**\n   * Returns the string representing the currently selected item.\n   * @public\n   * @returns {string} - The string representing the selected item.\n   */\n  getSelectedItem() {\n    return this.state.menuItems[this.state.selectedItemIdx];\n  }\n\n  /**\n   * Sets the currently selected menu item.\n   * Same as setVal(), but will not cause an observer callback trigger.\n   * @public @override\n   * @param {number} itemIdx - Index of the item to be selected.\n   */\n  setInternalVal(itemIdx) {\n    this.setInternalState({ selectedItemIdx: itemIdx });\n  }\n\n  /**\n   * Sets the currently selected menu item.\n   * Same as setInternalVal(), but will cause an observer callback trigger.\n   * @public @override\n   * @param {number} itemIdx - Index of the item to be selected.\n   */\n  setVal(itemIdx) {\n    this.setState({ selectedItemIdx: itemIdx });\n  }\n\n  /**\n   * Sets the selected menu item by index.\n   * Same as setInternalSelectionIdx(), but will cause an observer callback trigger.\n   * @param {number} itemIdx - Index of the item to be selected.\n   */\n  setSelectionIdx(itemIdx) {\n    this.setState({ selectedItemIdx: itemIdx });\n  }\n\n  /**\n   * Sets the selected menu item by index.\n   * Same as setSelectionIdx(), but will not cause an observer callback trigger.\n   * @param {number} itemIdx - Index of the item to be selected.\n   */\n  setInternalSelectionIdx(itemIdx) {\n    this.setInternalState({ selectedItemIdx: itemIdx });\n  }\n\n  /**\n   * Sets the selected menu item according to a string argument specifying which item to select.\n   * If the argument is not one of the menu items, the selection will not change.\n   * Same as setInternalSelectedItem(), but will cause and observer callback trigger.\n   * @param {string} item - The item to select\n   * @returns {number} - Index of the item selected.\n   */\n  setSelectedItem(item) {\n    let idx = this.state.menuItems.findIndex(menuItem => item === menuItem);\n\n    if (idx !== -1) {\n      this.setVal(idx);\n    } else {\n      idx = this.state.selectedItemIdx;\n    }\n\n    return idx;\n  }\n\n  /**\n   * Sets the selected menu item according to a string argument specifying which item to select.\n   * If the argument is not one of the menu items, the selection will not change.\n   * Same as setSelectedItem(), but will not cause and observer callback trigger.\n   * @param {string} item - The item to select\n   * @returns {number} - Index of the item selected.\n   */\n  setInternalSelectedItem(item) {\n    let idx = this.state.menuItems.findIndex(menuItem => item === menuItem);\n    \n    if (idx !== -1) {\n      this.setVal(idx);\n    } else {\n      idx = this.state.selectedItemIdx;\n    }\n\n    return idx;\n  }\n\n  /**\n   * Sets the list of available menu items.\n   * @public @override\n   * @param {array} menuItems - Array of menu items to use.\n   */\n  setMenuItems(menuItems) {\n    this.setState({ menuItems: menuItems});\n  }\n\n  /* ==============================================================================================\n  *  INITIALIZATION METHODS\n  */\n\n  /**\n   * Initializes the options.\n   * @private @override\n   */\n  _initOptions(o) {\n    // set the defaults\n    this.o = {\n      menuItems: [],\n      backgroundColor: \"#282828\",\n      fontColor: \"#ccc\",\n      fontSize: \"12px\",\n      fontFamily: \"Arial\",\n      menuItemFontSize: \"12px\",\n      menuItemFontFamily: \"Arial\",\n      menuItemVerticalPadding: 5, \n      menuItemHorizontalPadding: 10,\n      selectedItemBackgroundColor: \"#f40\",\n      selectedItemFontColor: \"#fff\",\n      mouseSensitivity: 1.2\n    };\n\n    // override defaults with provided options\n    super._initOptions(o);\n  }\n\n  /**\n   * Initializes state constraints.\n   * @private @override\n   */\n  _initStateConstraints() {\n    const _this = this;\n\n    this.stateConstraints = new ConstraintSpec({\n      menuItems: [new Constraint()],\n      selectedItemIdx: new Constraint(),\n      hasFocus: new Constraint()\n    });\n  }\n\n  /**\n   * Initializes the state.\n   * @private @override\n   */\n  _initState() {\n    this.state = {\n      menuItems: this.o.menuItems,\n      selectedItemIdx: 0,\n      hasFocus: false\n    };\n  }\n\n  /**\n   * Initializes the svg elements.\n   * @private @override\n   */\n  _initSvgEls() {\n    const _this = this;\n\n    /* The following components are used:\n     *  Panels are the background\n     *  Text is where the text lives\n     *  Overlays are transparent and are used to listen to mouse events\n     */\n    this.svgEls = {\n      menuTogglePanel: document.createElementNS(_this.SVG_NS, \"rect\"),\n      menuToggleText: document.createElementNS(_this.SVG_NS, \"text\"),\n      menuToggleOverlay: document.createElementNS(_this.SVG_NS, \"rect\"),\n      menuBodyCanvasContainer: document.createElement(\"div\"),\n      menuBodyCanvas: document.createElementNS(_this.SVG_NS, \"svg\"),\n      menuBodyPanel: document.createElementNS(_this.SVG_NS, \"rect\"),\n      menuItemPanels: [],\n      menuItemTextboxes: [],\n      menuItemOverlays: []\n    };\n\n    this.svg.appendChild(this.svgEls.menuTogglePanel);\n    this.svg.appendChild(this.svgEls.menuToggleText);\n    this.svg.appendChild(this.svgEls.menuToggleOverlay);\n\n    this.svgEls.menuToggleText.setAttribute(\"alignment-baseline\", \"middle\");\n\n    // menu body (the part that is hidden unless toggled)\n\n    this.svgEls.menuBodyCanvasContainer.style.position = \"relative\";\n    this.container.appendChild(this.svgEls.menuBodyCanvasContainer);\n    this.svgEls.menuBodyCanvas = document.createElementNS(_this.SVG_NS, \"svg\");\n    this.svgEls.menuBodyCanvasContainer.appendChild(this.svgEls.menuBodyCanvas);\n    this.svgEls.menuBodyCanvas.style.position = \"absolute\";\n    this.svgEls.menuBodyCanvas.style.transform = \"translateY(-5px)\";\n    this.svgEls.menuBodyCanvas.appendChild(this.svgEls.menuBodyPanel);\n\n    this._update();\n  }\n\n  /**\n   * Initializes mouse and touch event handlers.\n   * @private @override\n   */\n  _initHandlers() {\n    const _this = this;\n\n    this.handlers = {\n\n      touch: function touch(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        _this.handlers.focus(ev);\n      },\n\n      focus: function focus(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        _this.setInternalState({ hasFocus: true });\n\n        _this.svgEls.menuToggleOverlay.removeEventListener(\"mousedown\", _this.handlers.touch);\n        _this.svgEls.menuToggleOverlay.removeEventListener(\"touchstart\", _this.handlers.touch);\n        _this.svgEls.menuToggleOverlay.addEventListener(\"mousedown\", _this.handlers.blur);\n        _this.svgEls.menuToggleOverlay.addEventListener(\"touchstart\", _this.handlers.blur);\n       \n        document.body.addEventListener(\"mousedown\", _this.handlers.blur);\n        document.body.addEventListener(\"touchstart\", _this.handlers.blur);\n      },\n\n      blur: function blur(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        _this.setInternalState({ hasFocus: false });\n\n        _this.svgEls.menuToggleOverlay.removeEventListener(\"mousedown\", _this.handlers.blur);\n        _this.svgEls.menuToggleOverlay.removeEventListener(\"touchstart\", _this.handlers.blur);\n        _this.svgEls.menuToggleOverlay.addEventListener(\"mousedown\", _this.handlers.touch);\n        _this.svgEls.menuToggleOverlay.addEventListener(\"touchstart\", _this.handlers.touch);\n        document.body.removeEventListener(\"mousedown\", _this.handlers.blur);\n        document.body.removeEventListener(\"touchstart\", _this.handlers.blur);\n      },\n\n      mouseOverItem: function mouseOverItem(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        let targetOverlay = ev.target;\n        _this._mouseOverItem(targetOverlay);\n\n        targetOverlay.addEventListener(\"mouseleave\", _this.handlers.mouseLeaveItem);\n        targetOverlay.addEventListener(\"mouseup\", (ev) => {\n          _this.handlers.select(ev);\n          _this.handlers.blur(ev);\n        });\n        targetOverlay.addEventListener(\"touchend\", (ev) => {\n          _this.handlers.select(ev);\n          _this.handlers.blur(ev);\n        });\n        \n        document.body.removeEventListener(\"mousedown\", _this.handlers.blur);\n        document.body.removeEventListener(\"touchstart\", _this.handlers.blur);\n      },\n\n      mouseLeaveItem: function mouseLeaveItem(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        let targetOverlay = ev.target;   \n        _this._mouseLeaveItem(ev.target, false);\n\n        targetOverlay.removeEventListener(\"mouseleave\", _this.handlers.hoverOut);\n\n        document.body.addEventListener(\"mousedown\", _this.handlers.blur);\n        document.body.addEventListener(\"touchstart\", _this.handlers.blur);\n      },\n\n      select: function select(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        _this._selectItem(ev.target);\n      }\n    };\n\n    this.svgEls.menuToggleOverlay.addEventListener(\"mousedown\", this.handlers.touch);\n    this.svgEls.menuToggleOverlay.addEventListener(\"touchstart\", this.handlers.touch);\n  }\n\n  /**\n   * Updates (redraws) components based on state.\n   * @private @override\n   */\n  _update() {\n    const _this = this;\n\n    _this._updateEls();\n\n    for (let i = 0; i < _this.state.menuItems.length; ++i) {\n      _this.svgEls.menuItemTextboxes[i].textContent = _this.state.menuItems[i];\n    }\n\n    // Set attributes for the toggle area\n    this.svgEls.menuTogglePanel.setAttribute(\"fill\", _this.o.backgroundColor);\n    this.svgEls.menuTogglePanel.setAttribute(\"width\", _this._getWidth());\n    this.svgEls.menuTogglePanel.setAttribute(\"height\", _this._getHeight());\n\n    this.svgEls.menuToggleText.setAttribute(\"width\", _this._getWidth());\n    this.svgEls.menuToggleText.setAttribute(\"height\", _this._getHeight());\n    this.svgEls.menuToggleText.setAttribute(\"x\", 10);\n    this.svgEls.menuToggleText.setAttribute(\"y\", _this._getHeight() / 2);\n    this.svgEls.menuToggleText.setAttribute(\"fill\", _this.o.fontColor);\n\n    this.svgEls.menuToggleOverlay.setAttribute(\"fill\", \"transparent\");\n    this.svgEls.menuToggleOverlay.setAttribute(\"width\", _this._getWidth());\n    this.svgEls.menuToggleOverlay.setAttribute(\"height\", _this._getHeight());\n\n    this.svgEls.menuToggleText.textContent = _this.state.menuItems[_this.state.selectedItemIdx];\n    \n    // Set attributes for the menu body\n    if (this.state.hasFocus) {\n      this.svgEls.menuBodyCanvas.style.display = \"inline-block\";\n\n      // reappend the svg canvas for the menu body so that it appears on top of other elements\n      this.svgEls.menuBodyCanvasContainer.removeChild(this.svgEls.menuBodyCanvas);\n      this.svgEls.menuBodyCanvasContainer.appendChild(this.svgEls.menuBodyCanvas);\n\n      let menuItemDims = _this._calcMenuItemDims();\n      let menuDims = {\n        height: menuItemDims.height * _this.state.menuItems.length, \n        width: menuItemDims.width\n      };\n\n      this.svgEls.menuBodyCanvas.setAttribute(\"width\", menuDims.width);\n      this.svgEls.menuBodyCanvas.setAttribute(\"height\", menuDims.height);\n      this.svgEls.menuBodyCanvas.style.left = 0;\n\n      this.svgEls.menuBodyPanel.setAttribute(\"width\", menuDims.width);\n      this.svgEls.menuBodyPanel.setAttribute(\"height\", menuDims.height);\n      this.svgEls.menuBodyPanel.setAttribute(\"x\", 0);\n      this.svgEls.menuBodyPanel.setAttribute(\"y\", 0);\n      this.svgEls.menuBodyPanel.setAttribute(\"fill\", this.o.backgroundColor);\n\n      for (let i = 0; i < this.state.menuItems.length; ++i) {\n        let curPanel = this.svgEls.menuItemPanels[i];\n        let curTextbox = this.svgEls.menuItemTextboxes[i];\n        let curOverlay = this.svgEls.menuItemOverlays[i];\n\n        curPanel.setAttribute(\"x\", 0);\n        curPanel.setAttribute(\"y\", i * menuItemDims.height);\n        curPanel.setAttribute(\"width\", menuItemDims.width);\n        curPanel.setAttribute(\"height\", menuItemDims.height);\n        curPanel.setAttribute(\"fill\", \"transparent\");\n        curTextbox.setAttribute(\"alignment-baseline\", \"middle\");\n        curTextbox.setAttribute(\"fill\", _this.o.fontColor);\n        curTextbox.setAttribute(\"x\", 10);\n        curTextbox.setAttribute(\"y\", ((i + 1) * menuItemDims.height) - (menuItemDims.height / 2));\n        curOverlay.setAttribute(\"x\", 0);\n        curOverlay.setAttribute(\"y\", i * menuItemDims.height);\n        curOverlay.setAttribute(\"width\", menuItemDims.width);\n        curOverlay.setAttribute(\"height\", menuItemDims.height);\n        curOverlay.setAttribute(\"fill\", \"transparent\");  \n      }\n    } else {\n      this.svgEls.menuBodyCanvas.style.display = \"none\";\n    }\n  }\n\n  /**\n   * Updates elements to match SVG representation with the state.\n   * @private\n   */\n  _updateEls() {\n    const _this = this;\n\n    for (let i = this.svgEls.menuItemTextboxes.length; i < this.state.menuItems.length; ++i) {\n      _this._addSvgMenuItem();\n    }\n\n    for (let i = this.state.menuItems.length; i > this.svgEls.menuItemTextboxes.length ; --i) {\n      _this._removeSvgMenuItem();\n    }\n  }\n\n  /* ==============================================================================================\n  *  INTERNAL FUNCTIONALITY METHODS\n  */\n\n  /**\n   * Handles mouse over event for menu item.\n   * @private\n   * @param {SvgElement} targetOverlay - The overlay of the item being hovered.\n   */\n  _mouseOverItem(targetOverlay) {\n    const _this = this;\n\n    let idx = _this.svgEls.menuItemOverlays.findIndex(overlay => overlay === targetOverlay);\n\n    if (idx !== -1) {\n      let targetPanel = _this.svgEls.menuItemPanels[idx];\n      let targetTextbox = _this.svgEls.menuItemTextboxes[idx];\n\n      targetPanel.setAttribute(\"fill\", _this.o.selectedItemBackgroundColor);\n      targetTextbox.setAttribute(\"fill\", _this.o.selectedItemFontColor);\n    }\n  }\n\n  /**\n   * Handles mouse leave event for menu item.\n   * @private\n   * @param {SvgElement} targetOverlay - The overlay of the target item.\n   */\n  _mouseLeaveItem(targetOverlay) {\n    const _this = this;\n    \n    let idx = _this.svgEls.menuItemOverlays.findIndex(overlay => overlay === targetOverlay);\n\n    if (idx !== -1) {\n      let targetPanel = _this.svgEls.menuItemPanels[idx];\n      let targetTextbox = _this.svgEls.menuItemTextboxes[idx];\n\n      targetPanel.setAttribute(\"fill\", \"transparent\");\n      targetTextbox.setAttribute(\"fill\", _this.o.fontColor);      \n    }\n  }\n\n  /**\n   * Adds svg elements representing a menu item.\n   * @private\n   */\n  _addSvgMenuItem() {\n    const _this = this;\n\n    let newItemText = document.createElementNS(this.SVG_NS, \"text\");\n    let newItemPanel = document.createElementNS(this.SVG_NS, \"rect\");\n    let newItemOverlay = document.createElementNS(this.SVG_NS, \"rect\");\n    \n    this.svgEls.menuItemTextboxes.push(newItemText);\n    this.svgEls.menuItemPanels.push(newItemPanel);\n    this.svgEls.menuItemOverlays.push(newItemOverlay);\n\n    this.svgEls.menuBodyCanvas.appendChild(newItemPanel);\n    this.svgEls.menuBodyCanvas.appendChild(newItemText);\n    this.svgEls.menuBodyCanvas.appendChild(newItemOverlay);\n\n    newItemOverlay.addEventListener(\"mouseenter\", (ev) => { _this.handlers.mouseOverItem(ev); });\n  }\n\n  /**\n   * Removes svg elements representing a menu item.\n   * @private\n   */\n  _removeSvgMenuItem() {\n    let targetItemTexbox = this.svgEls.menuItemTextboxes.pop();\n    let targetItemPanel = this.svgEls.menuItemPanels.pop();\n    let targetItemOverlay = this.svgEls.menuItemPanels.pop();\n\n    this.svgEls.menuBodyCanvas.removeChild(targetItemTexbox);\n    this.svgEls.menuBodyCanvas.removeChild(targetItemPanel);\n    this.svgEls.menuBodyCanvas.removeChild(targetItemOverlay);\n\n    targetItemTexbox = null;\n    targetItemPanel = null;\n    targetItemOverlay = null;\n  }\n\n  /**\n   * Calculate the height of each menu item.\n   * @private\n   * @returns {number} - Height in px.\n   */\n  _calcMenuItemDims() {\n    let maxHeight = 0;\n    let maxWidth = 0;\n    \n    this.svgEls.menuItemTextboxes.forEach(item => {\n      let bbox = item.getBoundingClientRect();\n      maxHeight = maxHeight > bbox.height ? maxHeight : bbox.height;\n      maxWidth  = maxWidth > bbox.width ? maxWidth : bbox.width;\n    });\n\n    maxWidth = Math.max(maxWidth, this._getWidth());\n\n    // add some extra padding\n    maxHeight += this.o.menuItemVerticalPadding;\n    maxWidth += this.o.menuItemHorizontalPadding;\n\n    return { width: maxWidth, height: maxHeight };\n  }\n\n  /**\n   * Marks a menu element as selected.\n   * @private\n   * @param {SvgElement} targetOverlay \n   */\n  _selectItem(targetOverlay) {\n    const _this = this;\n\n    let idx = _this.svgEls.menuItemOverlays.findIndex(overlay => overlay === targetOverlay);\n\n    if (idx !== -1) {\n      _this.setState({ selectedItemIdx: idx });\n    }\n  }\n\n}\n\nexport default Dropmenu;\n\n\n// WEBPACK FOOTER //\n// ./src/ui/dropmenu.js","import Widget from \"ui/core/widget\";\nimport Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\n\n/**\n * Class representing a Slider widget.\n * @class\n * @implements {Widget}\n */\nclass Slider extends Widget {\n\n  /**\n   * @constructor\n   * @param {object} container - DOM container for the widget.\n   * @param {object} [o] - Options.\n   * @param {number} [o.minVal=0] - The minimum possible value the slider can represent.\n   * @param {number} [o.maxVal=127] - The maximum possible value teh slider can represent.\n   * @param {string} [o.sliderBodyColor=\"#484848\"] - The color of the slider bar.\n   * @param {string} [o.sliderHandleColor=\"#484848\"] - The color of the triangle used as the slider's needle.\n   */\n  constructor(container, o) {\n    super(container, o);\n  }\n\n  /* ===========================================================================\n  *  INITIALIZATION METHODS\n  */\n\n  /**\n   * Initialize the options\n   * @override\n   * @protected\n   */\n  _initOptions(o) {\n    // set the defaults\n    this.o = {\n      minVal: 0,\n      maxVal: 127,\n      sliderBodyColor: \"#484848\",\n      sliderHandleColor: \"#484848\",\n      mouseSensitivity: 1.2\n    };\n\n    // override defaults with provided options\n    super._initOptions(o);\n  }\n\n  /**\n   * Initialize state constraints\n   * @override\n   * @protected\n   */\n  _initStateConstraints() {\n    const _this = this;\n\n    this.stateConstraints = new ConstraintSpec({\n      val: new Constraint({ min: _this.o.minVal, max: _this.o.maxVal, transform: (num) => num.toFixed(0) })   \n    });\n  }\n\n  /**\n   * Initialize state.\n   * @override\n   * @protected\n   */\n  _initState() {\n    this.state = {\n      val: this.o.minVal\n    };\n\n    // keep track of dimensions\n    this.dims = {\n      offsetBottom: 5,\n      offsetTop: 5,\n      bodyWidth: 2,\n      handleWidth: 10,\n      handleHeight: 10\n    };\n  }\n\n  /**\n   * Initialize the svg elements\n   * @override\n   * @protected\n   */\n  _initSvgEls() {\n    const _this = this;\n\n    this.svgEls = {\n      body: document.createElementNS(_this.SVG_NS, \"rect\"),\n      overlay: document.createElementNS(_this.SVG_NS, \"rect\"),\n      handle: document.createElementNS(_this.SVG_NS, \"polygon\")\n    };\n\n    this._appendSvgEls();\n    this._update();\n  }\n\n  /**\n   * Initialize mouse and touch event handlers\n   * @override\n   * @protected\n   */\n  _initHandlers() {\n    const _this = this;\n\n    this.handlers = {\n\n      touchBody: function touchBody(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        let newVal = _this._calcTouchVal(ev.clientY);\n        _this.setState({ val: newVal });\n        \n        _this.handlers.touchHandle(ev);\n      },\n\n      touchHandle: function touchHandle(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n        \n        document.body.addEventListener(\"mousemove\", _this.handlers.moveHandle);\n        document.body.addEventListener(\"touchmove\", _this.handlers.moveHandle);\n        document.body.addEventListener(\"mouseup\", _this.handlers.releaseHandle); \n        document.body.addEventListener(\"touchend\", _this.handlers.releaseHandle); \n      },\n\n      moveHandle: function moveHandle(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        let newVal = _this._calcTouchVal(ev.clientY);\n        _this.setState({ val: newVal });\n      },\n\n      releaseHandle: function releaseHandle(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        document.body.removeEventListener(\"touchmove\", _this.handlers.moveHandle); \n        document.body.removeEventListener(\"mousemove\", _this.handlers.moveHandle);\n        document.body.removeEventListener(\"mouseup\", _this.handlers.releaseHandle); \n        document.body.removeEventListener(\"touchend\", _this.handlers.releaseHandle); \n      }\n    };\n\n    this.svgEls.overlay.addEventListener(\"mousedown\", _this.handlers.touchBody);\n    this.svgEls.overlay.addEventListener(\"touchstart\", _this.handlers.touchBody);\n    this.svgEls.handle.addEventListener(\"mousedown\", _this.handlers.touchHandle);\n    this.svgEls.handle.addEventListener(\"touchstart\", _this.handlers.touchHandle);\n  }\n\n  /**\n   * Update (redraw) component based on state\n   * @override\n   * @protected\n   */\n  _update() {\n    const _this = this;\n\n    let sliderBodyPos = _this._calcSliderBodyPos();\n\n    this.svgEls.body.setAttribute(\"x\", sliderBodyPos.x);\n    this.svgEls.body.setAttribute(\"y\", sliderBodyPos.y);\n    this.svgEls.body.setAttribute(\"width\", _this.dims.bodyWidth);\n    this.svgEls.body.setAttribute(\"height\", _this._calcSliderBodyHeight());\n    this.svgEls.body.setAttribute(\"fill\", _this.o.sliderBodyColor);\n\n    this.svgEls.overlay.setAttribute(\"x\", sliderBodyPos.x);\n    this.svgEls.overlay.setAttribute(\"y\", sliderBodyPos.y);\n    this.svgEls.overlay.setAttribute(\"width\", _this.dims.bodyWidth + _this.dims.handleWidth);\n    this.svgEls.overlay.setAttribute(\"height\", _this._calcSliderBodyHeight());\n    this.svgEls.overlay.setAttribute(\"fill\", \"transparent\");\n\n    let sliderHandlePoints = _this._calcSliderHandlePoints();\n\n    this.svgEls.handle.setAttribute(\"points\", sliderHandlePoints);\n    this.svgEls.handle.setAttribute(\"fill\", _this.o.sliderHandleColor);\n  }\n\n  /* ===========================================================================\n  *  PUBLIC API\n  */\n\n  /**\n   * Get the slider value.\n   * @public\n   */\n  getVal() {\n    return this.state.val;\n  }\n\n  /**\n   * Set the current slider value.\n   * Same as setVal(), but will not cause an observer callback trigger.\n   * @public\n   * @param {number} newVal - The new slider value.\n   */\n  setInternalVal(newVal) {\n    this.setInternalState({ val: newVal });\n  }\n\n  /**\n   * Set the current slider value.\n   * Same as setInternalVal(), but will cause an observer callback trigger.\n   * @public\n   * @param {number} newVal - The new slider value.\n   */\n  setVal(newVal) {\n    this.setState({ val: newVal });\n  }\n\n  /* ===========================================================================\n  *  HELPER METHODS\n  */\n\n  /**\n   * Returns the position and dimensions for the slider body.\n   * @private\n   * @returns {object} - {x, y} position.\n   */\n  _calcSliderBodyPos() {\n    const _this = this;\n\n    return {\n      x: _this._getWidth() / 2 - 1,\n      y: _this.dims.offsetTop\n    };\n  }\n\n  /**\n   * Returns the height of the slider body.\n   * @private\n   * @returns {number} - Height of the slider body.\n   */\n  _calcSliderBodyHeight() {\n    return this._getHeight() - this.dims.offsetTop - this.dims.offsetBottom;\n  }\n\n  /**\n   * Returns the height of the slider body.\n   * @private\n   * @returns {number} - Width of the slider body.\n   */\n  _calcSliderBodyWidth() {\n    return this.dims.bodyWidth;\n  }\n\n    /**\n   * Returns the position and dimensions for the slider body.\n   * @private\n   * @returns {object} - {x, y} position.\n   */\n  _calcSliderHandlePoints() {\n    const _this = this;\n\n    let sliderBodyHeight = _this._calcSliderBodyHeight();\n\n    let x0 = (_this._getWidth() / 2) + 1;\n    let y0 = (sliderBodyHeight - (_this.state.val / (_this.o.maxVal - _this.o.minVal)) * sliderBodyHeight) + _this.dims.offsetBottom;\n    let x1 = x0 + this.dims.handleWidth;\n    let y1 = y0 - this.dims.handleHeight / 2;\n    let x2 = x1;\n    let y2 = y0 + this.dims.handleHeight / 2;\n\n    return x0 + \",\" + y0 + \" \" +\n           x1 + \",\" + y1 + \" \" +\n           x2 + \",\" + y2;\n  }\n\n  /**\n   * Calculate the value of the slider touched at position y.\n   * @private\n   * @param {number} y - Y-value of the touch location.\n   * @returns {number} - Value of the slider at the touched location.\n   */\n  _calcTouchVal(y) {\n    let valRange = this.o.maxVal - this.o.minVal;\n    let bodyY = (this._getHeight() - this._getRelativeY(y)) - this.dims.offsetBottom;\n    let touchVal = ((bodyY / this._calcSliderBodyHeight()) * valRange) + this.o.minVal; \n    \n    return touchVal;\n  }\n}\n\nexport default Slider;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/slider.js","import Widget from \"ui/core/widget\";\nimport Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\n\n/**\n * Class representing an piano keyboard widget\n *\n * @class\n * @implements {Widget}\n */\nclass Keyboard extends Widget {\n\n  /**\n   * @constructor\n   * @param {object} container - DOM container for the widget.\n   * @param {object} [o] - Options.\n   * @param {number} [o.bottomNote=48] - The bottom note (MIDI pitch) of the keyboard.\n   * @param {number} [o.topNote=71] - The top note (MIDI pitch) of the keyboard.\n   * @param {string} [o.keyBorderColor=\"#484848\"] - The color of the border separating the keys.\n   * @param {string} [o.blackKeyColor=\"#484848\"] - The color used for the black keys.\n   * @param {string} [o.whiteKeyColor=\"#fff\"] - The color used for the white keys.\n   * @param {string} [o.blackKeyActiveColor=\"#888\"] - The color used to represent an active black key.\n   * @param {string} [o.whiteKeyActiveColor=\"#333\"] - The color used to represent an active white key.\n   * @param {number} [o.blackKeyHeightAspect=0.6] - The aspect ratio of black key height to white key height.\n   * @param {number} [o.blackKeyWidthAspect=0.66] - The aspect ratio of black key width to white key width.\n   * @param {string} [o.orientation=\"horizontal\"] - The keyboard orientation. sible values are 'monophonic'\n   *                                       (only one active note at a time), or 'polyphonic'\n   *                                       (can have several active notes at a time).\n   * @param {boolean} [o.isEditable=true] - Boolean specifying whether the keyboard\n   *                                      is editable by the mouse or touch interactions.\n   *                                      A non-editable keyboard may be used as a visual\n   *                                      diagram, for example.\n   */\n  constructor(container, o) {\n    super(container, o);\n  }\n\n  /* ==============================================================================================\n  *  PUBLIC API\n  */\n\n  /**\n   * Sets the options.\n   * @public\n   * @override\n   * @param {object} [o] - Options to set. See {@link Keyboard#constructor} for list of options. \n   */\n  setOptions(o) {\n    o = o || {};\n\n    // ensure that the bottom note is a white key (a black key cannot be at the edge when drawing the keyboard)\n    if (o.bottomNote !== undefined && !this._isWhiteKey(o.bottomNote)) {\n      --o.bottomNote;\n    }\n\n    // ensure that the bottom note is a white key (a black key cannot be at the edge when drawing the keyboard)\n    if (o.topNote !== undefined && !this._isWhiteKey(o.topNote)) {\n      ++o.topNote;\n    }\n\n    super.setOptions(o);\n  }\n\n  /**\n   * Returns the last note event.\n   * @public\n   * @override\n   * @returns {object} - An object representing the last note event that occured as {pitch, vel}\n   */\n  getVal() {\n    return Object.assign({}, this.lastNoteEvent);\n  }\n\n  /**\n   * Returns the currently active notes.\n   * @public\n   * @override\n   * @returns {array} - An array of active notes. Each element is a [pitch, vel] pair.\n   */\n  getActiveNotes() {\n    return this.getState().activeNotes.map(note => [ note.pitch, note.vel ]);\n  }\n\n  /**\n   * Sets the current keyboard state using an array of {pitch, val} objects.\n   * Same as setVal(), but will not cause an observer callback trigger.\n   * @public\n   * @override\n   * @param {array} newNote - New value (array representing active notes with each entry in the form {pitch, val}).\n   * @param {boolean} isVelToggled - A boolean indicating whether a non-zero vel of the same \n   *                                  pitch will turn a note off if it is turned on.\n   */\n  setInternalVal(newNote, isVelToggled) {\n    let newState = this._getNewStateFromNewNote(newNote, isVelToggled);\n    this.setInternalState(newState);\n  }\n\n  /**\n   * Sets the current keyboard state using an array of {pitch, val} objects.\n   * Same as setInternalVal(), but will cause an observer callback trigger.\n   * @public\n   * @param {array} newVal - New value (array representing active notes with each entry in the form {pitch, val}).\n   * @param {boolean} isVelToggled - A boolean indicating whether a non-zero vel of the same \n   *                                  pitch will turn a note off if it is turned on.\n   */\n  setVal(newNote, isVelToggled) {\n    let newState = this._getNewStateFromNewNote(newNote, isVelToggled);\n    this.setState(newState);\n  }\n\n  /* ==============================================================================================\n  *  INITIALIZATION METHODS\n  */\n\n  /**\n   * Initialize the options\n   * @override\n   * @private\n   */\n  _initOptions(o) {\n    // set the defaults\n    this.o = {\n      bottomNote: 48,\n      topNote: 71,\n      keyBorderColor: \"#484848\",\n      blackKeyColor: \"#484848\",\n      whiteKeyColor: \"#fff\",\n      blackKeyActiveColor: \"#999\",\n      whiteKeyActiveColor: \"#999\",\n      blackKeyHeightAspect: 0.6,\n      blackKeyWidthAspect: 0.66,\n      mode: \"polyphonic\",\n      orientation: \"horizontal\",\n      isEditable: true,\n      mouseSensitivity: 1.2\n    };\n\n    // override defaults with provided options\n    super._initOptions(o);\n  }  \n\n  /**\n   * Initialize state constraints\n   * @override\n   * @private\n   */\n  _initStateConstraints() {\n    const _this = this;\n\n    this.stateConstraints = new ConstraintSpec({\n      activeNotes: [{\n        pitch: new Constraint({ min: 0, max: 127 }),\n        vel: new Constraint({ min: 0, max: 127})\n      }]\n    });\n  }\n\n  /**\n   * Initializes the state.\n   * State is represented as an array of active notes, each of which is an object\n   * { pitch, vel }, where pitch is MIDI pitch (0 - 127) and vel is MIDI velocity\n   * (0 - 127). A vel of 0 is reported once for each note-off event, and not\n   * reported on subsequent callback notifications.\n   * @override\n   * @private\n   */\n  _initState() {\n    this.state = {\n      activeNotes: []\n    };\n\n    // Object representing the last note event that occured.\n    this.lastNoteEvent = {};\n  }\n\n  /**\n   * Initialize the svg elements\n   * @override\n   * @private\n   */\n  _initSvgEls() {\n    const _this = this;\n\n    this.svgEls = {\n      keys: []\n    };\n\n    this._update();\n  }\n\n  /**\n   * Updates the SVG elements. \n   * Adds or removes a number of SVG elements to match the current number of keys.\n   */\n   _updateSvgEls() {\n    let numKeys = this._getNumKeys();\n    \n    // add SVG elements representing keys to match current number of keys\n    for (let i = this.svgEls.keys.length; i < numKeys; ++i) {\n      this._addSvgKey();\n    }\n\n    // remove SVG elements representing keys to match current number of keys\n    for (let i = this.svgEls.keys.length; i > numKeys; ++i) {\n      this._removeSvgKey();\n    }\n  }\n\n  /**\n   * Initializes mouse and touch event handlers.\n   * @override\n   * @private\n   */\n  _initHandlers() {\n    const _this = this;\n\n    this.handlers = {\n      touch: function touch(ev) {\n        ev.preventDefault();\n\n        let touchVel = Math.ceil(127 * (_this._getKeyboardHeight() - _this._getRelativeY(ev.clientY)) / _this._getKeyboardHeight());\n        _this._touchKey(ev.target, touchVel);\n\n        for (let i = 0; i < _this.svgEls.keys.length; ++i) {\n          // activate / toggle a key on mouse enter\n          _this.svgEls.keys[i].addEventListener(\"mouseenter\", _this.handlers.touch);\n          _this.svgEls.keys[i].addEventListener(\"touchenter\", _this.handlers.touch);\n\n          _this.svgEls.keys[i].addEventListener(\"mouseup\", _this.handlers.release);\n          _this.svgEls.keys[i].addEventListener(\"touchend\", _this.handlers.release);\n        }\n      },\n      release: function release() {\n        for (let i = 0; i < _this.svgEls.keys.length; ++i) {\n          _this.svgEls.keys[i].removeEventListener(\"mouseenter\", _this.handlers.touch);\n          _this.svgEls.keys[i].removeEventListener(\"touchenter\", _this.handlers.touch);\n        }\n      }\n    };\n\n    for (let i = 0; i < this.svgEls.keys.length; ++i) {\n      this.svgEls.keys[i].addEventListener(\"mousedown\", this.handlers.touch);\n      this.svgEls.keys[i].addEventListener(\"touchdown\", this.handlers.touch);\n    }\n  }\n\n  /**\n   * \n   */\n  _touchKey(targetKey, vel) {\n    const _this = this;\n\n    let keyIdx = this.svgEls.keys.findIndex(key => key === targetKey);\n\n    let newNote = {\n      pitch: keyIdx + _this.o.bottomNote,\n      vel: vel \n    };\n\n    this.setVal(newNote, true);\n  }\n\n  /**\n   * Updates (redraws) component based on state.\n   * @override\n   * @private\n   */\n  _update() {\n    var x, y, width, height, fill, stroke;\n    let blackKeys = [];\n    \n    // an array of velocities representing all possible notes (vel 0 means note is off)\n    let notes = new Array(this._getNumKeys());\n    notes.fill(0);\n\n    // put value of 1 for all active notes in the note array\n    this.getState().activeNotes.forEach(activeNote => {\n      notes[activeNote.pitch - this.getOptions().bottomNote] = 1;  \n    });\n\n    this._updateSvgEls();\n\n    for (let keyIdx = 0, whiteKeyIdx = 0; keyIdx < this.svgEls.keys.length; ++keyIdx) {\n      let pitch = this._getPitchForKeyIdx(keyIdx);\n      let attr = {};\n\n      if (this._isWhiteKey(pitch)) {\n        attr.x = this._getWhiteKeyWidth() * whiteKeyIdx;\n        attr.y = 0;\n        attr.width = this._getWhiteKeyWidth();\n        attr.height = this._getKeyboardHeight();\n        attr.fill = (notes[keyIdx] === 0) ? \n            this.getOptions().whiteKeyColor\n          : this.getOptions().whiteKeyActiveColor;\n        attr.stroke = this.getOptions().keyBorderColor;\n\n        ++whiteKeyIdx;       \n      } else {\n        blackKeys.push(this.svgEls.keys[keyIdx]);\n\n        // black keys are offset by 2/3 of white key width, and are 2/3 width and height of black keys\n        attr.x = (this._getWhiteKeyWidth() * whiteKeyIdx) - ( this.getOptions().blackKeyWidthAspect * this._getWhiteKeyWidth() / 2 );\n        attr.y = 0;\n        attr.width = this.getOptions().blackKeyWidthAspect * this._getWhiteKeyWidth();\n        attr.height = this.getOptions().blackKeyHeightAspect * this._getKeyboardHeight();\n        attr.fill = (notes[keyIdx] === 0) ? \n            this.getOptions().blackKeyColor\n          : this.getOptions().blackKeyActiveColor;\n        attr.stroke = this.getOptions().keyBorderColor;\n      }\n\n      this._setKeyAttributes(keyIdx, attr);\n    }\n\n    // remove and reappend black keys so they are on top of the white keys\n    for (let i = 0; i < blackKeys.length; ++i) {\n      this.svg.removeChild(blackKeys[i]);\n      this.svg.appendChild(blackKeys[i]);\n    }\n  }\n\n  /* ===========================================================================\n  *  INTERNAL FUNCTIONALITY\n  */\n\n  /**\n   * Returns a newState object representing a new keyboard state based on a new note provided. \n   * @param {object} newNote - A note object of format { pitch: number, vel: number }.\n   * @param {number} newNote.pitch\n   * @param {number} newNote.vel\n   * @param {boolean} isVelToggled - A boolean indicating whether a non-zero vel of the same \n   *                                  pitch will turn a note off if it is turned on.\n   * @returns {object} An object representing the new state. \n   */\n  _getNewStateFromNewNote(newNote, isVelToggled) {\n    let newState = this.getState();\n    let noteIdx = newState.activeNotes.findIndex(note => note.pitch === newNote.pitch);\n    \n    if (noteIdx === -1) {\n      if (newNote.vel > 0) {\n        newState.activeNotes.push(newNote);\n      }\n    } else {\n      if (newNote.vel <= 0 || isVelToggled) {\n        newState.activeNotes.splice(noteIdx, 1);\n        newNote.vel = 0;\n      } else {\n        newState.activeNotes[noteIdx].vel = newNote.vel;\n      }\n    }\n\n    this.lastNoteEvent = newNote;\n\n    return newState;\n  }\n\n  /**\n   * Adds an SVG element representing a key.\n   */\n  _addSvgKey() {\n    let newKey = document.createElementNS(this.SVG_NS, \"rect\");\n    this.svg.appendChild(newKey);\n    this.svgEls.keys.push(newKey);\n    newKey.addEventListener(\"mousedown\", this.handlers.touch);\n    newKey.addEventListener(\"touchdown\", this.handlers.touch);\n  }\n\n  /**\n   * Removes an SVG element representing a key.\n   */\n  _removeSvgKey() {\n    let key = this.svgEls.keys[this.svgEls.keys.length - 1];\n\n    this.svg.removeChild(key);\n    key = null;\n    this.svgEls.keys.pop();\n  }\n\n  /* ===========================================================================\n  *  HELPER METHODS\n  */\n\n  /**\n   * Sets attributes for an SVG rectangle representing a key with the given index.\n   */\n  _setKeyAttributes(keyIdx, attr) {\n    this.svgEls.keys[keyIdx].setAttribute(\"x\", attr.x);\n    this.svgEls.keys[keyIdx].setAttribute(\"y\", attr.y);\n    this.svgEls.keys[keyIdx].setAttribute(\"width\", attr.width);\n    this.svgEls.keys[keyIdx].setAttribute(\"height\", attr.height);\n    this.svgEls.keys[keyIdx].setAttribute(\"fill\", attr.fill);\n    this.svgEls.keys[keyIdx].setAttribute(\"stroke\", attr.stroke);\n  }\n\n  /**\n   * Returns the width of the keyboard, taking orientation into account.\n   * If orientation is horizontal, width of the keyboard would equal\n   * width of the canvas. If orientation is vertical, width of the\n   * keyboard would equal the height of the canvas.\n   * @private\n   * @throws {Error} if o.orientation is not one of the allowed values.\n   */\n  _getKeyboardWidth() {\n    let orientation = this.getOptions().orientation;\n\n    if (orientation === \"horizontal\" || orientation === \"horizontal-mirrored\") {\n      return this._getWidth();\n    } else if (orientation === \"vertical\" || orientation === \"vertical-mirrored\") {\n      return this._getHeight();\n    } \n  }\n\n  /**\n   * Returns the height of the keyboard, taking orientation into account.\n   * If orientation is horizontal, height of the keyboard would equal\n   * height of the canvas. If orientation is vertical, height of the\n   * keyboard would equal the width of the canvas.\n   * @private\n   * @throws {Error} if o.orientation is not one of the allowed values.\n   */\n  _getKeyboardHeight() {\n    let orientation = this.getOptions().orientation;\n\n    if (orientation === \"horizontal\" || orientation === \"horizontal-mirrored\") {\n      return this._getHeight();\n    } else if (orientation === \"vertical\" || orientation === \"vertical-mirrored\") {\n      return this._getWidth();\n    } \n  }\n\n  /**\n   * Returns the MIDI note number for the given key number.\n   * @private\n   * @param {number} keyIdx - The index of the key to be queried.\n   * @returns {number} - MIDI note number for the given key number\n   */\n  _getPitchForKeyIdx(keyIdx) {\n    return this.getOptions().bottomNote + keyIdx;\n  }\n\n  /** \n   * Returns the total number of keys on the keyboard. \n   * @private\n   * @returns {number} - Total number of keys.\n   */\n  _getNumKeys() {\n    return (this.o.topNote - this.o.bottomNote) + 1;\n  }\n\n  /**  \n   * Returns the number of white keys on the keyboard.\n   * @private\n   * @returns {number} - Number of white keys. \n   */\n  _getNumWhiteKeys() {\n    let whiteKeyCount = 0;\n\n    for (let curNote = this.getOptions().bottomNote; curNote <= this.getOptions().topNote; ++curNote) {\n      if (this._isWhiteKey(curNote)) {\n        ++whiteKeyCount;\n      }\n    }\n\n    return whiteKeyCount;\n  }\n\n  /** \n   * Returns the width of each white key in px.\n   * @private\n   * @returns {number} - Width of each white key in px.\n   */\n  _getWhiteKeyWidth() {\n    return this._getKeyboardWidth() / this._getNumWhiteKeys();\n  }\n\n  /**\n   * Returns true if the given MIDI note number is a white key on the piano.\n   * @private\n   * @param {number} note - The MIDI note number for the given note. \n   * @returns {boolean} - True if the note is a white key, false if not.\n   */\n  _isWhiteKey(note) {\n    if (note % 12 === 0 || \n        note % 12 === 2 || \n        note % 12 === 4 || \n        note % 12 === 5 || \n        note % 12 === 7 || \n        note % 12 === 9 || \n        note % 12 === 11) {\n        return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default Keyboard;\n\n\n// WEBPACK FOOTER //\n// ./src/ui/keyboard.js","'use strict';\n\nimport Widget from \"ui/core/widget\";\nimport Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\nimport MathUtil from \"util/util-math\";\n\n/**\n * Class representing a Graph widget.\n * @class \n * @implements {Widget}\n */\nclass Graph extends Widget {\n\n  /**\n   * @constructor\n   * @param {object} container - DOM container for the widget.\n   * @param {object} [o] - Options.\n   * @param {number} [o.minXVal=0] - Minimum X value.\n   * @param {number} [o.minYVal=0] - Minimum Y value.\n   * @param {number} [o.maxXVal=100] - Maximum X value.\n   * @param {number} [o.maxYVal=100] - Maximum Y value.\n   * @param {number} [o.maxNumVertices=-1] - Maximum number of vertices.\n   * @param {number} [o.quantizeX=0.1] - X-quantization (\"grid\") value.\n   * @param {number} [o.quantizeY=0.1] - Y-quantization (\"grid\") value.\n   * @param {number} [o.xDecimalPrecision=1] - Number of decimal places for output of the X values.\n   * @param {number} [o.yDecimalPrecision=1] - Number of decimal places for output of the Y values.\n   * @param {boolean} [o.hasFixedStartPoint=false] - Is there a fixed start vertex?\n   * @param {boolean} [o.hasFixedEndPoint=false] - Is there a fixed end vertex?\n   * @param {number} [o.fixedStartPointY=0] - Y value of the fixed start vertex, if exists.\n   * @param {number} [o.fixedEndPointY=0] - Y value of the fixed end vertex, if exists.\n   * @param {boolean} [o.isEditable=true] - Is the graph editable?\n   * @param {string} [o.vertexColor=\"#f40\"] - Color of vertex points.\n   * @param {string} [o.lineColor=\"#484848\"] - Color of lines connecting the vertices.\n   * @param {string} [o.backgroundColor=\"#fff\"] - Background color.\n   * @param {number} [o.lineWidth=2] - Width of the connecting lines.\n   * @param {number} [o.vertexRadius=4] - Radius of the vertex points.\n   * @param {number} [o.mouseSensitivity=1.2] - Mouse sensitivity (how much moving the mouse affects the interaction).\n   */\n  constructor(container, o) {\n    super(container, o);\n  }\n\n  /* ===========================================================================\n  *  PUBLIC API\n  */\n\n  /**\n   * Sets the options.\n   * @public @override\n   */\n  setOptions(o) {\n    o = o || {};\n\n    if (o.fixedStartPointY !== undefined) {\n      o.fixedStartPointY = Math.min(o.fixedStartPointY, this.o.maxYVal);\n      o.fixedStartPointY = Math.max(o.fixedStartPointY, this.o.minYVal);\n    }\n\n    if (o.fixedEndPointY !== undefined) {\n      o.fixedEndPointY = Math.min(o.fixedEndPointY, this.o.maxYVal);\n      o.fixedEndPointY = Math.max(o.fixedEndPointY, this.o.minYVal);\n    }\n\n    super.setOptions(o);\n  }\n\n  /**\n  * Returns the state as an array of [x, y] pairs.\n  * @public @override\n  */\n  getVal() {\n    return this.state.vertices.map(vtx => [vtx.x, vtx.y]);\n  }\n\n  /**\n  * Sets the state as an array of [x, y] vertex pairs.\n  * Same as setVal(), but will not trigger observer callback methods.\n  * @public @override\n  * @param {array} - An array of [x, y] points\n  */\n  setInternalVal(vertexArray) {\n   let vertices = vertexArray.map(xyPair => { return {x: xyPair[0], y: xyPair[1]}; });\n\n   this.setInternalState({ vertices: vertices });\n  }\n\n  /**\n  * Sets the state as an array of [x, y] vertex pairs.\n  * Same as setInternalVal(), but will trigger observer callback methods.\n  * @public @override\n  * @param {array} - An array of [x, y] points.\n  */\n  setVal(vertexArray) {\n    let vertices = vertexArray.map(xyPair => { return {x: xyPair[0], y: xyPair[1]}; });\n\n    this.setState({ vertices: vertices });\n  }\n\n  /**\n   * Adds a new vertex to the state\n   * @public\n   * @param {object} pos\n   * @param {number} pos.x\n   * @param {number} pos.y\n   */\n  addVertex(pos) {\n    let newVertices = this.getState().vertices.map(x=>x);\n\n    newVertices.push({x: pos.x, y: pos.y});\n    newVertices.sort((a, b) => a.x - b.x);\n\n    this.setState({\n     vertices: newVertices\n    });\n  }\n\n  /* ==============================================================================================\n  *  INITIALIZATION METHODS\n  */\n\n  /**\n   * Initializes the options.\n   * @override\n   * @private\n   */\n  _initOptions(o) {\n    // set defaults\n    this.o = {\n      minXVal: 0,\n      minYVal: 0,\n      maxXVal: 100,\n      maxYVal: 100,\n      maxNumVertices: -1,\n      quantizeX: 0.1,\n      quantizeY: 0.1,\n      xDecimalPrecision: 1,\n      yDecimalPrecision: 1,\n      hasFixedStartPoint: false,\n      hasFixedEndPoint: false,\n      fixedStartPointY: 0,\n      fixedEndPointY: 0,\n      isEditable: true,\n      vertexColor: \"#f40\",\n      lineColor: \"#484848\",\n      backgroundColor: \"#fff\",\n      vertexRadius: 4,\n      lineWidth: 2,\n      mouseSensitivity: 1.2\n    };\n\n    // override defaults with provided options\n    super._initOptions(o);\n  }\n\n  /**\n   * Initializes state constraints.\n   * @override\n   * @private\n   */\n  _initStateConstraints() {\n    const _this = this;\n\n    this.stateConstraints = new ConstraintSpec({\n      vertices: [{\n        x: new Constraint({\n          min: _this.o.minXVal,\n          max: _this.o.maxXVal,\n          transform: (num) => {\n            return MathUtil.quantize(num, _this.o.quantizeX)\n              .toFixed(_this.o.xDecimalPrecision);\n          }\n        }),\n        y: new Constraint({\n          min: _this.o.minYVal,\n          max: _this.o.maxYVal,\n          transform: (num) => {\n            return MathUtil.quantize(num, _this.o.quantizeY)\n              .toFixed(_this.o.yDecimalPrecision);\n          }\n        })\n      }]\n    });\n  }\n\n  /**\n   * Initializes state.\n   * @override\n   * @private\n   */\n  _initState() {\n    this.state = {\n      // verices contains an array of vertices\n      // each vertex is an object of form {x, y}\n      vertices: []\n    };\n\n    // Flags for whether fixed start and end points have been\n    // added to the state vertex array.\n    // These are used in the _update() method - if the flags\n    // are not set, and o.hasFixedStartPoint or o.hasFixedEndPoint\n    // are set, verticies representing the fixed points are to be added.\n    // If the flags are set, while o.hasFixedStartPoint or o.hasFixedEndPoint\n    // is not set, then vertices representing the fixed points are to be removed.\n    this.isFixedStartPointInitialized = false;\n    this.isFixedEndPointInitialized = false;\n  }\n\n  /**\n   * Initializes the svg elements.\n   * @override\n   * @private\n   */\n  _initSvgEls() {\n    const _this = this;\n\n    this.svgEls = {\n      panel: document.createElementNS(this.SVG_NS, \"rect\"),\n      vertices: [],\n      lines: []\n    };\n\n    this.svgEls.panel.setAttribute(\"width\", this._getWidth());\n    this.svgEls.panel.setAttribute(\"height\", this._getHeight());\n    this.svgEls.panel.setAttribute(\"fill\", this.o.backgroundColor);\n    this.svgEls.panel.setAttribute(\"stroke\", this.o.lineColor);\n\n    this._appendSvgEls();\n    this._update();\n  }\n\n  /**\n   * Initializes mouse and touch event handlers.\n   * @override\n   * @private\n   */\n  _initHandlers() {\n    const _this = this;\n\n    let targetVtx = null;\n    let targetLine = null;\n    let vtxPos0 = {}; // original poisition of two vertices affected by a line move\n    let x0 = 0;\n    let y0 = 0;\n    let x1 = 0;\n    let y1 = 0;\n    let dx = 0;\n    let dy = 0;\n\n    this.handlers = {\n\n       touchPanel: function touchPanel(ev) {\n         ev.preventDefault();\n\n         let xPos = ev.clientX - _this._getLeft();\n         let yPos = ev.clientY - _this._getTop();\n         let vertexState = _this._calcVertexState({x: xPos, y: yPos});\n\n         _this.addVertex(vertexState);\n       },\n\n       touchVertex: function touchVertex(ev) {\n         ev.preventDefault();\n\n         targetVtx = ev.target;\n\n         document.addEventListener(\"mousemove\", _this.handlers.moveVertex);\n         document.addEventListener(\"touchmove\", _this.handlers.moveVertex);\n         ev.target.addEventListener(\"mouseup\", _this.handlers.deleteVertex);\n         ev.target.addEventListener(\"touchend\", _this.handlers.deleteVertex);\n       },\n\n       touchLine: function touchLine(ev) {\n         ev.preventDefault();\n\n         targetLine = ev.target;\n\n         x0 = ev.clientX - _this._getLeft();\n         y0 = ev.clientY - _this._getTop();\n         vtxPos0 = null;\n\n         document.addEventListener(\"mousemove\", _this.handlers.moveLine);\n         document.addEventListener(\"touchmove\", _this.handlers.moveLine);\n       },\n\n       moveLine: function moveLine(ev) {\n         ev.preventDefault();\n\n         document.addEventListener(\"mouseup\", _this.handlers.endMoveLine);\n         document.addEventListener(\"touchend\", _this.handlers.endMoveLine);\n\n         x1 = ev.clientX - _this._getLeft();\n         y1 = ev.clientY - _this._getTop();\n\n         // delta position (change in position)\n         let dPos = {\n           x: x1 - x0,\n           y: y1 - y0\n         };\n\n         vtxPos0 = _this._moveLine(targetLine, dPos, vtxPos0);\n       },\n\n       endMoveLine: function endMoveLine(ev) {\n         ev.preventDefault();\n\n         vtxPos0 = null;\n\n         document.removeEventListener(\"mousemove\", _this.handlers.moveLine);\n         document.removeEventListener(\"touchmove\", _this.handlers.moveLine);\n       },\n\n       deleteVertex: function deleteVertex(ev) {\n         ev.preventDefault();\n\n         document.removeEventListener(\"mousemove\", _this.handlers.moveVertex);\n         document.removeEventListener(\"touchmove\", _this.handlers.moveVertex);\n\n         _this._deleteVertex(ev.target);\n\n         ev.target.removeEventListener(\"mouseup\", _this.handlers.deleteVertex);\n         ev.target.removeEventListener(\"touchend\", _this.handlers.deleteVertex);\n       },\n\n       moveVertex: function moveVertex(ev) {\n         ev.preventDefault();\n\n         targetVtx.removeEventListener(\"mouseup\", _this.handlers.deleteVertex);\n         targetVtx.removeEventListener(\"touchend\", _this.handlers.deleteVertex);\n\n         document.addEventListener(\"mouseup\", _this.handlers.endMoveVertex);\n         document.addEventListener(\"touchend\", _this.handlers.endMoveVertex);\n\n         let xPos = ev.clientX - _this._getLeft();\n         let yPos = ev.clientY - _this._getTop();\n\n         _this._moveVertex(targetVtx, {x: xPos, y: yPos});\n       },\n\n       endMoveVertex: function endMoveVertex(ev) {\n         ev.preventDefault();\n\n         document.removeEventListener(\"mousemove\", _this.handlers.moveVertex);\n         document.removeEventListener(\"touchmove\", _this.handlers.moveVertex);\n       }\n    };\n\n    this.svgEls.panel.addEventListener(\"mousedown\", _this.handlers.touchPanel);\n    this.svgEls.panel.addEventListener(\"touchdown\", _this.handlers.touchPanel);\n\n    this.svgEls.vertices.forEach(vtx => {\n      vtx.addEventListener(\"mousedown\", _this.handlers.touchVertex);\n      vtx.addEventListener(\"touchdown\", _this.handlers.touchVertex);\n    });\n\n    this.svgEls.lines.forEach(line => {\n      line.addEventListener(\"mousedown\", _this.handlers.touchLine);\n      line.addEventListener(\"touchdown\", _this.handlers.touchLine);\n    });\n  }\n\n  /**\n   * Updates (redraws) component based on state.\n   * @override\n   * @private\n   */\n  _update() {\n    const _this = this;\n\n    // add fixed start vertex if the option is set, but has not been initialized\n    if (this.o.hasFixedStartPoint && !this.isFixedStartPointInitialized) {\n      this.state.vertices.push({ x: _this.o.minXVal, y: _this.o.fixedStartPointY });\n      this.isFixedStartPointInitialized = true;\n    }\n\n    // add fixed end vertex if the option is set, but has not been initialized\n    if (this.o.hasFixedEndPoint && !this.isFixedEndPointInitialized) {\n      this.state.vertices.push({ x: _this.o.maxXVal, y: _this.o.fixedEndPointY });\n      this.isFixedEndPointInitialized = true;\n    }\n\n    // sort svg vertexes using a sort map\n    let idxSortMap = _this.state.vertices.map((vtx, idx) => { return { vtx: vtx, idx: idx }; });\n    idxSortMap.sort((a, b) => a.vtx.x - b.vtx.x);\n    _this.state.vertices = idxSortMap.map(el => _this.state.vertices[el.idx]);\n\n    // update fixed start vertex to the correct y value\n    if (this.o.hasFixedStartPoint && this.isFixedStartPointInitialized) {\n      _this.state.vertices[0].y = _this.o.fixedStartPointY;\n    }\n\n    // update fixed end vertex to the correct y value\n    if (this.o.hasFixedEndPoint && this.isFixedEndPointInitialized) {\n      _this.state.vertices[_this.state.vertices.length - 1].y = _this.o.fixedEndPointY;\n    }\n\n    // remove fixed start vertex if had been initialized, but the option is unset\n    if (!this.o.hasFixedStartPoint && this.isFixedStartPointInitialized) {\n      this.state.vertices.splice(0, 1);\n      idxSortMap.splice(0, 1);\n      idxSortMap.forEach(el => el.idx--);\n      this.isFixedStartPointInitialized = false;\n    }\n\n    // remove fixed end vertex if has been initialized, but the option is unset\n    if (!this.o.hasFixedEndPoint && this.isFixedEndPointInitialized) {\n      this.state.vertices.pop();\n      idxSortMap.pop();\n      this.isFixedEndPointInitialized = false;\n    }\n\n    // if there are more state vertices than svg vertices, add a corresponding number of svg vertices and lines\n    for (let i = _this.svgEls.vertices.length; i < _this.state.vertices.length; ++i) {\n      _this._addSvgVertex();\n    }\n\n    // if there are more svg vertices than state vertices, remove a corresponding number of svg vertices and lines\n    for (let i = _this.svgEls.vertices.length; i > _this.state.vertices.length; --i) {\n      _this._removeSvgVertex();\n    }\n\n    // sort the svg vertices according to the vertex sort map\n    _this.svgEls.vertices = idxSortMap.map(el => _this.svgEls.vertices[el.idx]);\n\n    // set the correct position coordinates for every vertex\n    _this.state.vertices.forEach((stateVtx, idx) => {\n      let svgVtx = _this.svgEls.vertices[idx];\n      let pos = _this._calcVertexPos(stateVtx);\n\n      svgVtx.setAttribute(\"cx\", pos.x);\n      svgVtx.setAttribute(\"cy\", pos.y);\n      svgVtx.setAttribute(\"r\", _this.o.vertexRadius);\n      svgVtx.setAttribute(\"fill\", _this.o.vertexColor);\n\n      // for every vertex other than the first, draw a line to the previous vertex\n      if (idx > 0) {\n        let prevVtx = _this.state.vertices[idx - 1];\n        let prevPos = _this._calcVertexPos(prevVtx);\n        let line = _this.svgEls.lines[idx - 1];\n\n        line.setAttribute(\"d\", \"M \" + pos.x + \" \" + pos.y + \" L \" + prevPos.x + \" \" + prevPos.y);\n        line.setAttribute(\"fill\", \"transparent\");\n        line.setAttribute(\"stroke-width\", _this.o.lineWidth);\n        line.setAttribute(\"stroke\", _this.o.lineColor);\n      }\n    });\n\n    // remove and reappend all svg elements so that vertices are on top of lines\n    _this.svgEls.lines.forEach(svgLine => {\n      _this.svg.removeChild(svgLine);\n      _this.svg.appendChild(svgLine);\n    });\n\n    _this.svgEls.vertices.forEach(svgVtx => {\n      _this.svg.removeChild(svgVtx);\n      _this.svg.appendChild(svgVtx);\n    });\n\n    // reassign listeners\n    _this.svgEls.vertices.forEach(vtx => {\n      vtx.addEventListener(\"mousedown\", _this.handlers.touchVertex);\n      vtx.addEventListener(\"touchdown\", _this.handlers.touchVertex);\n    });\n\n    _this.svgEls.lines.forEach(line => {\n      line.addEventListener(\"mousedown\", _this.handlers.touchLine);\n      line.addEventListener(\"touchdown\", _this.handlers.touchLine);\n    });\n  }\n\n  /* ==============================================================================================\n  *  INTERNAL FUNCTIONALITY METHODS\n  */\n\n  /**\n   * Deletes a vertex.\n   * @private\n   * @param {SVGElement} targetVtx - Vertex to Delete\n   */\n  _deleteVertex(targetVtx) {\n    const _this = this;\n\n    let vtxIdx = this.svgEls.vertices.findIndex(vtx => vtx === targetVtx);\n\n    if (vtxIdx !== -1) {\n     let newVertices = this.getState().vertices.map(x=>x);\n     newVertices.splice(vtxIdx, 1);\n     _this.setState({\n       vertices: newVertices\n     });\n    }\n  }\n\n  /**\n   * Adds a new SVG vertex representation.\n   * @private\n   */\n  _addSvgVertex() {\n    const _this = this;\n\n    let newVertex = document.createElementNS(_this.SVG_NS, \"circle\");\n    _this.svgEls.vertices.push(newVertex);\n    _this.svg.appendChild(newVertex);\n\n    // if there is more than 1 svg vertex, we also need to draw lines between them\n    if (_this.svgEls.vertices.length > 1) {\n      this._addSvgLine();\n    }\n  }\n\n  /**\n   * Adds an SVG line connecting two vertices.\n   * @private\n   */\n  _addSvgLine() {\n    let newLine = document.createElementNS(this.SVG_NS, \"path\");\n    this.svg.appendChild(newLine);\n    this.svgEls.lines.push(newLine);\n  }\n\n  /**\n   * Removes an SVG vertex.\n   * @private\n   */\n  _removeSvgVertex() {\n    let vertex = this.svgEls.vertices[this.svgEls.vertices.length - 1];\n\n    this.svg.removeChild(vertex);\n    vertex = null;\n    this.svgEls.vertices.pop();\n\n    if (this.svgEls.lines.length > 0) {\n     this._removeSvgLine();\n    }\n  }\n\n  /**\n   * Removes an SVG line connecting two vertices.\n   * @private\n   */\n  _removeSvgLine() {\n    let line = this.svgEls.lines[this.svgEls.lines.length - 1];\n\n    this.svg.removeChild(line);\n    line = null;\n    this.svgEls.lines.pop();\n  }\n\n  /**\n    * Moves a line.\n    * @private\n    * @param {SVGElement} targetLine - The target line\n    * @param {object} dPos -\n    * @param {number} dPos.x\n    * @param {number} dPos.y\n    * @param {object} vtxPos0 - Original position (before moving)\n    *                           of the two vertices immediately to the left\n    *                           and right of the line being moved in the\n    *                           form { vtx1: {x, y}, vtx2: {x, y}, boundaryBL: {x, y}, boundaryTR: {x, y} }\n    *                           If null, will be calculated from the\n    *                           corresponding svg element.\n    * @param {obect} [vtxPos0.vtx1]\n    * @param {number} [vtxPos0.vtx1.x]\n    * @param {number} [vtxPos0.vtx1.y]\n    * @param {obect} [vtxPos0.vtx2]\n    * @param {number} [vtxPos0.vtx2.x]\n    * @param {number} [vtxPos0.vtx2.y]\n    * @returns {object} Original position of the two vertices affected by the line move in the form\n    *                   { vtx1: {x, y}, vtx2: {x, y}, boundaryBL: {x, y}, boundaryTR: {x, y} }.\n    */\n  _moveLine(targetLine, dPos, vtxPos0) {\n    const _this = this;\n\n    let lineIdx = _this.svgEls.lines.findIndex(line => line === targetLine);\n\n    // get vertices to the left and right of the selected line\n    let vtx1 = _this.svgEls.vertices[lineIdx];\n    let vtx2 = _this.svgEls.vertices[lineIdx + 1];\n\n    let vtx1curPos = {\n      x: parseInt(_this.svgEls.vertices[lineIdx].getAttribute(\"cx\")),\n      y: parseInt(_this.svgEls.vertices[lineIdx].getAttribute(\"cy\"))\n    };\n    let vtx2curPos = {\n      x: parseInt(_this.svgEls.vertices[lineIdx + 1].getAttribute(\"cx\")),\n      y: parseInt(_this.svgEls.vertices[lineIdx + 1].getAttribute(\"cy\"))\n    };\n\n    // if vtxPos0 is null or undefined, this is the first time this function\n    // was called in the line move, and we need to get the position of affected\n    // vertices from the svg attributes.\n    // vtx1 and vtx2 are the left and right vertices bounding the line\n    // boundaryBL is the bottom left boundary restricting movement of the line\n    // boundaryTR is the top right boundary restricting movement of the line\n    if (vtxPos0 === null || vtxPos0 === undefined) {\n\n      let boundaryBL = {\n        x: (lineIdx > 0) ? \n               parseInt(_this.svgEls.vertices[lineIdx - 1].getAttribute(\"cx\"))\n            : _this._calcVertexPos({x: _this.o.minXVal, y: _this.o.minYVal}).x,\n        y: _this._calcVertexPos({x: _this.o.minXVal, y: _this.o.minYVal}).y\n      };\n\n      let boundaryTR = {\n        x: (lineIdx + 2 < _this.svgEls.vertices.length) ? \n              parseInt(_this.svgEls.vertices[lineIdx + 2].getAttribute(\"cx\"))\n            : _this._calcVertexPos({x: _this.o.maxXVal, y: _this.o.maxYVal}).x,\n        y: _this._calcVertexPos({x: _this.o.maxXVal, y: _this.o.maxYVal}).y\n      };\n\n      vtxPos0 = {\n       vtx1: vtx1curPos,\n       vtx2: vtx2curPos,\n       boundaryBL: boundaryBL,\n       boundaryTR: boundaryTR\n      };\n    }\n\n    // calculate the new positions for the two affected vertices\n    let vtx1newPos = {\n      x: vtxPos0.vtx1.x + dPos.x,\n      y: vtxPos0.vtx1.y + dPos.y\n    };\n\n    let vtx2newPos = {\n      x: vtxPos0.vtx2.x + dPos.x,\n      y: vtxPos0.vtx2.y + dPos.y\n    };\n\n    // if moving would take x values outside of boundaries, keep x values the same\n    if (vtx1newPos.x < vtxPos0.boundaryBL.x || \n        vtx2newPos.x < vtxPos0.boundaryBL.x || \n        vtx1newPos.x > vtxPos0.boundaryTR.x || \n        vtx2newPos.x > vtxPos0.boundaryTR.x) {\n      vtx1newPos.x = vtx1curPos.x;\n      vtx2newPos.x = vtx2curPos.x;\n    }\n\n    // if moving would take y values outside of boundaries, keep y values the same\n    // remember that y-coordinates are inverted when dealing with the canvas\n    if (vtx1newPos.y > vtxPos0.boundaryBL.y || \n        vtx2newPos.y > vtxPos0.boundaryBL.y || \n        vtx1newPos.y < vtxPos0.boundaryTR.y || \n        vtx2newPos.y < vtxPos0.boundaryTR.y) {\n      vtx1newPos.y = vtx1curPos.y;\n      vtx2newPos.y = vtx2curPos.y;\n    }\n\n    this._moveVertex(vtx1, vtx1newPos);\n    this._moveVertex(vtx2, vtx2newPos);\n\n    // return the original position so that it may be used again if the line move is not finished\n    return vtxPos0;\n  }\n\n  /**\n  * Moves a vertex.\n  * @private\n  * @param {SVGElement} targetVtx - The target vertex\n  * @param {Object} newPos - The new position\n  * @param {number} newPos.x\n  * @param {number} newPos.y\n  */\n  _moveVertex(targetVtx, newPos) {\n    const _this = this;\n\n    let vtxState = _this._calcVertexState(newPos);\n    let vtxIdx = _this.svgEls.vertices.findIndex(vtx => vtx === targetVtx);\n\n    // move the vertex if it's not a fixed start or end point\n    if (!(vtxIdx === 0 && this.o.hasFixedStartPoint) && \n        !(vtxIdx === this.state.vertices.length - 1 && \n        this.o.hasFixedEndPoint)) {\n      let vertices = _this.getState().vertices.map(x=>x);\n\n      vertices[vtxIdx].x = vtxState.x;\n      vertices[vtxIdx].y = vtxState.y;\n\n      _this.setState({\n        vertices: vertices\n      });\n    }\n  }\n\n  /* ===========================================================================\n  *  HELPER METHODS\n  */\n\n  /**\n   * Calculates the x and y for a vertex in the graph according to its state value.\n   * @private\n   */\n  _calcVertexPos(vertexState) {\n    return {\n     x: this._getWidth() * (vertexState.x / this.o.maxXVal),\n     y: this._getHeight() - (this._getHeight() * (vertexState.y / this.o.maxYVal))\n    };\n  }\n\n  /**\n   * Calculates the x and y for a vertex state based on position on the graph.\n   * (inverse of _calcVertexPos).\n   * @private\n   */\n  _calcVertexState(vertexPos) {\n    return {\n      x: this.o.maxXVal * (vertexPos.x / this._getWidth()),\n      y: this.o.maxYVal - (this.o.maxYVal * (vertexPos.y / this._getHeight()))\n    };\n  }\n\n  /**\n   * Converts on-screen x distance to scaled x state-value.\n   * @private\n   */\n  _xPxToVal(x) {\n    return (x / this._getWidth()) * (this.o.maxXVal - this.o.minXVal);\n  }\n\n  /**\n   * Converts on-screen y distance to scaled y state-value.\n   * @private\n   */\n  _yPxToVal(y) {\n    return (y / this._getHeight()) * (this.o.maxYVal - this.o.minYVal);\n  }\n}\n\nexport default Graph;\n\n\n// WEBPACK FOOTER //\n// ./src/ui/graph.js","import Widget from \"ui/core/widget\";\nimport Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\n\n/**\n * Class representing a Multislider widget.\n * @class\n * @implements {Widget}\n */\nclass Multislider extends Widget {\n\n  /**\n   * @constructor\n   * @param {object} container - DOM container for the widget.\n   * @param {object} [o] - Options.\n   * @param {number} [o.numSliders=10] - Number of sliders.\n   * @param {number} [o.minVal=0] - Minimum slider value.\n   * @param {number} [o.maxVal=127] - Maximum slider value.\n   * @param {array<string>} [o.sliderColors=[\"#000\"]] - Slider colors, specified as an array of color values.\n   *                                                    e.g. to get a black-white-black-white zebra pattern, specify\n   *                                                    ['black', 'white']\n   * @param {string} [o.backgroundColor=\"#fff\"] - Background color.\n   */\n  constructor(container, o) {\n    super(container, o);\n  }\n\n  /* ===========================================================================\n  *  INITIALIZATION METHODS\n  */\n\n  /**\n   * Initialize the options\n   * @override\n   * @protected\n   */\n  _initOptions(o) {\n    // set the defaults\n    this.o = {\n      numSliders: 10,\n      minVal: 0,\n      maxVal: 127,\n      sliderColors: [\"#f40\", \"#f50\"],\n      backgroundColor: \"#fff\",\n      mouseSensitivity: 1.2\n    };\n\n    // override defaults with provided options\n    super._initOptions(o);\n  }\n\n  /**\n   * Initialize state constraints\n   * @override\n   * @protected\n   */\n  _initStateConstraints() {\n    const _this = this;\n\n    this.stateConstraints = new ConstraintSpec({\n      sliderVals: [new Constraint({ \n        min: _this.o.minVal, \n        max: _this.o.maxVal,\n        transform: (num) => num.toFixed(0) \n      })]\n    });\n  }\n\n  /**\n   * Initialize state\n   * @override\n   * @protected\n   */\n  _initState() {\n    this.state = {\n      sliderVals: []\n    };\n  }\n\n  /**\n   * Initialize the svg elements\n   * @override\n   * @protected\n   */\n  _initSvgEls() {\n    const _this = this;\n\n    this.svgEls = {\n      panel: document.createElementNS(this.SVG_NS, \"rect\"),\n      sliders: [],\n      sliderPanels: []\n    };\n\n    this._appendSvgEls();\n    this._update();\n  }\n\n  /**\n   * Initialize mouse and touch event handlers\n   * @override\n   * @protected\n   */\n  _initHandlers() {\n    const _this = this;\n\n    this.handlers = {\n      touch: function touch(ev) {\n        ev.preventDefault();\n\n        let y = _this._getHeight() - _this._getRelativeY(ev.clientY);\n\n        _this._setSliderVal(ev.target, y);\n\n        for (let i = 0; i < _this.svgEls.sliderPanels.length; ++i) {\n          _this.svgEls.sliderPanels[i].addEventListener(\"mousemove\", _this.handlers.move);\n          _this.svgEls.sliderPanels[i].addEventListener(\"touchmove\", _this.handlers.move);\n\n        }\n\n        document.addEventListener(\"mouseup\", _this.handlers.release);\n        document.addEventListener(\"touchend\", _this.handlers.release);\n      },\n\n      move: function move(ev) {\n        ev.preventDefault();\n              \n        let y = _this._getHeight() - _this._getRelativeY(ev.clientY);\n        _this._setSliderVal(ev.target, y);\n      },\n\n      release: function release(ev) {\n        ev.preventDefault();\n\n        for (let i = 0; i < _this.svgEls.sliderPanels.length; ++i) {\n          _this.svgEls.sliderPanels[i].removeEventListener(\"mousemove\", _this.handlers.move);\n          _this.svgEls.sliderPanels[i].removeEventListener(\"touchmove\", _this.handlers.move);\n        }\n      }\n    };\n\n    for (let i = 0; i < this.svgEls.sliderPanels.length; ++i) {\n      this.svgEls.sliderPanels[i].addEventListener(\"mousedown\", this.handlers.touch);\n      this.svgEls.sliderPanels[i].addEventListener(\"touchstart\", this.handlers.touch);\n    }\n  }\n\n  /**\n   * Update (redraw) component based on state.\n   * @override\n   * @protected\n   */\n  _update() {\n    const _this = this;\n\n    _this._updateEls();\n  \n    for (let i = 0; i < this.o.numSliders; ++i) {\n      let sliderPos = _this._calcSliderPos(i);\n\n      this.svgEls.sliders[i].setAttribute(\"x\", sliderPos.x);\n      this.svgEls.sliders[i].setAttribute(\"y\", sliderPos.y);\n      this.svgEls.sliders[i].setAttribute(\"width\", _this._calcSliderWidth());\n      this.svgEls.sliders[i].setAttribute(\"height\", _this._calcSliderHeight(i));\n      this.svgEls.sliders[i].setAttribute(\"fill\", this.o.sliderColors[i % this.o.sliderColors.length]);\n\n      this.svgEls.sliderPanels[i].setAttribute(\"x\", sliderPos.x);\n      this.svgEls.sliderPanels[i].setAttribute(\"y\", 0);\n      this.svgEls.sliderPanels[i].setAttribute(\"width\", _this._calcSliderWidth());\n      this.svgEls.sliderPanels[i].setAttribute(\"height\", _this._getHeight());\n      this.svgEls.sliderPanels[i].setAttribute(\"fill\", \"transparent\");\n    }\n\n    // set background panel color\n    this.svgEls.panel.setAttribute(\"x\", 0);\n    this.svgEls.panel.setAttribute(\"y\", 0);\n    this.svgEls.panel.setAttribute(\"width\", _this._getWidth());\n    this.svgEls.panel.setAttribute(\"height\", _this._getHeight());\n    this.svgEls.panel.setAttribute(\"fill\", this.o.backgroundColor);\n  }\n\n  /**\n   * Updates the SVG elements and state containers. \n   * Adds or removes a number of SVG elements and state containers to match the current number of sliders.\n   * @private\n   */\n  _updateEls() {\n    let numSliders = this.o.numSliders;\n\n    // add SVG elements representing sliders to match current number of sliders\n    for (let i = this.state.sliderVals.length; i < numSliders; ++i) {\n      this.state.sliderVals.push(this.o.minVal);\n      this._addSvgSlider();\n    }\n\n    // remove SVG elements representing sliders to match current number of sliders\n    for (let i = this.state.sliderVals.length; i > numSliders; --i) {\n      this.state.sliderVals.pop();\n      this._removeSvgSlider();\n    }\n  }\n\n  /* ===========================================================================\n  *  PUBLIC API\n  */\n\n  /**\n   * Get public representation of the state.\n   * @abstract\n   * @public\n   * @returns {array} - An array of slider values.\n   */\n  getVal() {\n    return this.getState().sliderVals;\n  }\n\n  /**\n   * Set the current state in a format specific to each widget.\n   * Same as setVal(), but will not cause an observer callback trigger.\n   * @abstract @public\n   * @param {array} newSliderVals - An array representing the new slider values\n   */\n  setInternalVal(newSliderVals) {\n    let newState = {\n      sliderVals: newSliderVals\n    };\n    this.setInternalState(newState);\n  }\n\n  /**\n   * Set the current state in a format specific to each widget.\n   * Same as setInternalVal(), but will cause an observer callback trigger.\n   * @abstract @public\n   * @param {array} newSliderVals - An array representing the new slider values\n   */\n  setVal(newSliderVals) {\n    let newState = {\n      sliderVals: newSliderVals\n    };\n    this.setState(newState);\n  }\n\n  /* ===========================================================================\n  *  HELPER METHODS\n  */\n\n  /**\n   * Adds an svg element representing a slider.\n   * @private \n   */\n  _addSvgSlider() {\n    let _this = this;\n\n    let newSlider = document.createElementNS(this.SVG_NS, \"rect\");\n    let newSliderPanel = document.createElementNS(this.SVG_NS, \"rect\");\n    this.svg.appendChild(newSlider);\n    this.svg.appendChild(newSliderPanel);\n    this.svgEls.sliders.push(newSlider);\n    this.svgEls.sliderPanels.push(newSliderPanel);\n\n    newSliderPanel.addEventListener(\"mousedown\", _this.handlers.touch);\n    newSliderPanel.addEventListener(\"touchstart\", _this.handlers.touch);\n  }\n\n  /**\n   * Remove an SVG slider element.\n   * @private \n   */\n  _removeSvgSlider() {\n    let targetSlider = this.svgEls.sliders.pop();\n    let targetSliderPanel = this.svgEls.sliderPanels.pop();\n    this.svg.removeChild(targetSliderPanel);\n    this.svg.removeChild(targetSlider);\n    targetSlider = null;\n    targetSliderPanel = null;\n  }\n\n  /**\n   * Calculate the width of each slider.\n   * Each slider's width is width of multislider / number of sliders.\n   * @private\n   * @returns {number} - Width of each slider in px. \n   */\n  _calcSliderWidth() {\n    return this._getWidth() / this.o.numSliders;\n  }\n\n  /**\n   * Calculate the position for a given slider.\n   * @private\n   * @param {number} idx - Index of the slider (left to right).\n   * @returns {object} - Object representing the {x, y} position.\n   */\n  _calcSliderPos(idx) {\n    const _this = this;\n\n    return {\n      x: _this._calcSliderWidth() * idx, \n      y: _this._getHeight() - _this._calcSliderHeight(idx)\n    };\n  }\n\n  /**\n   * Calculate the slider height.\n   * @private\n   * @param {number} idx - Index of the slider.\n   * @returns {number} - Height of the slider in px.\n   */\n  _calcSliderHeight(idx) {\n    return (this.state.sliderVals[idx] / (this.o.maxVal - this.o.minVal)) * this._getHeight(); \n  }\n\n  /**\n   * Set value for a slider based on y position of a click event.\n   * @param {object} targetSliderPanel - The panel that registered the event. \n   * @param {number} y - Y-position of the event. \n   */\n  _setSliderVal(targetSliderPanel, y) {\n    const _this = this;\n    \n    let targetIdx = this.svgEls.sliderPanels.findIndex(sliderPanel => sliderPanel === targetSliderPanel);\n    let newVal = (y / (this._getHeight())) * (this.o.maxVal - this.o.minVal) + this.o.minVal;\n\n    let newState = {\n      sliderVals: _this.state.sliderVals.map((val, idx) => {\n        return (idx === targetIdx) ? newVal : val;\n      })\n    };\n\n    this.setState(newState);\n  }\n}\n\nexport default Multislider;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/multislider.js","import Widget from \"ui/core/widget\";\nimport Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\n\n/**\n * Class representing a Volume Meter widget.\n * @class\n * @implements {Widget}\n */\nclass Meter extends Widget {\n\n  /**\n   * @constructor\n   * @param {object} container - DOM container for the widget.\n   * @param {AudioContext} audioContext - The audio context to be used.\n   * @param {object} [o] - Options object.\n   * @param {string} [o.backgroundColor=\"#282828\"] - The background color. \n   * @param {number} [o.initAmplitude=0] - The initial amplitude to be displayed (range of 0. - 1.)\n   */\n  constructor(container, audioCtx, o) {\n    o = o || {};\n\n    super(container, o);\n\n    // remove the svg since we are using canvas here\n    this.container.removeChild(this.svg);\n    this.svg = null;\n\n    this._initCanvasElements();\n    this._initAudioModules(audioCtx);\n    this._initOptions(o);\n  }\n\n  /* ===========================================================================\n  *  INITIALIZATION METHODS\n  */\n\n  /**\n   * Initialize the options.\n   * @override\n   * @private\n   */\n  _initOptions(o) {\n    // set the defaults\n    this.o = {\n      backgroundColor: \"#282828\",\n      initAmplitude: 0\n    };\n\n    // override defaults with provided options\n    super._initOptions(o);\n  }\n\n  /**\n   * Initialize the audio modules necessary to analyse the volume.\n   * @param {AudioContext} audioCtx - The audio context to use.\n   */\n  _initAudioModules(audioCtx) {\n    const _this = this;\n\n    this.audioCtx = audioCtx;\n    \n    // keep track of audio values\n    this.amplitude = 0;\n    this.prevAmplitude = 0;\n    this.peak = 0;\n    this.peakSetTime = audioCtx.currentTime;\n    \n    // create the script processor\n    // TODO: ScriptProcessorNode is soon to be derpecated and replaced by AudioWorker\n    this.scriptProcessor = this.audioCtx.createScriptProcessor(512, 1, 1);\n    this.scriptProcessor.connect(this.audioCtx.destination);\n    this.scriptProcessor.onaudioprocess = function(e) {\n      _this.amplitude = _this._calcAmplitude(e.inputBuffer.getChannelData(0));\n      _this.peak = _this._calcPeak();\n    };\n\n    this.input = this.scriptProcessor;\n  }\n\n  /**\n   * Initialize the canvas elements.\n   * @private\n   */\n  _initCanvasElements() {\n    if (this.canvas === undefined) {\n      this.canvas = document.createElement(\"canvas\");\n      this.container.appendChild(this.canvas);\n      this.ctx = this.canvas.getContext(\"2d\");\n    }\n  \n    let containerDims = this.container.getBoundingClientRect();\n    \n    this.canvas.setAttribute(\"width\", containerDims.width);\n    this.canvas.setAttribute(\"height\", containerDims.height);\n\n    this.ledGradient = this.ctx.createLinearGradient(0, this.canvas.height, 0, 0);\n    this.ledGradient.addColorStop(0, 'green');\n    this.ledGradient.addColorStop(0.6, 'lightgreen');\n    this.ledGradient.addColorStop(0.8, 'yellow');\n    this.ledGradient.addColorStop(1, 'red');\n\n    this._update();\n  }\n\n  /**\n   * Update (redraw) component based on state.\n   * @override\n   * @private\n   */\n  _update() {\n    const _this = this;\n\n    let containerDims = this.container.getBoundingClientRect();\n    let width = containerDims.width;\n    let height = containerDims.height;\n\n    redraw();\n\n    function redraw() {\n      let ledHeight = height * _this.amplitude;   \n      let peakYPos = height * _this.peak;\n\n      _this.ctx.clearRect(0, 0, width, height);\n      \n      // draw the background\n      _this.ctx.fillStyle = _this.o.backgroundColor;\n      _this.ctx.fillRect(0, 0, width, height);\n\n      // draw the led\n      _this.ctx.fillStyle = _this.ledGradient;\n      _this.ctx.fillRect(0, height - ledHeight, width, ledHeight);\n\n      // draw the peak\n      _this.ctx.fillStyle = _this.ledGradient;\n      _this.ctx.fillRect(0, peakYPos, width, 10);\n      \n      window.requestAnimationFrame(redraw);\n    } \n  }\n\n  /* ===========================================================================\n  *  PUBLIC API\n  */\n\n  /**\n   * Recieve audio from a source.\n   * @param {AudioNode} audioSource - The audio source to connect.\n   */\n  receiveAudioFrom(audioSource) {\n    audioSource.connect(this.scriptProcessor);\n  }\n\n  /* ===========================================================================\n  *  HELPER METHODS\n  */\n\n  /**\n   * Calculate the amplitude for a given audio buffer\n   * @param {Float32Array} buffer\n   */\n  _calcAmplitude(buffer) {\n    let sum = 0;\n    \n    for (let i = 0; i < buffer.length; ++i) {\n      sum += buffer[i] * buffer[i];\n    }\n\n    return Math.sqrt(sum / buffer.length); \n  }\n\n  /**\n   * Calculate the current peak\n   */\n  _calcPeak() {\n\n    // calculate the peak position\n    // special cases - peak = -1 means peak expired and waiting for amplitude to rise\n    // peak = 0 means amplitude is rising, waiting for peak\n    if (this.amplitude < this.prevAmplitude) {\n      this.peak = this.prevAmplitude;\n      this.peakSetTime = this.audioCtx.currentTime;\n    } else if (this.amplitude > this.prevAmplitude) {\n      this.peak = 0;\n    }\n\n    // draw the peak for 2 seconds, then remove it\n    if (this.audioCtx.currentTime - this.peakSetTime > 2 && this.peak !== 0) {\n      this.peak = -1;\n    }\n\n    this.prevAmplitude = this.amplitude;\n  }\n}\n\nexport default Meter;\n\n\n// WEBPACK FOOTER //\n// ./src/ui/meter.js","import WidgetDial from \"ui/dial\";\nimport EnvelopeGraph from \"ui/graph\";\nimport Keyboard from \"ui/keyboard\";\nimport Multislider from \"ui/multislider\";\nimport Dropmenu from \"ui/dropmenu\";\nimport Slider from \"ui/slider\";\nimport Meter from \"ui/meter\";\nimport Numberbox from \"ui/numberbox\";\n\n/** Dial */\nlet dialContainer = document.getElementById(\"dial\");\nlet dialDisplay = dialContainer.nextElementSibling;\nlet dial = new WidgetDial(dialContainer);\ndial.addObserver((state) => {\n  dialDisplay.innerHTML = state;\n});\ndial.setVal(300);\n\n/** Graph */\nlet envelopeGraphContainer = document.getElementById(\"graph\");\nlet envelopeGraphDisplay = document.getElementById(\"graph-display\");\nlet envelopeGraph = new EnvelopeGraph(envelopeGraphContainer);\nenvelopeGraph.addObserver(function(state) {\n  envelopeGraphDisplay.innerHTML = state.map((xyPair) => \" [\" + xyPair[0] + \", \" + xyPair[1] + \"]\");\n});\nenvelopeGraph.setVal([[0.0, 0.0],[5.3, 65.9],[10.7, 37.3],[16.5, 26.5],[26.0, 37.9],[35.8, 17.2],\n  [45.3, 69.2],[49.8, 53.9],[53.3, 27.2],[61.3, 15.9],[69.3, 25.9],[74.7, 39.9],[79.5, 47.9],\n  [83.2, 33.9],[86.2, 25.9],[91.0, 19.2],[92.0, 28.5],[93.0, 44.5],[97.3, 81.9],[100.0, 0.0]]\n);\n\n/** Keyboard */\nlet keyboardContainer = document.getElementById(\"keyboard\");\nlet keyboardDisplay = document.getElementById(\"keyboard-display\");\nkeyboardContainer.style.backgroundColor = \"red\";\nlet keyboard = new Keyboard(keyboardContainer, {\n  bottomNote: 36,\n  topNote: 83\n});\nkeyboard.addObserver(function(note) {\n  keyboardDisplay.innerHTML = \"Pitch: \" + note.pitch + \" Vel: \" + note.vel + \"<br>\" +\n    \"Active Notes: \" + keyboard.getActiveNotes().map(an => \"[ \" + an[0] + \", \" + an[1] + \" ]\");\n});\nkeyboard.setVal({pitch: 60, vel: 100});\nkeyboard.setVal({pitch: 64, vel: 100});\nkeyboard.setVal({pitch: 67, vel: 100});\n\n\n/** Multislider */\nlet multisliderContainer = document.getElementById(\"multislider\");\nlet multisliderDisplay = document.getElementById(\"multislider-display\");\nlet multislider = new Multislider(multisliderContainer, {});\nmultislider.addObserver(function(sliderVals) {\n  multisliderDisplay.innerHTML = sliderVals.map(val => \" \" + val);\n});\nmultislider.setState({sliderVals: [10, 50, 97, 81, 119, 81, 26, 114, 74, 47]});\n\n/** Slider */\nlet sliderContainer = document.getElementById(\"slider\");\nlet sliderDisplay = document.getElementById(\"slider-display\");\nlet slider = new Slider(sliderContainer, {});\nslider.addObserver(function(sliderVal) {\n  sliderDisplay.innerHTML = sliderVal;\n});\nslider.setVal(30);\n\n/** Meter */\nlet meterContainer = document.getElementById(\"meter\");\nlet meterDisplay = document.getElementById(\"meter-display\");\n\nlet audioCtx = new AudioContext();\n\nlet meter = new Meter(meterContainer, audioCtx, {});\n\nlet osc = audioCtx.createOscillator();\nlet lfo1 = audioCtx.createOscillator();\nlet lfo2 = audioCtx.createOscillator();\nlet amp1 = audioCtx.createGain();\nlet amp2 = audioCtx.createGain();\nlet amp3 = audioCtx.createGain();\n\nlfo1.frequency.value = 0.5;\nlfo2.frequency.value = 0.1;\namp3.gain.value = 0.5;\nosc.frequency.value = 220;\n\nlfo1.connect(amp1.gain);\nlfo2.connect(amp1);\namp1.connect(amp2.gain);\nosc.connect(amp2);\namp2.connect(amp3);\nmeter.receiveAudioFrom(amp3);\n\nlfo1.start();\nlfo2.start();\nosc.start();\n\n/** Dropmenu */\nlet dropmenuContainer = document.getElementById(\"dropmenu\");\nlet dropmenuDisplay = document.getElementById(\"dropmenu-display\");\nlet dropmenu = new Dropmenu(dropmenuContainer, {});\ndropmenu.setMenuItems([\"Zero\", \"One\", \"Two\", \"Three\", \"Four\", \"Five\"]);\ndropmenu.addObserver(function(selectedItem) {\n  dropmenuDisplay.innerHTML = \"Current selection: \" + selectedItem;\n});\n\n/** Numberbox */\nlet numberboxContainer = document.getElementById(\"numberbox\");\nlet numberboxDisplay = document.getElementById(\"numberbox-display\");\nlet numberbox = new Numberbox(numberboxContainer, {});\nnumberbox.addObserver(function(val) {\n  numberboxDisplay.innerHTML = val;\n});\n\n\n// WEBPACK FOOTER //\n// ./doc/ui/ui-doc.js"],"sourceRoot":""}