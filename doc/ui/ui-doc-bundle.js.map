{"version":3,"sources":["webpack:///webpack/bootstrap cba168212ad4a5cf5492","webpack:///./src/util/constraint.js","webpack:///./src/util/constraint-def.js","webpack:///./src/ui/core/widget.js","webpack:///./src/util/util-math.js","webpack:///./src/ui/core/widget-mixin-svgns.js","webpack:///./src/ui/core/widget-mixin-state.js","webpack:///./src/ui/core/widget-mixin-options.js","webpack:///./src/ui/core/widget-mixin-observer.js","webpack:///./src/ui/dial.js","webpack:///./src/ui/slider.js","webpack:///./src/ui/graph.js","webpack:///./src/ui/numberbox.js","webpack:///./src/ui/keyboard.js","webpack:///./src/ui/dropmenu.js","webpack:///./src/ui/multislider.js","webpack:///./src/ui/meter.js","webpack:///./doc/ui/ui-doc.js"],"names":["Constraint","spec","min","max","enum","transform","ConstraintSpec","specDefObj","constraintMap","_parseMap","targetObj","_this","forEach","_constrainBranch","keyBranch","target","constraint","key","undefined","Math","Array","find","c","cMap","push","Object","parentBranch","map","x","keys","keyIdx","newKeyBranch","curKey","length","arrFlag","i","keyBranchSlice","slice","j","_applyConstraint","Widget","container","o","document","querySelector","Element","Error","svg","createElementNS","SVG_NS","appendChild","setAttribute","getBoundingClientRect","width","height","svgEls","handlers","state","stateConstraints","observers","_initOptions","_initStateConstraints","_initState","_initSvgEls","_initHandlers","values","appendSvgEls","svgEl","child","arrEl","newVal","newState","_getLeft","y","_getTop","top","left","assign","prototype","MathUtil","getPrecision","val","decStr","split","round","precision","factor","pow","quantize","q","qVal","abs","WidgetStateMixin","getState","setInternalState","isChanged","hasOwnProperty","constrain","_update","setState","_notifyObservers","WidgetOptionsMixin","getOptions","setOptions","WidgetObserverMixin","addObserver","newObserver","observer","removeObserver","targetObserver","idx","splice","addListener","newListener","removeListener","targetListener","getVal","Dial","stepPrecision","step","minVal","maxVal","needleColor","activeColor","mouseSensitivity","num","bgArc","activeArc","needle","_calcSvgArcPath","_calcNeedleCenter","_calcDialRadius","PI","_calcArcStrokeWidth","_calcNeedleEnd","_calcNeedleWidth","_appendSvgEls","y0","yD","touch","ev","clientY","addEventListener","move","release","preventDefault","_calcMovePrecision","removeEventListener","_calcNeedleAngle","radius","_getWidth","_getHeight","trunc","sin","cos","cx","cy","r","startAngle","endAngle","x1","y1","x2","y2","largeArc","sweep","join","Slider","sliderBodyColor","sliderHandleColor","dims","offsetBottom","offsetTop","bodyWidth","handleWidth","handleHeight","body","overlay","handle","touchBody","stopPropagation","_calcTouchVal","touchHandle","moveHandle","releaseHandle","sliderBodyPos","_calcSliderBodyPos","_calcSliderBodyHeight","sliderHandlePoints","_calcSliderHandlePoints","sliderBodyHeight","x0","valRange","bodyY","_getRelativeY","touchVal","Graph","vertices","vtx","vertexArray","xyPair","newVtx","minXVal","minYVal","isXFixed","isYFixed","xAnchor","yAnchor","maxXVal","maxYVal","newVertices","sort","a","b","addVertex","maxNumVertices","quantizeX","quantizeY","xDecimalPrecision","yDecimalPrecision","isEditable","vertexColor","fixedVertexColor","lineColor","backgroundColor","vertexRadius","lineWidth","panel","lines","targetVtx","targetLine","vtxPos0","dx","dy","touchPanel","xPos","clientX","yPos","vertexState","_calcVertexState","touchVertex","moveVertex","deleteVertex","touchLine","moveLine","endMoveLine","dPos","_moveLine","_deleteVertex","endMoveVertex","_moveVertex","line","idxSortMap","el","_addSvgVertex","_removeSvgVertex","stateVtx","svgVtx","pos","_calcVertexPos","vtxFill","prevVtx","prevPos","removeChild","svgLine","vtxIdx","findIndex","isRemovable","newVertex","_addSvgLine","newLine","vertex","pop","_removeSvgLine","lineIdx","vtx1","vtx2","vtx1curPos","parseInt","getAttribute","vtx2curPos","boundaryBL","boundaryTR","vtx1newPos","vtx2newPos","newPos","vtxState","normalizedWidth","normalizedHeight","vertexPos","Numberbox","quantizeInterval","fontColor","fontSize","fontFamily","appendString","valConstraintDef","text","style","cursor","charNum","power","_getSelectedCharNumber","_getPowerOfSelectedDigit","kbdEdit","textContent","toFixed","panelWidth","panelHeight","textWidth","textHeight","svgBRect","textBRect","numChars","getNumberOfChars","svgX","svgY","svgPoint","createSVGPoint","getCharNumAtPosition","Keyboard","bottomNote","_isWhiteKey","topNote","lastNoteEvent","activeNotes","note","pitch","vel","newNote","isVelToggled","_getNewStateFromNewNote","keyBorderColor","blackKeyColor","whiteKeyColor","blackKeyActiveColor","whiteKeyActiveColor","blackKeyHeightAspect","blackKeyWidthAspect","maxPolyphony","orientation","numKeys","_getNumKeys","_addSvgKey","_removeSvgKey","touchVel","ceil","_getKeyboardHeight","_touchKey","targetKey","setVal","fill","stroke","blackKeys","notes","activeNote","_updateSvgEls","whiteKeyIdx","_getPitchForKeyIdx","attr","_getWhiteKeyWidth","_setKeyAttributes","noteIdx","newKey","whiteKeyCount","curNote","_getKeyboardWidth","_getNumWhiteKeys","Dropmenu","selectedItemIdx","menuItems","itemIdx","item","menuItem","menuItemFontSize","menuItemFontFamily","menuItemVerticalPadding","menuItemHorizontalPadding","selectedItemBackgroundColor","selectedItemFontColor","hasFocus","menuTogglePanel","menuToggleText","menuToggleOverlay","menuBodyCanvasContainer","createElement","menuBodyCanvas","menuBodyPanel","menuItemPanels","menuItemTextboxes","menuItemOverlays","position","focus","blur","mouseOverItem","targetOverlay","_mouseOverItem","mouseLeaveItem","select","_mouseLeaveItem","hoverOut","_selectItem","_updateEls","display","menuItemDims","_calcMenuItemDims","menuDims","curPanel","curTextbox","curOverlay","_addSvgMenuItem","_removeSvgMenuItem","targetPanel","targetTextbox","newItemText","newItemPanel","newItemOverlay","targetItemTexbox","targetItemPanel","targetItemOverlay","maxHeight","maxWidth","bbox","Multislider","numSliders","sliderColors","sliderVals","sliders","sliderPanels","_setSliderVal","sliderPos","_calcSliderPos","_calcSliderWidth","_calcSliderHeight","_addSvgSlider","_removeSvgSlider","newSliderVals","newSlider","newSliderPanel","targetSlider","targetSliderPanel","targetIdx","sliderPanel","Meter","audioCtx","_initCanvasElements","_initAudioModules","initAmplitude","amplitude","prevAmplitude","peak","peakSetTime","currentTime","scriptProcessor","createScriptProcessor","connect","destination","onaudioprocess","e","_calcAmplitude","inputBuffer","getChannelData","_calcPeak","input","canvas","ctx","getContext","containerDims","ledGradient","createLinearGradient","addColorStop","redraw","ledHeight","peakYPos","clearRect","fillStyle","fillRect","window","requestAnimationFrame","audioSource","buffer","sum","sqrt","detailsToggles","getElementsByClassName","toggle","detailsContainer","parentNode","toggleDetails","classList","dialContainer","getElementById","dialDisplay","nextElementSibling","dial","innerHTML","envelopeGraphContainer","envelopeGraphDisplay","envelopeGraph","keyboardContainer","keyboardDisplay","keyboard","getActiveNotes","an","multisliderContainer","multisliderDisplay","multislider","sliderContainer","sliderDisplay","slider","sliderVal","meterContainer","meterDisplay","AudioContext","meter","osc","createOscillator","lfo1","lfo2","amp1","createGain","amp2","amp3","frequency","value","gain","receiveAudioFrom","start","dropmenuContainer","dropmenuDisplay","dropmenu","setMenuItems","selectedItem","numberboxContainer","numberboxDisplay","numberbox"],"mappings":"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","file":"/doc/ui/ui-doc-bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 46);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap cba168212ad4a5cf5492","/**\n * @class\n * Constraint object represents constraints on a value.\n * Instances of Constraint are used as leaves on a ConstraintSpec definition.\n * A ConstraintSpec useses Constraints to apply a constraint to leaves of an\n * arbitrarily nested object, whose leaves represent values that may be constrained.\n */\nclass Constraint {\n\n  /**\n   * @constructor\n   * @param {object} [spec] - Spec specifying the constraints.\n   * @param {number} [spec.min] - Minimum value.\n   * @param {number} [spec.max] - Maximum value.\n   * @param {array} [spec.enum] - Array of possible enumerable values.\n   * @param {function} [spec.transform] - A transformation function to apply to the value.\n   */\n  constructor(spec) {\n    spec = spec || {};\n\n    this.min = spec.min;\n    this.max = spec.max;\n    this.enum = spec.enum;\n    this.transform = spec.transform;\n  }\n}\n\nexport default Constraint;\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/constraint.js","import Constraint from \"./constraint\";\n\n/**\n * ConstraintSpec is used to apply a constraining function to a state object of arbitrary nestedness,\n * whose leaves are values that need to be constrained (i.e. to min or max values).\n * In order for ConstraintSpec to work properly, it's constructor must be given an object that\n * exactly mirrors the nested structure of the object to be constrained, with the leaves\n * containing instances of the Constraint class. Additional requirements (i.e. how to deal with nested arrays)\n * are outlined below.\n * TODO: expand explanation\n *\n * @class\n */\nclass ConstraintSpec {\n\n  /**\n   * @constructor\n   * @param {object} specDefObj - The constraint spec definition object, which defines the nesting\n   *                              structure of the objects that need to be constrained. The leaves\n   *                              of this specDef object must be objects of type Constraint, which\n   *                              act as the constraint definitions for each leaf.\n   */\n  constructor(specDefObj) {\n    this.constraintMap = [[]];\n    this._parseMap(specDefObj, this.constraintMap[0], this.constraintMap);\n  }\n\n  /**\n   * Check a constraint map for constraint specs and apply them to obj.\n   * Note: will not mutate the original object. New value is returned.\n   * @public\n   * @param {object} targetObj - The state object to check\n   * @return {number | string | object | array} val - The constrained value.\n   */\n  constrain(targetObj) {\n    const _this = this;\n    _this.constraintMap.forEach(keyBranch => {\n      _this._constrainBranch(targetObj, keyBranch);\n    });\n  }\n\n  /**\n   * Apply a constraint.\n   * @private\n   * @param {object} target - The target object to constrain\n   * @param {Constraint} constraint - The constraint object to use.\n   * @param {symbol} key - The key to use to access the constraint.\n   * @return {number | string | object | array} val - The constrained value.\n   */\n  _applyConstraint(target, constraint, key) {\n    if (constraint.min !== undefined) {\n      target[key] = Math.max(target[key], constraint.min);\n    }\n    if (constraint.max !== undefined) {\n      target[key] = Math.min(target[key], constraint.max);\n    }\n    if (constraint.enum !== undefined && constraint.enum instanceof Array) {\n      target[key] = (constraint.enum.find(target[key]) !== undefined) ? target[key] : constraint.enum[0];\n    }\n    if (constraint.transform !== undefined && typeof constraint.transform === \"function\") {\n      target[key] = constraint.transform(target[key]);\n    }\n\n    return target;\n  }\n\n  /**\n   * Parse a constraint map\n   * @private\n   * @param {object} c - The map object currently being examined.\n   *                     At the top level, this would be the whole map.\n   *                     At the terminal level, this would be an instance of Constraint object.\n   * @param {array} keyBranch - An array of keys that will specify how to get to each Constraint.\n   *                            The last element in this array will be the constraint itself.\n   * @param {array} cMap - An mutable array of key branches.\n   */\n  _parseMap(c, keyBranch, cMap) {\n    const _this = this;\n\n    if (c instanceof Array) {\n      /* if c is an array, add \"_arr_\" to the current map, and examine the first element.\n       * all elements in an array are required to have identical structure, so examining\n       * the first one is enough.\n       */\n      keyBranch.push(\"_arr_\");\n      _this._parseMap(c[0], keyBranch, cMap);\n    } else if (c instanceof Object && !(c instanceof Constraint)) {\n      // keep a copy of the parent branch to create new branches from\n      let parentBranch = keyBranch.map(x=>x);\n\n      // create new branch for each key after the first key using the parentBranch clone\n      Object.keys(c).forEach((key, keyIdx) => {\n        if (keyIdx === 0) {\n          keyBranch.push(key);\n          _this._parseMap(c[key], keyBranch, cMap);\n        } else {\n          let newKeyBranch = parentBranch.map(x=>x);\n          cMap.push(newKeyBranch);\n          newKeyBranch.push(key);\n          _this._parseMap(c[key], newKeyBranch, cMap);\n        }\n      });\n    } else if (c instanceof Constraint) {\n\n      // this will be the last element in the branch - the Constraint object itself\n      keyBranch.push(c);\n    }\n  }\n\n  /**\n   * Apply constraints to one branch of the constraint map.\n   * @private\n   * @param {object} targetObj - The state object to apply the constraint to\n   * @param {object} defObj - The constraint definition object to use.\n   * @param {array} keyBranch - An array of keys representing a path to a constraint object.\n   */\n  _constrainBranch(targetObj, keyBranch) {\n    const _this = this;\n\n    let curKey;\n    let constraint = keyBranch[keyBranch.length - 1];\n    let arrFlag = false;\n\n    /* Drill into targetObj and defObj following keyBranch keys\n     * We go to length - 2, because the next-to-last element might be an\n     * array, and the last element is the Constraint object itself.\n     */\n    for (let i = 0; i < keyBranch.length - 2 && !arrFlag; ++i) {\n      curKey = keyBranch[i];\n\n      // if we encounter an array, drill into each corresponding arry element in targetObj\n      if (curKey === \"_arr_\") {\n        arrFlag = true;\n\n        let keyBranchSlice = keyBranch.slice(i + 1, keyBranch.length);\n\n        for (let j = 0; j < targetObj.length; ++j) {\n          _this._constrainBranch(targetObj[j], keyBranchSlice);\n        }\n      } else {\n        targetObj = targetObj[curKey];\n      }\n    }\n\n    // if arrFlag is set, we've encountered an array somewhere other than on the leaves\n    // in this case we don't need to operate on it\n    if (!arrFlag) {\n      // Apply the constraints\n      curKey = keyBranch[keyBranch.length - 2];\n\n      if (curKey === \"_arr_\") {\n        for (let i = 0; i < targetObj.length; ++i) {\n          _this._applyConstraint(targetObj, constraint, i);\n        }\n      } else {\n        _this._applyConstraint(targetObj, constraint, curKey);\n      }\n    }\n  }\n}\n\nexport default ConstraintSpec;\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/constraint-def.js","import WidgetSvgNsMixin from \"./widget-mixin-svgns\";\nimport WidgetStateMixin from \"./widget-mixin-state\";\nimport WidgetOptionsMixin from \"./widget-mixin-options\";\nimport WidgetObserverMixin from \"./widget-mixin-observer\";\n\n'use strict';\n\n/**\n * Abstract base class representing an SVG widget that can be placed inside a DOM container.\n * @class\n * @abstract\n */\nclass Widget {\n\n  /**\n   * @constructor\n   * @mixes WidgetSvgNsMixin\n   * @mixes WidgetStateMixin\n   * @mixes WidgetOptionsMixin\n   * @mixes WidgetObserverMixin\n   * @param {DOM element | string} container - DOM element that will contain the widget,\n   *                                           or string passed to querySelector to find\n   *                                           said DOM element.\n   * @param {object=} o - Options.\n   */\n  constructor(container, o) {\n    if (typeof container === \"string\") {\n      container = document.querySelector(container);\n    }\n\n    if (container === undefined || !(container instanceof Element)) {\n      throw new Error(\"widget requires a DOM element specifying its container as the first argument\");\n    }\n\n    this.container = container;\n\n    o = o || {};\n\n    this.svg = document.createElementNS(this.SVG_NS, \"svg\");\n    this.container.appendChild(this.svg);\n    this.svg.setAttribute(\"width\", this.container.getBoundingClientRect().width);\n    this.svg.setAttribute(\"height\", this.container.getBoundingClientRect().height);\n\n    /* Manifest of containers and namespaces */\n    this.o = {};                 // options namespace\n    this.svgEls = {};            // svg element namespace\n    this.handlers = {};          // mouse and touch event handler namespace\n    this.state = {};             // state namespace\n    this.stateConstraints = {};  // state constraints namespace\n    this.observers = [];         // observer callback container\n\n    this._initOptions(o);\n    this._initStateConstraints();\n    this._initState();\n    this._initSvgEls();\n    this._initHandlers();\n  }\n\n  /**\n   * Initialize the options\n   * @abstract\n   * @protected\n   */\n  _initOptions(o) {}\n\n  /**\n   * Initialize state constraints\n   * @abstract\n   * @protected\n   */\n  _initStateConstraints() {}\n\n  /**\n   * Initialize state\n   * @abstract\n   * @protected\n   */\n  _initState() {}\n\n  /**\n   * Initialize the svg elements.\n   * Each implementation of this method must end with calls to _appendSvgEls() and _update(),\n   * in that order, as shown in this template\n   * @abstract\n   * @protected\n   */\n  _initSvgEls() {}\n\n  /**\n   * Append the newly created svg elements to the svg container.\n   * This method should be called exctly once by each implementation of the _initSvgEls() method.\n   * @protected\n   */\n  _appendSvgEls() {\n    const _this = this;\n\n    Object.values(_this.svgEls).forEach(svgEl => {\n      appendSvgEls(svgEl);\n    });\n\n    function appendSvgEls(child) {\n      if (child instanceof Array) {\n        child.forEach(arrEl => appendSvgEls(arrEl));\n      } else {\n        _this.svg.appendChild(child);\n        child.setAttribute(\"shape-rendering\", \"geometricPrecision\");\n      }\n    }\n  }\n\n  /**\n   * Initialize mouse and touch event handlers\n   * @abstract\n   * @protected\n   */\n  _initHandlers() {}\n\n  /**\n   * Update (redraw) component based on state\n   * @abstract\n   * @protected\n   */\n  _update() {}\n\n  /* ===========================================================================\n  *  PUBLIC API\n  */\n\n  /**\n   * Get public representation of the state.\n   * @abstract\n   * @public\n   */\n  getVal() {}\n\n  /**\n   * Set the current state in a format specific to each widget.\n   * Same as setVal(), but will not cause an observer callback trigger.\n   * @abstract \n   * @public\n   */\n  setInternalVal(newVal) {}\n\n  /**\n   * Set the current state in a format specific to each widget.\n   * Same as setInternalVal(), but will cause an observer callback trigger.\n   * @abstract @public\n   */\n  setVal(newVal) {}\n\n  /**\n   * Get the current state.\n   * @abstract\n   * @public\n   * @returns {object} - Copy of this.state\n   */\n  getState() {}\n\n  /**\n   * Set the current state and redraw.\n   * @description If no new state argument is provided, will reassign old state, taking into account the stateConstraints.\n   * As opposed to setState(), setInternalState() does not trigger observer notification.\n   * Will use Widget.stateConstraints to constrain each state value to each constraints min, max, or enum\n   * @abstract\n   * @public\n   * @param {object} [newState] - The new state.\n   * @returns {boolean} A flag indicating whether the state has been changed.\n   */\n  setInternalState(newState) {}\n\n  /**\n   * Sets the current state and redraws.\n   * @description As opposed to setInternalState(), setState() will call the observer callback functions,\n   * so may lead to an infinate loop if an observer calls this method.\n   * @abstract\n   * @public\n   * @param {object} [newState] - The new state.\n   * @returns {boolean} A flag indicating whether the state has been changed.\n   */\n  setState(newState) {}\n  \n  /* ===========================================================================\n  *  HELPER METHODS\n  */\n\n  /** Helper method: get x relative to the container */\n  _getRelativeX(x) {\n    return x - this._getLeft();\n  }\n\n  /** Helper method: get y relative to the container */\n  _getRelativeY(y) {\n    return y - this._getTop();\n  }\n\n   /** Helper method: get the width of the svg container */\n   _getWidth() {\n     return this.svg.getBoundingClientRect().width;\n   }\n\n   /** Helper method: get the height of the svg container */\n   _getHeight() {\n     return this.svg.getBoundingClientRect().height;\n   }\n\n   /** Helper method: get the top edge position of the svg container */\n   _getTop() {\n     return this.svg.getBoundingClientRect().top;\n   }\n\n   /** Helper method: get the left edge position of the svg container */\n   _getLeft() {\n     return this.svg.getBoundingClientRect().left;\n   }\n}\n\nObject.assign(Widget.prototype, WidgetSvgNsMixin);\nObject.assign(Widget.prototype, WidgetStateMixin);\nObject.assign(Widget.prototype, WidgetOptionsMixin);\nObject.assign(Widget.prototype, WidgetObserverMixin);\n\nexport default Widget;\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget.js","/**\n * Useful Math Utility functions\n */\nlet MathUtil = {\n\n  /**\n   * Returns the decimal precision of a number.\n   * @param {number} val - The value whose precision to check.\n   * @returns {number} - Number of decimal places.\n   */\n  getPrecision(val) {\n    let decStr = (''+val).split('.')[1];\n    return (decStr ? decStr.length : 0);\n  },\n\n  /**\n   * Round a number to specified decimal precision.\n   * Same as Number.prototype.toFixed, but does not use toString.\n   * @param {nubmer} val - Value to be rounded.\n   * @param {precision} val - \n   * @returns  \n   */\n  round: function round(val, precision) {\n    let factor = Math.pow(10, precision);\n    return Math.round(val * factor) / factor;\n  },\n\n  /**\n   * Quantize a value (set it to the closest value matching the interval)\n   * Note: result will not necessarily reflect the same number of places of\n   * as the q input due to floating point arithmetic.\n   * @param {number} val - Value to quantize.\n   * @param {number} q - The quantization interval.\n   * @param {number} precision - The decimal precision of the result.\n   * @returns {number} qVal - Quantized val.\n   */\n  quantize: function quantize(val, q, precision) {\n    let qVal;\n\n    if (q == 0) {\n      return 0;\n    } else if (q < 0) {\n      q = Math.abs(q);\n    }\n\n    // quantize\n    qVal = ~~(val / q) * q;\n\n    qVal = Math.abs(val - qVal) > (q / 2) ? \n            qVal > 0 ? \n              qVal + q\n            : qVal - q\n          : qVal;\n\n    if (precision !== undefined) {\n      qVal = MathUtil.round(qVal, precision);\n    }\n\n    return qVal;\n  },\n\n  /**\n   * Alias for quantize(val, q)\n   * @param {number} val - Value to quantize\n   * @param {number} q - The quantization interval\n   * @param {number} precision - The decimal precision of the result.\n   * @returns {number} qVal - Quantized val\n   */\n  q: function q(val, q, precision) {\n    return MathUtil.quantize(val, q, precision);\n  }\n};\n\nexport default MathUtil;\n\n\n// WEBPACK FOOTER //\n// ./src/util/util-math.js","/**\n * Mixin specifying the xml namespace for SVG\n * @mixin\n */\nconst SVG_NS = { SVG_NS: \"http://www.w3.org/2000/svg\" };\n\nexport default SVG_NS;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget-mixin-svgns.js","import Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\n\n/**\n * Mixin for methods related to state management\n * @mixin\n */\nlet WidgetStateMixin = {\n\n  /**\n   * Get the current state.\n   *\n   * @public\n   * @returns {object} - Copy of this.state\n   */\n  getState: function getState() {\n    return Object.assign({}, this.state);\n  },\n\n  /**\n   * Set the current state and redraw.\n   *\n   * @description If no new state argument is provided, will reassign old state, taking into account the stateConstraints.\n   * As opposed to setState(), setInternalState() does not trigger observer notification.\n   * Will use Widget.stateConstraints to constrain each state value to each constraints min, max, or enum\n   *\n   * @protected\n   * @param {object=} newState - The new state.\n   * @return {boolean} isChanged - Returns a boolean indicating whether the state has been changed\n   */\n  setInternalState: function setInternalState(newState) {\n    const _this = this;\n    let isChanged = false;\n\n    newState = newState || this.getState();\n\n    Object.keys(newState).forEach(key => {\n      if (_this.state.hasOwnProperty(key) && _this.state[key] !== newState[key]) {\n        _this.state[key] = newState[key];\n        isChanged = true;\n      }\n    });\n\n    _this.stateConstraints.constrain(_this.state);\n    this._update();\n\n    return isChanged;\n  },\n\n  /**\n   * Set the current state and redraw.\n   *\n   * @description As opposed to setInternalState(), setState() will call the observer callback functions,\n   * so may lead to an infinate loop if an observer calls this method.\n   *\n   * @protected\n   * @param {object=} newState - The new state.\n   * @return {boolean} isChanged - Returns a boolean indicating whether the state has been changed\n   */\n  setState: function setState(newState) {\n    const _this = this;\n    let isChanged = false;\n\n    isChanged = this.setInternalState(newState);\n\n    this._notifyObservers();\n\n    return isChanged;\n  }\n};\n\nexport default WidgetStateMixin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget-mixin-state.js","/**\n * Mixin for methods related to options\n * @mixin\n */\nlet WidgetOptionsMixin = {\n\n  /**\n   * Initializes the options.\n   * @private\n   * @param {object} o - Options.\n   */\n  _initOptions: function _initOptions(o) {\n    const _this = this;\n    o = o || {};\n\n    Object.keys(o).forEach(key => {\n      if (_this.o.hasOwnProperty(key) && _this.o[key] !== o[key]) {\n        _this.o[key] = o[key];\n      }\n    });\n  },\n\n  /**\n   * Get the options object\n   * @public\n   * @return {object} this.o - Options\n   */\n  getOptions: function getOptions() {\n    return Object.assign({}, this.o);\n  },\n\n  /**\n   * Set the options\n   * Uses a diffing function, so only specified keys that have new values will be changed\n   * @public\n   * @param {object} o - options\n   * @return {boolean} isChanged - Returns a boolean indicating whether any option has been changed\n   */\n  setOptions: function setOptions(o) {\n    const _this = this;\n    o = o || {};\n    let isChanged = false;\n\n    Object.keys(o).forEach(key => {\n      if (_this.o.hasOwnProperty(key) && _this.o[key] !== o[key]) {\n        _this.o[key] = o[key];\n        isChanged = true;\n      }\n    });\n\n    if (isChanged) {\n      this.setState();\n    }\n\n    return isChanged;\n  }\n};\n\nexport default WidgetOptionsMixin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget-mixin-options.js","/**\n * Mixin for methods related to observer callback support\n * @mixin\n */\nlet WidgetObserverMixin = {\n\n  /**\n   * Register a new observer function that will recieve the state value every time the state is updated.\n   * @public\n   * @param {function} newObserver - The new observer function to be notified every time the state changes.\n   * @return {boolean} isChanged - Indicates whether an observer was added.\n   */\n  addObserver: function addObserver(newObserver) {\n    let isChanged = false;\n\n    if (!(this.observers.find(observer => observer === newObserver))) {\n      this.observers.push(newObserver);\n      isChanged = true;\n    }\n\n    return isChanged;\n  },\n\n  /**\n   * Remove an observer function from being notified when the state changes.\n   * @public\n   * @param {function} targetObserver - The observer function to be removed.\n   * @return {boolean} isChanged - Indicates whether an observer has been removed\n   */\n  removeObserver: function removeObserver(targetObserver) {\n    const _this = this;\n    let isChanged = false;\n\n    this.observers.forEach((observer, idx) => {\n      if (observer === targetObserver) {\n        _this.observers.splice(idx, 1);\n        isChanged = true;\n      }\n    });\n\n    return isChanged;\n  },\n\n  /**\n   * Alias for addObserver. Registers a listener (observer) function.\n   * @param {function} newListener - The new listener (observer) function to be notified every time the state changes.\n   * @return {boolean} isChanged - Indicates whether an observer was added.\n   */\n  addListener: function addListener(newListener) {\n    this.addObserver(newListener);\n  },\n\n  /**\n   * Alias for removeObserver. Removes a listener (observer) function.\n   * @param {function} targetListener - The listener (observer) function to be removed.\n   * @return {boolean} isChanged - Indicates whether an observer has been removed\n   */\n  removeListener: function removeListener(targetListener) {\n    this.removeObserver(targetListener);\n  },\n\n  /**\n   * Notify all observers of new state\n   * @protected\n   */\n  _notifyObservers() {\n    const _this = this;\n    this.observers.forEach(observer => observer(_this.getVal()));\n  }\n};\n\nexport default WidgetObserverMixin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget-mixin-observer.js","import Widget from \"ui/core/widget\";\nimport Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\nimport MathUtil from \"util/util-math\";\n\n/**\n * Class representing an SVG Dial widget.\n * @class\n * @implements {Widget}\n */\nclass Dial extends Widget {\n\n  /**\n   * @constructor\n   * @param {object} container - DOM container for the widget.\n   * @param {object=} o - options.\n   * @param {number=0} o.minVal - Minimum value constraint.\n   * @param {number=127} o.maxVal - Maximum value constraint.\n   * @param {number=1} o.step - Interval of the steps in which the dial changes value. \n   * @param {string=\"#000\"} o.needleColor - Dial needle color.\n   * @param {string=\"#f40\"} o.activeColor - Dial active color.\n   */\n  constructor(container, o) {\n    super(container, o);\n    return this;\n  }\n\n  /* ===========================================================================\n  *  PUBLIC API\n  */\n\n  /**\n   * Returns the dial value.\n   * @public @override\n   * @returns {number} - Value of the dial.\n   */\n  getVal() {\n    return this.state.val;\n  }\n\n  /**\n   * Sets the dial value.\n   * Same as setVal(), but will not trigger observer callbacks.\n   * @public @override\n   * @param {number} newVal - The new value.\n   */\n  setInternalVal(newVal) {\n    this.setInternalState({ val: newVal });\n  }\n\n  /**\n   * Sets the dial value.\n   * Same as setInternalVal(), but will trigger observer callbacks.\n   * @public @override\n   * @param {number} newVal - The new value.\n   */\n  setVal(newVal) {\n    this.setState({ val: newVal });\n  }\n\n  /**\n   * Sets the options. \n   * @public @override\n   * @param {object} o - Options.\n   */\n  setOptions(o) {\n    super.setOptions(o);\n    this.o.stepPrecision = MathUtil.getPrecision(this.o.step);\n  }\n\n  /* ==============================================================================================\n  *  INITIALIZATION METHODS\n  */\n\n  /**\n   * Initializes the options.\n   * @override\n   * @private\n   */\n  _initOptions(o) {\n    // set the defaults\n    this.o = {\n      minVal: 0,\n      maxVal: 127,\n      step: 1,\n      needleColor: \"#414141\",\n      activeColor: \"#f40\",\n      mouseSensitivity: 1.2\n    };\n\n    // override defaults with provided options\n    super._initOptions(o);\n\n    // set the precision based on the step interval\n    this.o.stepPrecision =  MathUtil.getPrecision(this.o.step);\n  }\n\n  /**\n   * Initializes state constraints.\n   * @override\n   * @private\n   */\n  _initStateConstraints() {\n    const _this = this;\n\n    this.stateConstraints = new ConstraintSpec({\n      val: new Constraint({\n        min: _this.o.minVal,\n        max: _this.o.maxVal,\n        transform: num => MathUtil.quantize(num, _this.o.step, _this.o.stepPrecision)\n      })\n    });\n  }\n\n  /**\n   * Initializes state.\n   * @override\n   * @private\n   */\n  _initState() {\n    this.state = {\n      val: 0\n    };\n  }\n\n  /**\n   * Initializes the svg elements.\n   * @override\n   * @private\n   */\n  _initSvgEls() {\n    const _this = this;\n\n    this.svgEls = {\n      bgArc: document.createElementNS(this.SVG_NS, \"path\"),\n      activeArc: document.createElementNS(this.SVG_NS, \"path\"),\n      needle: document.createElementNS(this.SVG_NS, \"line\")\n    };\n\n    // draw the background arc\n    this.svgEls.bgArc.setAttribute(\"d\",\n      _this._calcSvgArcPath(\n        _this._calcNeedleCenter().x,\n        _this._calcNeedleCenter().y,\n        _this._calcDialRadius(),\n        0.67 * Math.PI,\n        2.35 * Math.PI\n    ));\n    this.svgEls.bgArc.setAttribute(\"stroke-width\", _this._calcArcStrokeWidth());\n    this.svgEls.bgArc.setAttribute(\"stroke\", _this.o.needleColor);\n    this.svgEls.bgArc.setAttribute(\"fill\", \"transparent\");\n    this.svgEls.bgArc.setAttribute(\"stroke-linecap\", \"round\");\n\n    // draw the active arc\n    this.svgEls.activeArc.setAttribute(\"stroke-width\", _this._calcArcStrokeWidth());\n    this.svgEls.activeArc.setAttribute(\"stroke\", _this.o.activeColor);\n    this.svgEls.activeArc.setAttribute(\"fill\", \"transparent\");\n    this.svgEls.activeArc.setAttribute(\"stroke-linecap\", \"round\");\n\n    // draw the needle\n    this.svgEls.needle.setAttribute(\"x1\", _this._calcNeedleCenter().x);\n    this.svgEls.needle.setAttribute(\"y1\", _this._calcNeedleCenter().y);\n    this.svgEls.needle.setAttribute(\"x2\", _this._calcNeedleEnd().x);\n    this.svgEls.needle.setAttribute(\"y2\", _this._calcNeedleEnd().y);\n    this.svgEls.needle.setAttribute(\"stroke-width\", _this._calcNeedleWidth());\n    this.svgEls.needle.setAttribute(\"stroke\", _this.o.needleColor);\n    this.svgEls.needle.setAttribute(\"z-index\", \"1000\");\n    this.svgEls.needle.setAttribute(\"stroke-linecap\", \"round\");\n\n    this._appendSvgEls();\n    this._update();\n  }\n\n  /**\n   * Initializes mouse and touch event handlers.\n   * @override\n   * @private\n   */\n   _initHandlers() {\n      const _this = this;\n\n      let y0 = 0;\n      let yD = 0;\n      let newVal = _this.getState().val;\n\n      this.handlers = {\n\n       touch: function(ev) {\n          y0 = ev.clientY;\n\n          document.addEventListener(\"mousemove\", _this.handlers.move);\n          document.addEventListener(\"touchmove\", _this.handlers.move);\n          document.addEventListener(\"mouseup\", _this.handlers.release);\n          document.addEventListener(\"touchend\", _this.handlers.release);\n        },\n\n        move: function(ev) {\n          ev.preventDefault();\n\n          yD = y0 - ev.clientY;\n          y0 = ev.clientY;\n\n          newVal = _this.state.val + (yD * _this.o.mouseSensitivity * _this._calcMovePrecision());\n          newVal = Math.max(newVal, _this.o.minVal);\n          newVal = Math.min(newVal, _this.o.maxVal);\n\n          _this.setState({\n            val: newVal\n          });\n        },\n\n        release: function() {\n          document.removeEventListener(\"mousemove\", _this.handlers.move);\n          document.removeEventListener(\"touchmove\", _this.handlers.move);\n        }\n      };\n\n      this.svg.addEventListener(\"mousedown\", _this.handlers.touch);\n      this.svg.addEventListener(\"touchstart\", _this.handlers.touch);\n   }\n\n  /**\n   * Updates (redraws) components based on state.\n   * @override\n   * @private\n   */\n   _update() {\n     // change the needle angle\n     this.svgEls.needle.setAttribute(\"x1\", this._calcNeedleCenter().x);\n     this.svgEls.needle.setAttribute(\"y1\", this._calcNeedleCenter().y);\n     this.svgEls.needle.setAttribute(\"x2\", this._calcNeedleEnd().x);\n     this.svgEls.needle.setAttribute(\"y2\", this._calcNeedleEnd().y);\n\n     // change the active arc length\n     this.svgEls.activeArc.setAttribute(\"d\",\n       this._calcSvgArcPath(\n         this._calcNeedleCenter().x,\n         this._calcNeedleCenter().y,\n         this._calcDialRadius(),\n         0.65 * Math.PI,\n         this._calcNeedleAngle() - 0.5 * Math.PI\n     ));\n\n     // if the value is at min, change the color to match needle color\n     // - otherwise the active part will be visible beneath the needle\n     if (this.state.val === this.o.minVal) {\n       this.svgEls.activeArc.setAttribute(\"stroke\", this.o.needleColor);\n     } else {\n       this.svgEls.activeArc.setAttribute(\"stroke\", this.o.activeColor);\n     }\n   }\n\n  /* ==============================================================================================\n  *  INTERNAL FUNCTIONALITY METHODS\n  */\n\n   /** \n    * Calcultes the stroke width for the background and active arcs.\n    * @private\n    * @returns {number} - Arc stroke width;\n    */\n   _calcArcStrokeWidth() {\n     return this._calcDialRadius() / 5;\n   }\n\n   /** \n    * Calculates the dial radius.\n    * @private\n    * @returns {number} - Radius of the dial.\n    */\n   _calcDialRadius() {\n     let radius = (Math.min(this._getWidth(), this._getHeight()) / 2) * 0.89;\n     radius = Math.trunc(radius);\n     return radius;\n   }\n\n   /** \n    * Calculates the needle angle for a given state val.\n    * @private\n    * @returns {number} - Angle of the needle.\n    */\n   _calcNeedleAngle() {\n     const _this = this;\n\n     return (\n              // protect against divide by 0:\n              ((this.o.maxVal - _this.o.minVal) !== 0) ?\n                  (  \n                    (_this.state.val - _this.o.minVal) / (_this.o.maxVal - _this.o.minVal) * (1.7 * Math.PI) + \n                    (1.15 * Math.PI)\n                  )  \n                : ( 0.5 * (1.7 * Math.PI) + (1.15 * Math.PI) )\n            );\n   }\n\n   /** \n    * Calculates the center of the needle.\n    * @private\n    * @returns {object} - {x, y} object representing the needle center coordinates.\n    */\n   _calcNeedleCenter() {\n     const _this = this;\n     return {\n       x: Math.trunc(_this._getWidth() / 2),\n       y: Math.trunc(_this._getHeight() / 2)\n     };\n   }\n\n   /** \n    * Calculates the position of end of the needle\n    * @private\n    * @returns {object} - {x, y} object representing the end of the needle. \n    */\n   _calcNeedleEnd() {\n     const _this = this;\n     return {\n       x: _this._calcNeedleCenter().x + (Math.sin(_this._calcNeedleAngle()) * _this._calcDialRadius()),\n       y: _this._calcNeedleCenter().y - (Math.cos(_this._calcNeedleAngle()) * _this._calcDialRadius())\n     };\n   }\n\n   /** \n    * Calculates the needle width.\n    * @private\n    * @returns {number} - The width of the needle in px.\n    */\n   _calcNeedleWidth() {\n     return this._calcDialRadius() / 5;\n   }\n\n   /** \n    * Calculates the path for an svg arc based on cx, cy, r, startAngle, endAngle.\n    * The input parameters are the way arcs are represented in HTML canvas.\n    * @private\n    * @param {number} cx - Center X.\n    * @param {number} cy - Center Y.\n    * @param {number} r - Radius.\n    * @param {number} startAngle - Start angle in radians.\n    * @param {number} endAngle - End angle in radians.\n    * @returns {string} - A string to be used for the arc path by an SVG arc object.\n    */\n   _calcSvgArcPath(cx, cy, r, startAngle, endAngle) {\n     let x1 = cx + (r * Math.cos(startAngle));\n     let y1 = cy + (r * Math.sin(startAngle));\n     let x2 = cx + (r * Math.cos(endAngle));\n     let y2 = cy + (r * Math.sin(endAngle));\n     let largeArc = (endAngle - startAngle) < Math.PI ? 0 : 1;\n     let sweep = (endAngle - startAngle) < Math.PI ? 1 : 1;\n\n     return [\"M\", x1, y1, \"A\", r, r, 0, largeArc, sweep, x2, y2].join(\" \");\n   }\n\n   /**\n    * Calculates the precision with which the state value changes when moved.\n    */\n   _calcMovePrecision() {\n     let precision = (this.o.maxVal - this.o.minVal) / 127;\n     return precision;\n   }\n}\n\nexport default Dial;\n\n\n// WEBPACK FOOTER //\n// ./src/ui/dial.js","import Widget from \"ui/core/widget\";\nimport Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\nimport MathUtil from \"util/util-math\";\n\n/**\n * Class representing a Slider widget.\n * @class\n * @implements {Widget}\n */\nclass Slider extends Widget {\n\n  /**\n   * @constructor\n   * @param {object} container - DOM container for the widget.\n   * @param {object} [o] - Options.\n   * @param {number} [o.minVal=0] - The minimum possible value the slider can represent.\n   * @param {number} [o.maxVal=127] - The maximum possible value teh slider can represent.\n   * @param {number} [o.step=1] - Step granularity.\n   * @param {string} [o.sliderBodyColor=\"#484848\"] - The color of the slider bar.\n   * @param {string} [o.sliderHandleColor=\"#484848\"] - The color of the triangle used as the slider's needle.\n   */\n  constructor(container, o) {\n    super(container, o);\n    return this;\n  }\n\n  /* ===========================================================================\n  *  INITIALIZATION METHODS\n  */\n\n  /**\n   * Initialize the options\n   * @override\n   * @protected\n   */\n  _initOptions(o) {\n    // set the defaults\n    this.o = {\n      minVal: 0,\n      maxVal: 127,\n      step: 1,\n      sliderBodyColor: \"#484848\",\n      sliderHandleColor: \"#484848\",\n      mouseSensitivity: 1.2\n    };\n\n    // override defaults with provided options\n    super._initOptions(o);\n\n    // set the precision (num of decimal places used) based on the step interval\n    this.o.stepPrecision =  MathUtil.getPrecision(this.o.step);\n  }\n\n  /**\n   * Initialize state constraints\n   * @override\n   * @protected\n   */\n  _initStateConstraints() {\n    const _this = this;\n\n    this.stateConstraints = new ConstraintSpec({\n      val: new Constraint({ \n        min: _this.o.minVal, \n        max: _this.o.maxVal, \n        transform: (num) => MathUtil.quantize(num, _this.o.step, _this.o.stepPrecision) \n      })   \n    });\n  }\n\n  /**\n   * Initialize state.\n   * @override\n   * @protected\n   */\n  _initState() {\n    this.state = {\n      val: this.o.minVal\n    };\n\n    // keep track of dimensions\n    this.dims = {\n      offsetBottom: 5,\n      offsetTop: 5,\n      bodyWidth: 2,\n      handleWidth: 10,\n      handleHeight: 10\n    };\n  }\n\n  /**\n   * Initialize the svg elements\n   * @override\n   * @protected\n   */\n  _initSvgEls() {\n    const _this = this;\n\n    this.svgEls = {\n      body: document.createElementNS(_this.SVG_NS, \"rect\"),\n      overlay: document.createElementNS(_this.SVG_NS, \"rect\"),\n      handle: document.createElementNS(_this.SVG_NS, \"polygon\")\n    };\n\n    this._appendSvgEls();\n    this._update();\n  }\n\n  /**\n   * Initialize mouse and touch event handlers\n   * @override\n   * @protected\n   */\n  _initHandlers() {\n    const _this = this;\n\n    this.handlers = {\n\n      touchBody: function touchBody(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        let newVal = _this._calcTouchVal(ev.clientY);\n        _this.setState({ val: newVal });\n        \n        _this.handlers.touchHandle(ev);\n      },\n\n      touchHandle: function touchHandle(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n        \n        document.body.addEventListener(\"mousemove\", _this.handlers.moveHandle);\n        document.body.addEventListener(\"touchmove\", _this.handlers.moveHandle);\n        document.body.addEventListener(\"mouseup\", _this.handlers.releaseHandle); \n        document.body.addEventListener(\"touchend\", _this.handlers.releaseHandle); \n      },\n\n      moveHandle: function moveHandle(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        let newVal = _this._calcTouchVal(ev.clientY);\n        \n        _this.setState({ val: newVal });\n      },\n\n      releaseHandle: function releaseHandle(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        document.body.removeEventListener(\"touchmove\", _this.handlers.moveHandle); \n        document.body.removeEventListener(\"mousemove\", _this.handlers.moveHandle);\n        document.body.removeEventListener(\"mouseup\", _this.handlers.releaseHandle); \n        document.body.removeEventListener(\"touchend\", _this.handlers.releaseHandle); \n      }\n    };\n\n    this.svgEls.overlay.addEventListener(\"mousedown\", _this.handlers.touchBody);\n    this.svgEls.overlay.addEventListener(\"touchstart\", _this.handlers.touchBody);\n    this.svgEls.handle.addEventListener(\"mousedown\", _this.handlers.touchHandle);\n    this.svgEls.handle.addEventListener(\"touchstart\", _this.handlers.touchHandle);\n  }\n\n  /**\n   * Update (redraw) component based on state\n   * @override\n   * @protected\n   */\n  _update() {\n    const _this = this;\n\n    let sliderBodyPos = _this._calcSliderBodyPos();\n\n    this.svgEls.body.setAttribute(\"x\", sliderBodyPos.x);\n    this.svgEls.body.setAttribute(\"y\", sliderBodyPos.y);\n    this.svgEls.body.setAttribute(\"width\", _this.dims.bodyWidth);\n    this.svgEls.body.setAttribute(\"height\", _this._calcSliderBodyHeight());\n    this.svgEls.body.setAttribute(\"fill\", _this.o.sliderBodyColor);\n\n    this.svgEls.overlay.setAttribute(\"x\", sliderBodyPos.x);\n    this.svgEls.overlay.setAttribute(\"y\", sliderBodyPos.y);\n    this.svgEls.overlay.setAttribute(\"width\", _this.dims.bodyWidth + _this.dims.handleWidth);\n    this.svgEls.overlay.setAttribute(\"height\", _this._calcSliderBodyHeight());\n    this.svgEls.overlay.setAttribute(\"fill\", \"transparent\");\n\n    let sliderHandlePoints = _this._calcSliderHandlePoints();\n\n    this.svgEls.handle.setAttribute(\"points\", sliderHandlePoints);\n    this.svgEls.handle.setAttribute(\"fill\", _this.o.sliderHandleColor);\n  }\n\n  /* ===========================================================================\n  *  PUBLIC API\n  */\n\n  /**\n   * Get the slider value.\n   * @public\n   */\n  getVal() {\n    return this.state.val;\n  }\n\n  /**\n   * Set the current slider value.\n   * Same as setVal(), but will not cause an observer callback trigger.\n   * @public\n   * @param {number} newVal - The new slider value.\n   */\n  setInternalVal(newVal) {\n    this.setInternalState({ val: newVal });\n  }\n\n  /**\n   * Set the current slider value.\n   * Same as setInternalVal(), but will cause an observer callback trigger.\n   * @public\n   * @param {number} newVal - The new slider value.\n   */\n  setVal(newVal) {\n    this.setState({ val: newVal });\n  }\n\n  /* ===========================================================================\n  *  HELPER METHODS\n  */\n\n  /**\n   * Returns the position and dimensions for the slider body.\n   * @private\n   * @returns {object} - {x, y} position.\n   */\n  _calcSliderBodyPos() {\n    const _this = this;\n\n    return {\n      x: _this._getWidth() / 2 - 1,\n      y: _this.dims.offsetTop\n    };\n  }\n\n  /**\n   * Returns the height of the slider body.\n   * @private\n   * @returns {number} - Height of the slider body.\n   */\n  _calcSliderBodyHeight() {\n    return this._getHeight() - this.dims.offsetTop - this.dims.offsetBottom;\n  }\n\n  /**\n   * Returns the height of the slider body.\n   * @private\n   * @returns {number} - Width of the slider body.\n   */\n  _calcSliderBodyWidth() {\n    return this.dims.bodyWidth;\n  }\n\n    /**\n   * Returns the position and dimensions for the slider body.\n   * @private\n   * @returns {object} - {x, y} position.\n   */\n  _calcSliderHandlePoints() {\n    const _this = this;\n\n    let sliderBodyHeight = _this._calcSliderBodyHeight();\n\n    let x0 = (_this._getWidth() / 2) + 1;\n    let y0 = (sliderBodyHeight - (_this.state.val / (_this.o.maxVal - _this.o.minVal)) * sliderBodyHeight) + _this.dims.offsetBottom;\n    let x1 = x0 + this.dims.handleWidth;\n    let y1 = y0 - this.dims.handleHeight / 2;\n    let x2 = x1;\n    let y2 = y0 + this.dims.handleHeight / 2;\n\n    return x0 + \",\" + y0 + \" \" +\n           x1 + \",\" + y1 + \" \" +\n           x2 + \",\" + y2;\n  }\n\n  /**\n   * Calculate the value of the slider touched at position y.\n   * @private\n   * @param {number} y - Y-value of the touch location.\n   * @returns {number} - Value of the slider at the touched location.\n   */\n  _calcTouchVal(y) {\n    let valRange = this.o.maxVal - this.o.minVal;\n    let bodyY = (this._getHeight() - this._getRelativeY(y)) - this.dims.offsetBottom;\n    let touchVal = ((bodyY / this._calcSliderBodyHeight()) * valRange) + this.o.minVal; \n\n    return touchVal;\n  }\n\n  /**\n   * Calculates the precision with which the state value changes when moved.\n   */\n  _calcMovePrecision() {\n    let precision = (this.o.maxVal - this.o.minVal) / 127;\n    return precision;\n  }\n}\n\nexport default Slider;\n\n\n// WEBPACK FOOTER //\n// ./src/ui/slider.js","import Widget from \"ui/core/widget\";\nimport Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\nimport MathUtil from \"util/util-math\";\n\n/**\n * Class representing a Graph widget.\n * @class \n * @implements {Widget}\n */\nclass Graph extends Widget {\n\n  /**\n   * @constructor\n   * @param {object} container - DOM container for the widget.\n   * @param {object} [o] - Options.\n   * @param {number} [o.minXVal=0] - Minimum X value.\n   * @param {number} [o.minYVal=0] - Minimum Y value.\n   * @param {number} [o.maxXVal=100] - Maximum X value.\n   * @param {number} [o.maxYVal=100] - Maximum Y value.\n   * @param {number} [o.maxNumVertices=-1] - Maximum number of vertices.\n   * @param {number} [o.quantizeX=0.1] - X-quantization (\"grid\") value.\n   * @param {number} [o.quantizeY=0.1] - Y-quantization (\"grid\") value.\n   * @param {number} [o.xDecimalPrecision=1] - Number of decimal places for output of the X values.\n   * @param {number} [o.yDecimalPrecision=1] - Number of decimal places for output of the Y values.\n   * @param {boolean} [o.isEditable=true] - Is the graph editable?\n   * @param {string} [o.vertexColor=\"#f40\"] - Color of vertex points.\n   * @param {string} [o.lineColor=\"#484848\"] - Color of lines connecting the vertices.\n   * @param {string} [o.backgroundColor=\"#fff\"] - Background color.\n   * @param {number} [o.lineWidth=2] - Width of the connecting lines.\n   * @param {number} [o.vertexRadius=4] - Radius of the vertex points.\n   * @param {number} [o.mouseSensitivity=1.2] - Mouse sensitivity (how much moving the mouse affects the interaction).\n   */\n  constructor(container, o) {\n    super(container, o);\n    return this;\n  }\n\n  /* ===========================================================================\n  *  PUBLIC API\n  */\n\n  /**\n   * Sets the options.\n   * @public @override\n   */\n  setOptions(o) {\n    o = o || {};\n\n    super.setOptions(o);\n  }\n\n  /**\n  * Returns the state as an array of [x, y] pairs.\n  * @public @override\n  */\n  getVal() {\n    return this.state.vertices.map(vtx => [vtx.x, vtx.y]);\n  }\n\n  /**\n  * Sets the state as an array of [x, y] vertex pairs.\n  * Same as setVal(), but will not trigger observer callback methods.\n  * @public @override\n  * @param {array} - An array of [x, y] points\n  */\n  setInternalVal(vertexArray) {\n   let vertices = vertexArray.map(xyPair => { return {x: xyPair[0], y: xyPair[1]}; });\n\n   this.setInternalState({ vertices: vertices });\n  }\n\n  /**\n  * Sets the state as an array of [x, y] vertex pairs.\n  * Same as setInternalVal(), but will trigger observer callback methods.\n  * @public @override\n  * @param {array} - An array of [x, y] points.\n  */\n  setVal(vertexArray) {\n    let vertices = vertexArray.map(xyPair => { return {x: xyPair[0], y: xyPair[1]}; });\n\n    this.setState({ vertices: vertices });\n  }\n\n  /**\n   * Sets the value of a particular vertex, selected by its index. \n   * Note: will not trigger observer notifications.\n   * @public\n   * @param {number} val - Value to set.\n   * @param {number} idx - Index of the vertex to set the value for.\n   * @returns {number} - Index of the vertex that has been set, or -1 if no such vertex exists.\n   */\n  setVertexVal(val, idx) {\n    if (idx >= 0 && idx < this.state.vertices.length) {\n      let vertices = this.state.vertices.map(vtx => vtx);\n      vertices[idx].y = val;\n      this.setInternalState({ vertices: vertices });\n      return idx;\n    } else {\n      return -1;\n    }\n  }\n\n  /**\n   * Returns the number of vertices set on this graph.\n   * @public\n   * @return {number} - Number of vertices.\n   */\n  getNumVertices() {\n    return this.state.vertices.length;\n  }\n\n  /**\n   * Adds new vertices to the state.\n   * Each vertex is represented as x and y values, as well as optional boolean flags\n   * specifying whether the x, y, or both values should be fixed (unchangeble).\n   * The x and y values may also take the strings \"min\", \"max\" to specify that the coordinates \n   * should be tied to the minimum or maximum possible x or y values for the graph.\n   * @public\n   * @param {...object} vtx - Object representing the new vertex to add.\n   * @param {number} [vtx.x=minXVal] - X coordinate for the new vertex.\n   * @param {number} [vtx.y=minYVal] - Y coordinate for the new vertex.\n   * @param {boolean} [vtx.isXFixed=false] - Is the X coordinate fixed (unable to move)?\n   * @param {boolean} [vtx.isYFixed=false] - Is the Y coordinate fixed (unable to move)?\n   */\n  addVertex(...vtx) {\n    for (let i = 0; i < vtx.length; i++) {\n      let newVtx = vtx[i];\n\n      newVtx = (typeof newVtx !== 'undefined') ? newVtx : {};\n      newVtx.x = (typeof newVtx.x !== 'undefined') ? newVtx.x : this.o.minXVal;\n      newVtx.y = (typeof newVtx.y !== 'undefined') ? newVtx.y : this.o.minYVal;\n      newVtx.isXFixed = (typeof newVtx.isXFixed !== 'undefined') ? newVtx.isXFixed : false;\n      newVtx.isYFixed = (typeof newVtx.isYFixed !== 'undefined') ? newVtx.isYFixed : false;\n      newVtx.xAnchor = \"\";\n      newVtx.yAnchor = \"\";\n\n      if (newVtx.x === \"max\") {\n        newVtx.isXFixed = true;\n        newVtx.x = this.o.maxXVal;\n        newVtx.xAnchor = \"max\";\n      } else if (newVtx.x === \"min\") {\n        newVtx.isXFixed = true;\n        newVtx.x = this.o.minXVal;\n        newVtx.xAnchor = \"min\";\n      }\n\n      if (newVtx.y === \"max\") {\n        newVtx.isYFixed = true;\n        newVtx.y = this.o.maxYVal;\n        newVtx.yAnchor = \"max\";\n      } else if (newVtx.x === \"min\") {\n        newVtx.isYFixed = true;\n        newVtx.y = this.o.minYVal;\n        newVtx.yAnchor = \"min\";\n      }\n\n      let newVertices = this.getState().vertices.map(x=>x);\n\n      newVertices.push(newVtx);\n      newVertices.sort((a, b) => a.x - b.x);\n\n      this.setState({\n        vertices: newVertices\n      });\n    }\n  }\n\n  /**\n   * Adds a vertex with fixed x and y coordinates.\n   * @param {object} vtx - Vertex coordinates in format {x, y}\n   * @param {number} vtx.x - X coordinate of the vertex.\n   * @param {number} vtx.y - Y coordinate of the vertex.\n   */\n  addFixedVertex(...vtx) {\n    for (let i = 0; i < vtx.length; i++) {\n      let newVtx = vtx[i];\n      this.addVertex({ x: newVtx.x, y: newVtx.y, isXFixed: true, isYFixed: true });\n    }\n  }\n\n  /**\n   * Adds a vertex with fixed y coordinate.\n   * @param {object} vtx - Vertex coordinates in format {x, y}\n   * @param {number} vtx.x - X coordinate of the vertex.\n   * @param {number} vtx.y - Y coordinate of the vertex.\n   */\n  addFixedXVertex(...vtx) {\n    for (let i = 0; i < vtx.length; i++) {\n      let newVtx = vtx[i];\n      this.addVertex({ x: newVtx.x, y: newVtx.y, isXFixed: true, isYFixed: false });\n    }\n  }\n\n\n  /**\n   * Adds a vertex with fixed y coordinate.\n   * @param {object} vtx - Vertex coordinates in format {x, y}\n   * @param {number} vtx.x - X coordinate of the vertex.\n   * @param {number} vtx.y - Y coordinate of the vertex.\n   */\n  addFixedYVertex(...vtx) {\n    for (let i = 0; i < vtx.length; i++) {\n      let newVtx = vtx[i];\n      this.addVertex({ x: newVtx.x, y: newVtx.y, isXFixed: false, isYFixed: true });\n    }\n  }\n\n  /* ============================================================================================= */\n  /* INITIALIZATION METHODS\n  /* ============================================================================================= */\n\n  /**\n   * Initializes the options.\n   * @override\n   * @private\n   */\n  _initOptions(o) {\n    // set defaults\n    this.o = {};\n\n    this.o.minXVal = 0;\n    this.o.minYVal = 0;\n    this.o.maxXVal = 100;\n    this.o.maxYVal = 100;\n    this.o.maxNumVertices = -1;\n    this.o.quantizeX = 0.1;\n    this.o.quantizeY = 0.1;\n    this.o.xDecimalPrecision = 1;\n    this.o.yDecimalPrecision = 1;\n    this.o.isEditable = true;\n    this.o.vertexColor = \"#f40\";\n    this.o.fixedVertexColor = this.o.vertexColor;\n    this.o.lineColor = \"#484848\";\n    this.o.backgroundColor = \"#fff\";\n    this.o.vertexRadius = 4;\n    this.o.lineWidth = 2;\n    this.o.mouseSensitivity = 1.2;\n\n    // override defaults with provided options\n    super._initOptions(o);\n  }\n\n  /**\n   * Initializes state constraints.\n   * @override\n   * @private\n   */\n  _initStateConstraints() {\n    const _this = this;\n\n    this.stateConstraints = new ConstraintSpec({\n      vertices: [{\n        x: new Constraint({\n          min: _this.o.minXVal,\n          max: _this.o.maxXVal,\n          transform: (num) => {\n            return MathUtil.quantize(num, _this.o.quantizeX);\n          }\n        }),\n        y: new Constraint({\n          min: _this.o.minYVal,\n          max: _this.o.maxYVal,\n          transform: (num) => {\n            return MathUtil.quantize(num, _this.o.quantizeY);\n          }\n        })\n      }]\n    });\n  }\n\n  /**\n   * Initializes state.\n   * @override\n   * @private\n   */\n  _initState() {\n    this.state = {\n      // verices contains an array of vertices\n      // each vertex is an object of form \n      // {\n      //   x: numbber, \n      //   y: number, \n      //   isXFixed: boolean, \n      //   isYFixed: boolean,\n      //   xAnchor: string,\n      //   yAnchor: string\n      // }\n      // isXFixed and isYFixed are boolean values that tell if a given\n      // vertex may be moved in the x and y planes\n      vertices: []\n    };\n  }\n\n  /**\n   * Initializes the svg elements.\n   * @override\n   * @private\n   */\n  _initSvgEls() {\n    const _this = this;\n\n    this.svgEls = {\n      panel: document.createElementNS(this.SVG_NS, \"rect\"),\n      vertices: [],\n      lines: []\n    };\n\n    this.svgEls.panel.setAttribute(\"width\", this._getWidth());\n    this.svgEls.panel.setAttribute(\"height\", this._getHeight());\n    this.svgEls.panel.setAttribute(\"fill\", this.o.backgroundColor);\n    this.svgEls.panel.setAttribute(\"stroke\", this.o.lineColor);\n\n    this._appendSvgEls();\n    this._update();\n  }\n\n  /**\n   * Initializes mouse and touch event handlers.\n   * @override\n   * @private\n   */\n  _initHandlers() {\n    const _this = this;\n\n    let targetVtx = null;\n    let targetLine = null;\n    let vtxPos0 = {}; // original poisition of two vertices affected by a line move\n    let x0 = 0;\n    let y0 = 0;\n    let x1 = 0;\n    let y1 = 0;\n    let dx = 0;\n    let dy = 0;\n\n    this.handlers = {\n\n       touchPanel: function touchPanel(ev) {\n         ev.preventDefault();\n\n         let xPos = ev.clientX - _this._getLeft();\n         let yPos = ev.clientY - _this._getTop();\n         let vertexState = _this._calcVertexState({x: xPos, y: yPos});\n\n         _this.addVertex(vertexState);\n       },\n\n       touchVertex: function touchVertex(ev) {\n         ev.preventDefault();\n\n         targetVtx = ev.target;\n\n         document.addEventListener(\"mousemove\", _this.handlers.moveVertex);\n         document.addEventListener(\"touchmove\", _this.handlers.moveVertex);\n         ev.target.addEventListener(\"mouseup\", _this.handlers.deleteVertex);\n         ev.target.addEventListener(\"touchend\", _this.handlers.deleteVertex);\n       },\n\n       touchLine: function touchLine(ev) {\n         ev.preventDefault();\n\n         targetLine = ev.target;\n\n         x0 = ev.clientX - _this._getLeft();\n         y0 = ev.clientY - _this._getTop();\n         vtxPos0 = null;\n\n         document.addEventListener(\"mousemove\", _this.handlers.moveLine);\n         document.addEventListener(\"touchmove\", _this.handlers.moveLine);\n       },\n\n       moveLine: function moveLine(ev) {\n         ev.preventDefault();\n\n         document.addEventListener(\"mouseup\", _this.handlers.endMoveLine);\n         document.addEventListener(\"touchend\", _this.handlers.endMoveLine);\n\n         x1 = ev.clientX - _this._getLeft();\n         y1 = ev.clientY - _this._getTop();\n\n         // delta position (change in position)\n         let dPos = {\n           x: x1 - x0,\n           y: y1 - y0\n         };\n\n         vtxPos0 = _this._moveLine(targetLine, dPos, vtxPos0);\n       },\n\n       endMoveLine: function endMoveLine(ev) {\n         ev.preventDefault();\n\n         vtxPos0 = null;\n\n         document.removeEventListener(\"mousemove\", _this.handlers.moveLine);\n         document.removeEventListener(\"touchmove\", _this.handlers.moveLine);\n       },\n\n       deleteVertex: function deleteVertex(ev) {\n         ev.preventDefault();\n\n         document.removeEventListener(\"mousemove\", _this.handlers.moveVertex);\n         document.removeEventListener(\"touchmove\", _this.handlers.moveVertex);\n\n         _this._deleteVertex(ev.target);\n\n         ev.target.removeEventListener(\"mouseup\", _this.handlers.deleteVertex);\n         ev.target.removeEventListener(\"touchend\", _this.handlers.deleteVertex);\n       },\n\n       moveVertex: function moveVertex(ev) {\n         ev.preventDefault();\n\n         targetVtx.removeEventListener(\"mouseup\", _this.handlers.deleteVertex);\n         targetVtx.removeEventListener(\"touchend\", _this.handlers.deleteVertex);\n\n         document.addEventListener(\"mouseup\", _this.handlers.endMoveVertex);\n         document.addEventListener(\"touchend\", _this.handlers.endMoveVertex);\n\n         let xPos = ev.clientX - _this._getLeft();\n         let yPos = ev.clientY - _this._getTop();\n\n         _this._moveVertex(targetVtx, {x: xPos, y: yPos});\n       },\n\n       endMoveVertex: function endMoveVertex(ev) {\n         ev.preventDefault();\n\n         document.removeEventListener(\"mousemove\", _this.handlers.moveVertex);\n         document.removeEventListener(\"touchmove\", _this.handlers.moveVertex);\n       }\n    };\n\n    this.svgEls.panel.addEventListener(\"mousedown\", _this.handlers.touchPanel);\n    this.svgEls.panel.addEventListener(\"touchdown\", _this.handlers.touchPanel);\n\n    this.svgEls.vertices.forEach(vtx => {\n      vtx.addEventListener(\"mousedown\", _this.handlers.touchVertex);\n      vtx.addEventListener(\"touchdown\", _this.handlers.touchVertex);\n    });\n\n    this.svgEls.lines.forEach(line => {\n      line.addEventListener(\"mousedown\", _this.handlers.touchLine);\n      line.addEventListener(\"touchdown\", _this.handlers.touchLine);\n    });\n  }\n\n  /**\n   * Updates (redraws) component based on state.\n   * @override\n   * @private\n   */\n  _update() {\n    const _this = this;\n\n    // update vertices to have min and max values if specified\n    _this.state.vertices.forEach(vtx => {\n      vtx.x = (vtx.xAnchor === \"max\") ? _this.o.maxXVal :\n                (vtx.xAnchor === \"min\") ? _this.o.minXVal :\n                vtx.x;\n\n      vtx.y = (vtx.yAnchor === \"max\") ? _this.o.maxYVal :\n                (vtx.yAnchor === \"min\") ? _this.o.minYVal :\n                vtx.y;\n    });\n\n    // sort svg vertexes using a sort map\n    let idxSortMap = _this.state.vertices.map((vtx, idx) => { return { vtx: vtx, idx: idx }; });\n    idxSortMap.sort((a, b) => a.vtx.x - b.vtx.x);\n    _this.state.vertices = idxSortMap.map(el => _this.state.vertices[el.idx]);\n\n    // if there are more state vertices than svg vertices, add a corresponding number of svg vertices and lines\n    for (let i = _this.svgEls.vertices.length; i < _this.state.vertices.length; ++i) {\n      _this._addSvgVertex();\n    }\n\n    // if there are more svg vertices than state vertices, remove a corresponding number of svg vertices and lines\n    for (let i = _this.svgEls.vertices.length; i > _this.state.vertices.length; --i) {\n      _this._removeSvgVertex();\n    }\n\n    // sort the svg vertices according to the vertex sort map\n    _this.svgEls.vertices = idxSortMap.map(el => _this.svgEls.vertices[el.idx]);\n\n    // set the correct position coordinates for every vertex\n    _this.state.vertices.forEach((stateVtx, idx) => {\n      let svgVtx = _this.svgEls.vertices[idx];\n      let pos = _this._calcVertexPos(stateVtx);\n\n      svgVtx.setAttribute(\"cx\", pos.x);\n      svgVtx.setAttribute(\"cy\", pos.y);\n      svgVtx.setAttribute(\"r\", _this.o.vertexRadius);\n\n      let vtxFill = (_this.state.vertices[idx].isXFixed || _this.state.vertices[idx].isYFixed) ?\n                    _this.o.fixedVertexColor :\n                    _this.o.vertexColor;\n\n      svgVtx.setAttribute(\"fill\", vtxFill);\n\n      // for every vertex other than the first, draw a line to the previous vertex\n      if (idx > 0) {\n        let prevVtx = _this.state.vertices[idx - 1];\n        let prevPos = _this._calcVertexPos(prevVtx);\n        let line = _this.svgEls.lines[idx - 1];\n\n        line.setAttribute(\"d\", \"M \" + pos.x + \" \" + pos.y + \" L \" + prevPos.x + \" \" + prevPos.y);\n        line.setAttribute(\"fill\", \"transparent\");\n        line.setAttribute(\"stroke-width\", _this.o.lineWidth);\n        line.setAttribute(\"stroke\", _this.o.lineColor);\n      }\n    });\n\n    // remove and reappend all svg elements so that vertices are on top of lines\n    _this.svgEls.lines.forEach(svgLine => {\n      _this.svg.removeChild(svgLine);\n      _this.svg.appendChild(svgLine);\n    });\n\n    _this.svgEls.vertices.forEach(svgVtx => {\n      _this.svg.removeChild(svgVtx);\n      _this.svg.appendChild(svgVtx);\n    });\n\n    // reassign listeners\n    _this.svgEls.vertices.forEach(vtx => {\n      vtx.addEventListener(\"mousedown\", _this.handlers.touchVertex);\n      vtx.addEventListener(\"touchdown\", _this.handlers.touchVertex);\n    });\n\n    _this.svgEls.lines.forEach(line => {\n      line.addEventListener(\"mousedown\", _this.handlers.touchLine);\n      line.addEventListener(\"touchdown\", _this.handlers.touchLine);\n    });\n  }\n\n  /* ==============================================================================================\n  *  INTERNAL FUNCTIONALITY METHODS\n  */\n\n  /**\n   * Deletes a vertex.\n   * @private\n   * @param {SVGElement} targetVtx - Vertex to Delete\n   */\n  _deleteVertex(targetVtx) {\n    const _this = this;\n\n    let vtxIdx = this.svgEls.vertices.findIndex(vtx => vtx === targetVtx);\n    let isRemovable = !(this.state.vertices[vtxIdx].isXFixed || this.state.vertices[vtxIdx].isYFixed)\n\n    if (vtxIdx !== -1 && isRemovable) {\n      let newVertices = this.getState().vertices.map(x=>x);\n\n      newVertices.splice(vtxIdx, 1);\n      _this.setState({\n        vertices: newVertices\n      });\n    }\n  }\n\n  /**\n   * Adds a new SVG vertex representation.\n   * @private\n   */\n  _addSvgVertex() {\n    const _this = this;\n\n    let newVertex = document.createElementNS(_this.SVG_NS, \"circle\");\n    _this.svgEls.vertices.push(newVertex);\n    _this.svg.appendChild(newVertex);\n\n    // if there is more than 1 svg vertex, we also need to draw lines between them\n    if (_this.svgEls.vertices.length > 1) {\n      this._addSvgLine();\n    }\n  }\n\n  /**\n   * Adds an SVG line connecting two vertices.\n   * @private\n   */\n  _addSvgLine() {\n    let newLine = document.createElementNS(this.SVG_NS, \"path\");\n    this.svg.appendChild(newLine);\n    this.svgEls.lines.push(newLine);\n  }\n\n  /**\n   * Removes an SVG vertex.\n   * @private\n   */\n  _removeSvgVertex() {\n    let vertex = this.svgEls.vertices[this.svgEls.vertices.length - 1];\n\n    this.svg.removeChild(vertex);\n    vertex = null;\n    this.svgEls.vertices.pop();\n\n    if (this.svgEls.lines.length > 0) {\n     this._removeSvgLine();\n    }\n  }\n\n  /**\n   * Removes an SVG line connecting two vertices.\n   * @private\n   */\n  _removeSvgLine() {\n    let line = this.svgEls.lines[this.svgEls.lines.length - 1];\n\n    this.svg.removeChild(line);\n    line = null;\n    this.svgEls.lines.pop();\n  }\n\n  /**\n    * Moves a line.\n    * @private\n    * @param {SVGElement} targetLine - The target line\n    * @param {object} dPos -\n    * @param {number} dPos.x\n    * @param {number} dPos.y\n    * @param {object} vtxPos0 - Original position (before moving)\n    *                           of the two vertices immediately to the left\n    *                           and right of the line being moved in the\n    *                           form { vtx1: {x, y}, vtx2: {x, y}, boundaryBL: {x, y}, boundaryTR: {x, y} }\n    *                           If null, will be calculated from the\n    *                           corresponding svg element.\n    * @param {obect} [vtxPos0.vtx1]\n    * @param {number} [vtxPos0.vtx1.x]\n    * @param {number} [vtxPos0.vtx1.y]\n    * @param {obect} [vtxPos0.vtx2]\n    * @param {number} [vtxPos0.vtx2.x]\n    * @param {number} [vtxPos0.vtx2.y]\n    * @returns {object} Original position of the two vertices affected by the line move in the form\n    *                   { vtx1: {x, y}, vtx2: {x, y}, boundaryBL: {x, y}, boundaryTR: {x, y} }.\n    */\n  _moveLine(targetLine, dPos, vtxPos0) {\n    const _this = this;\n\n    let lineIdx = _this.svgEls.lines.findIndex(line => line === targetLine);\n\n    // get vertices to the left and right of the selected line\n    let vtx1 = _this.svgEls.vertices[lineIdx];\n    let vtx2 = _this.svgEls.vertices[lineIdx + 1];\n\n    let vtx1curPos = {\n      x: parseInt(_this.svgEls.vertices[lineIdx].getAttribute(\"cx\")),\n      y: parseInt(_this.svgEls.vertices[lineIdx].getAttribute(\"cy\"))\n    };\n    let vtx2curPos = {\n      x: parseInt(_this.svgEls.vertices[lineIdx + 1].getAttribute(\"cx\")),\n      y: parseInt(_this.svgEls.vertices[lineIdx + 1].getAttribute(\"cy\"))\n    };\n\n    // if vtxPos0 is null or undefined, this is the first time this function\n    // was called in the line move, and we need to get the position of affected\n    // vertices from the svg attributes.\n    // vtx1 and vtx2 are the left and right vertices bounding the line\n    // boundaryBL is the bottom left boundary restricting movement of the line\n    // boundaryTR is the top right boundary restricting movement of the line\n    if (vtxPos0 === null || vtxPos0 === undefined) {\n\n      let boundaryBL = {\n        x: (lineIdx > 0) ? \n               parseInt(_this.svgEls.vertices[lineIdx - 1].getAttribute(\"cx\"))\n            : _this._calcVertexPos({x: _this.o.minXVal, y: _this.o.minYVal}).x,\n        y: _this._calcVertexPos({x: _this.o.minXVal, y: _this.o.minYVal}).y\n      };\n\n      let boundaryTR = {\n        x: (lineIdx + 2 < _this.svgEls.vertices.length) ? \n              parseInt(_this.svgEls.vertices[lineIdx + 2].getAttribute(\"cx\"))\n            : _this._calcVertexPos({x: _this.o.maxXVal, y: _this.o.maxYVal}).x,\n        y: _this._calcVertexPos({x: _this.o.maxXVal, y: _this.o.maxYVal}).y\n      };\n\n      vtxPos0 = {\n       vtx1: vtx1curPos,\n       vtx2: vtx2curPos,\n       boundaryBL: boundaryBL,\n       boundaryTR: boundaryTR\n      };\n    }\n\n    // calculate the new positions for the two affected vertices\n    let vtx1newPos = {\n      x: vtxPos0.vtx1.x + dPos.x,\n      y: vtxPos0.vtx1.y + dPos.y\n    };\n\n    let vtx2newPos = {\n      x: vtxPos0.vtx2.x + dPos.x,\n      y: vtxPos0.vtx2.y + dPos.y\n    };\n\n    // if moving would take x values outside of boundaries, keep x values the same\n    if (vtx1newPos.x < vtxPos0.boundaryBL.x || \n        vtx2newPos.x < vtxPos0.boundaryBL.x || \n        vtx1newPos.x > vtxPos0.boundaryTR.x || \n        vtx2newPos.x > vtxPos0.boundaryTR.x) {\n      vtx1newPos.x = vtx1curPos.x;\n      vtx2newPos.x = vtx2curPos.x;\n    }\n\n    // if moving would take y values outside of boundaries, keep y values the same\n    // remember that y-coordinates are inverted when dealing with the canvas\n    if (vtx1newPos.y > vtxPos0.boundaryBL.y || \n        vtx2newPos.y > vtxPos0.boundaryBL.y || \n        vtx1newPos.y < vtxPos0.boundaryTR.y || \n        vtx2newPos.y < vtxPos0.boundaryTR.y) {\n      vtx1newPos.y = vtx1curPos.y;\n      vtx2newPos.y = vtx2curPos.y;\n    }\n\n    this._moveVertex(vtx1, vtx1newPos);\n    this._moveVertex(vtx2, vtx2newPos);\n\n    // return the original position so that it may be used again if the line move is not finished\n    return vtxPos0;\n  }\n\n  /**\n  * Moves a vertex.\n  * @private\n  * @param {SVGElement} targetVtx - The target vertex\n  * @param {Object} newPos - The new position\n  * @param {number} newPos.x\n  * @param {number} newPos.y\n  */\n  _moveVertex(targetVtx, newPos) {\n    const _this = this;\n\n    let vtxState = _this._calcVertexState(newPos);\n    let vtxIdx = _this.svgEls.vertices.findIndex(vtx => vtx === targetVtx);\n\n    let vertices = _this.getState().vertices.map(x=>x);\n\n    // move the vertex if it's not fixed in x or y direction\n    vertices[vtxIdx].x = (vertices[vtxIdx].isXFixed) ? vertices[vtxIdx].x : vtxState.x;\n    vertices[vtxIdx].y = (vertices[vtxIdx].isYFixed) ? vertices[vtxIdx].y : vtxState.y;\n\n    _this.setState({\n      vertices: vertices\n    });\n  }\n\n  /* ===========================================================================\n  *  HELPER METHODS\n  */\n\n  /**\n   * Calculates the x and y for a vertex in the graph according to its state value.\n   * @private\n   */\n  _calcVertexPos(vertexState) {\n    let normalizedWidth = this._getWidth() - (2 * this.o.vertexRadius);\n    let normalizedHeight = this._getHeight() - (2 * this.o.vertexRadius);\n\n    return {\n     x: (normalizedWidth * (vertexState.x / this.o.maxXVal)) + this.o.vertexRadius,\n     y: (normalizedHeight - (normalizedHeight * (vertexState.y / this.o.maxYVal))) + this.o.vertexRadius\n    };\n  }\n\n  /**\n   * Calculates the x and y for a vertex state based on position on the graph.\n   * (inverse of _calcVertexPos).\n   * @private\n   */\n  _calcVertexState(vertexPos) {\n    let normalizedWidth = this._getWidth() - (2 * this.o.vertexRadius);\n    let normalizedHeight = this._getHeight() - (2 * this.o.vertexRadius);\n\n    return {\n      x: this.o.maxXVal * ((vertexPos.x - this.o.vertexRadius) / normalizedWidth),\n      y: this.o.maxYVal - (this.o.maxYVal * (vertexPos.y / normalizedHeight))\n    };\n  }\n\n  /**\n   * Converts on-screen x distance to scaled x state-value.\n   * @private\n   */\n  _xPxToVal(x) {\n    return ((x - this.o.vertexRadius) / (this._getWidth() + (2 * this.o.vertexRadius))) \n              * (this.o.maxXVal - this.o.minXVal);\n  }\n\n  /**\n   * Converts on-screen y distance to scaled y state-value.\n   * @private\n   */\n  _yPxToVal(y) {\n    return (y / (this._getHeight() + (2 * this.o.vertexRadius))) * (this.o.maxYVal - this.o.minYVal);\n  }\n}\n\nexport default Graph;\n\n\n// WEBPACK FOOTER //\n// ./src/ui/graph.js","import Widget from \"ui/core/widget\";\nimport Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\n\n/**\n * Class representing an Numberbox widget.\n * @class\n * @implements {Widget}\n */\nclass Numberbox extends Widget {\n\n    /**\n     * @constructor\n     * @param {object} container - DOM container for the widget.\n     * @param {object} [o] - Options.\n     * @param {number} [o.minVal=null] - Minimum value. \n     * @param {number} [o.maxVal=null] - Maximum value.\n     * @param {number} [o.precision=0] - Number of decimal places to use.\n     * @param {string} [o.backgroundColor=\"#282828\"] - The background color.\n     * @param {string} [o.fontColor=\"#aaa\"] - The font color.\n     * @param {string} [o.fontSize=\"12px\"] - The font size.\n     * @param {string} [o.fontFamily=\"Arial\"] - The font family.\n     * @param {string} [o.appendString=\"\"] - String to append to the value when displaying (i.e. \" Hz\").\n     */\n    constructor(container, o) {\n        super(container, o);\n        return this;\n    }\n\n    /* ==============================================================================================\n    *  PUBLIC API\n    */\n\n    /**\n     * Returns the current value.\n     * @public @override\n     * @returns {number} - Current value.\n     */\n    getVal() {\n        return this.state.val;\n    }\n\n    /**\n     * Sets the current value.\n     * Same as setVal(), but will not cause an observer callback trigger.\n     * @public @override\n     * @param {number} newVal - The new value.\n     */\n    setInternalVal(newVal) {\n        this.setInternalState({ val: newVal });\n    }\n\n    /**\n     * Sets the current value.\n     * Same as setInternalVal(), but will cause an observer callback trigger.\n     * @public @override\n     * @param {number} newVal - The new value.\n     */\n    setVal(newVal) {\n        this.setState({ val: newVal });\n    }\n\n    /* ==============================================================================================\n    *  INITIALIZATION METHODS\n    */\n\n    /**\n     * Initializes the options.\n     * @private @override\n     */\n    _initOptions(o) {\n        // set the defaults\n        this.o = {\n            minVal: 0,\n            maxVal: 127,\n            precision: 4,\n            quantizeInterval: 1,\n            backgroundColor: \"#282828\",\n            fontColor: \"#ccc\",\n            fontSize: \"12px\",\n            fontFamily: \"Arial\",\n            appendString: \"\",\n            mouseSensitivity: 0.01\n        };\n\n        // override defaults with provided options\n        super._initOptions(o);\n    }\n\n    /**\n     * Initializes state constraints.\n     * @private @override\n     */\n    _initStateConstraints() {\n        const _this = this;\n\n        let valConstraintDef = {};\n\n        if (this.o.minVal !== null) {\n            valConstraintDef.minVal = this.o.minVal;\n        }\n\n        if (this.o.maxVal !== null) {\n            valConstraintDef.maxVal = this.o.maxVal;\n        }\n\n        this.stateConstraints = new ConstraintSpec({\n            val: new Constraint(valConstraintDef)\n        });\n    }\n\n    /**\n     * Initializes the state.\n     * @private @override\n     */\n    _initState() {\n        this.state = {\n            val: 0\n        };\n    }\n\n    /**\n     * Initializes the svg elements.\n     * @private @override\n     */\n    _initSvgEls() {\n        const _this = this;\n\n        this.svgEls = {\n            panel: document.createElementNS(_this.SVG_NS, \"rect\"),\n            text: document.createElementNS(_this.SVG_NS, \"text\"),\n            overlay: document.createElementNS(_this.SVG_NS, \"rect\"),\n        };\n\n        this.svgEls.text.setAttribute(\"alignment-baseline\", \"middle\");\n        this.svgEls.text.setAttribute(\"text-anchor\", \"middle\");\n        this.svg.addEventListener(\"mouseover\", function() {\n            _this.svg.style.cursor = \"text\";\n        });\n\n        this._appendSvgEls();\n        this._update();\n    }\n\n    /**\n     * Initializes mouse and touch event handlers.\n     * @private @override\n     */\n    _initHandlers() {\n        const _this = this;\n\n        let x0 = 0;\n        let y0 = 0;\n        let yD = 0;\n        let newVal = _this.getState().val;\n        let charNum;\n        let power;\n\n        this.handlers = {\n\n            touch: function touch(ev) {\n                ev.preventDefault();\n                ev.stopPropagation();\n\n                y0 = ev.clientY;\n                x0 = ev.clientX;\n\n                charNum = _this._getSelectedCharNumber(x0, y0);\n                power = _this._getPowerOfSelectedDigit(charNum);\n\n                document.addEventListener(\"mousemove\", _this.handlers.move);\n                document.addEventListener(\"touchmove\", _this.handlers.move);\n                document.addEventListener(\"mouseup\", _this.handlers.kbdEdit);\n                document.addEventListener(\"touchend\", _this.handlers.kbdEdit);\n            },\n\n            move: function move(ev) {\n                ev.preventDefault();\n                ev.stopPropagation();\n\n                let clientX = ev.clientX;\n                let clientY = ev.clientY;\n                \n                yD = y0 - clientY;\n\n                let newVal = _this.getVal() + (yD * Math.pow(10, power) * _this.o.mouseSensitivity);\n\n                _this.setState({ val: newVal });\n\n                document.removeEventListener(\"mouseup\", _this.handlers.kbdEdit);\n                document.removeEventListener(\"touchend\", _this.handlers.kbdEdit);\n                document.addEventListener(\"mouseup\", _this.handlers.release);\n                document.addEventListener(\"touchend\", _this.handlers.release);\n            },\n\n            // Edit the value by typing on a keyboard\n            kbdEdit: function kbdEdit(ev) {\n                ev.preventDefault();\n                ev.stopPropagation();\n\n                let charNum = _this._getSelectedCharNumber(ev.clientX, ev.clientY);\n                let power = _this._getPowerOfSelectedDigit(charNum);\n\n                document.removeEventListener(\"mousemove\", _this.handlers.move);\n                document.removeEventListener(\"touchmove\", _this.handlers.move);\n            },\n\n            release: function release(ev) {\n                ev.preventDefault();\n                ev.stopPropagation();\n\n                document.removeEventListener(\"mousemove\", _this.handlers.move);\n                document.removeEventListener(\"touchmove\", _this.handlers.move);\n            }\n        };\n\n        this.svg.addEventListener(\"mousedown\", _this.handlers.touch);\n        this.svg.addEventListener(\"touchstart\", _this.handlers.touch);\n    }\n\n    /**\n     * Updates (redraws) components based on state.\n     * @private @override\n     */\n    _update() {\n        const _this = this;\n\n        this.svgEls.text.textContent = this.state.val\n            .toFixed(this.o.precision)\n            + this.o.appendString;\n\n        let panelWidth = _this._getWidth();\n        let panelHeight = _this._getHeight();\n        let textWidth = this.svgEls.text.getBoundingClientRect().width;\n        let textHeight = this.svgEls.text.getBoundingClientRect().height;\n\n        this.svgEls.panel.setAttribute(\"fill\", _this.o.backgroundColor);\n        this.svgEls.panel.setAttribute(\"width\", panelWidth);\n        this.svgEls.panel.setAttribute(\"height\", panelHeight);\n\n        this.svgEls.text.setAttribute(\"x\", panelWidth / 2);\n        this.svgEls.text.setAttribute(\"y\", panelHeight / 2);\n        this.svgEls.text.setAttribute(\"fill\", _this.o.fontColor);\n\n        this.svgEls.overlay.setAttribute(\"fill\", \"transparent\");\n        this.svgEls.overlay.setAttribute(\"width\", _this._getWidth());\n        this.svgEls.overlay.setAttribute(\"height\", _this._getHeight());\n    }\n\n    /* ==============================================================================================\n    *  INTERNAL FUNCTIONALITY METHODS\n    */\n\n    /**\n     * Returns the number of the selected character in the text box based on the client mouse x and y position.\n     * @private\n     * @param {number} clientX \n     * @param {number} clientY \n     * @returns {number} - Index of the selected digit.\n     */\n    _getSelectedCharNumber(clientX, clientY) {\n\n        let svgBRect = this.svg.getBoundingClientRect();\n        let textBRect = this.svgEls.text.getBoundingClientRect();\n        let numChars = this.svgEls.text.getNumberOfChars();\n        let charNum = 0;\n\n        if (clientX <= textBRect.x) {\n            charNum = 0;\n        } else if (clientX >= (textBRect.x + textBRect.width)) {\n            charNum = numChars - 1;\n        } else {\n            let svgX = clientX - svgBRect.x;\n            let svgY = clientY - svgBRect.y;\n\n            let svgPoint = this.svg.createSVGPoint();\n            svgPoint.x = svgX;\n            svgPoint.y = svgY;\n\n            charNum = this.svgEls.text.getCharNumAtPosition(svgPoint);\n        }\n\n        // if we selected the \"minus\" sign of a negative number, select the first digit instead\n        if (this.getVal() < 0 && charNum == 0) {\n            charNum = 1;\n        }\n\n        return charNum;\n    }\n\n    /**\n     * Returns the power of the selected digit. \n     * @private\n     * @param {number} charNum - The index of the selected digit.\n     * @returns {number} - Power of the selected digit.\n     */\n    _getPowerOfSelectedDigit(charNum) {\n\n        let power;\n        let precision = this.o.precision;\n        let numChars = this.svgEls.text.getNumberOfChars();\n\n        if (precision > 0) {\n\n            // if the digit selected is to the left of the decimal point\n            if ((numChars - charNum) > (this.o.precision + 1)) {\n                power = ((numChars - (precision + 1)) - charNum) - 1;\n            } else {\n                power = -1 * ((precision + 1) - (numChars - charNum));\n            }\n        } else {\n            power = (numChars - charNum) - 1;\n        }\n\n        return power;\n    }\n\n\n}\n\nexport default Numberbox;\n\n\n// WEBPACK FOOTER //\n// ./src/ui/numberbox.js","import Widget from \"ui/core/widget\";\nimport Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\n\n/**\n * Class representing an piano keyboard widget\n *\n * @class\n * @implements {Widget}\n */\nclass Keyboard extends Widget {\n\n  /**\n   * @constructor\n   * @param {object} container - DOM container for the widget.\n   * @param {object} [o] - Options.\n   * @param {number} [o.bottomNote=48] - The bottom note (MIDI pitch) of the keyboard.\n   * @param {number} [o.topNote=71] - The top note (MIDI pitch) of the keyboard.\n   * @param {string} [o.keyBorderColor=\"#484848\"] - The color of the border separating the keys.\n   * @param {string} [o.blackKeyColor=\"#484848\"] - The color used for the black keys.\n   * @param {string} [o.whiteKeyColor=\"#fff\"] - The color used for the white keys.\n   * @param {string} [o.blackKeyActiveColor=\"#888\"] - The color used to represent an active black key.\n   * @param {string} [o.whiteKeyActiveColor=\"#333\"] - The color used to represent an active white key.\n   * @param {number} [o.blackKeyHeightAspect=0.6] - The aspect ratio of black key height to white key height.\n   * @param {number} [o.blackKeyWidthAspect=0.66] - The aspect ratio of black key width to white key width.\n   * @param {string} [o.orientation=\"horizontal\"] - The keyboard orientation. sible values are 'monophonic'\n   *                                       (only one active note at a time), or 'polyphonic'\n   *                                       (can have several active notes at a time).\n   * @param {boolean} [o.isEditable=true] - Boolean specifying whether the keyboard\n   *                                      is editable by the mouse or touch interactions.\n   *                                      A non-editable keyboard may be used as a visual\n   *                                      diagram, for example.\n   * @param {number | string} [o.maxPolyphony=\"no max\"] - The maximum number of keys that can be active at the\n   *                                                      same time. Values can be a number, or \"no max\".\n   */\n  constructor(container, o) {\n    super(container, o);\n    return this;\n  }\n\n  /* ==============================================================================================\n  *  PUBLIC API\n  */\n\n  /**\n   * Sets the options.\n   * @public\n   * @override\n   * @param {object} [o] - Options to set. See {@link Keyboard#constructor} for list of options. \n   */\n  setOptions(o) {\n    o = o || {};\n\n    // ensure that the bottom note is a white key (a black key cannot be at the edge when drawing the keyboard)\n    if (o.bottomNote !== undefined && !this._isWhiteKey(o.bottomNote)) {\n      --o.bottomNote;\n    }\n\n    // ensure that the bottom note is a white key (a black key cannot be at the edge when drawing the keyboard)\n    if (o.topNote !== undefined && !this._isWhiteKey(o.topNote)) {\n      ++o.topNote;\n    }\n\n    super.setOptions(o);\n  }\n\n  /**\n   * Returns the last note event.\n   * @public\n   * @override\n   * @returns {object} - An object representing the last note event that occured as {pitch, vel}\n   */\n  getVal() {\n    return Object.assign({}, this.lastNoteEvent);\n  }\n\n  /**\n   * Returns the currently active notes.\n   * @public\n   * @override\n   * @returns {array} - An array of active notes. Each element is a [pitch, vel] pair.\n   */\n  getActiveNotes() {\n    return this.getState().activeNotes.map(note => [ note.pitch, note.vel ]);\n  }\n\n  /**\n   * Sets the current keyboard state using an array of {pitch, val} objects.\n   * Same as setVal(), but will not cause an observer callback trigger.\n   * @public\n   * @override\n   * @param {array} newNote - New value (array representing active notes with each entry in the form {pitch, val}).\n   * @param {boolean} isVelToggled - A boolean indicating whether a non-zero vel of the same \n   *                                  pitch will turn a note off if it is turned on.\n   */\n  setInternalVal(newNote, isVelToggled) {\n    let newState = this._getNewStateFromNewNote(newNote, isVelToggled);\n    this.setInternalState(newState);\n  }\n\n  /**\n   * Sets the current keyboard state using an array of {pitch, val} objects.\n   * Same as setInternalVal(), but will cause an observer callback trigger.\n   * @public\n   * @param {array} newVal - New value (array representing active notes with each entry in the form {pitch, val}).\n   * @param {boolean} isVelToggled - A boolean indicating whether a non-zero vel of the same \n   *                                  pitch will turn a note off if it is turned on.\n   */\n  setVal(newNote, isVelToggled) {\n    let newState = this._getNewStateFromNewNote(newNote, isVelToggled);\n    this.setState(newState);\n  }\n\n  /* ==============================================================================================\n  *  INITIALIZATION METHODS\n  */\n\n  /**\n   * Initialize the options\n   * @override\n   * @private\n   */\n  _initOptions(o) {\n    // set the defaults\n    this.o = {\n      bottomNote: 48,\n      topNote: 71,\n      keyBorderColor: \"#484848\",\n      blackKeyColor: \"#484848\",\n      whiteKeyColor: \"#fff\",\n      blackKeyActiveColor: \"#999\",\n      whiteKeyActiveColor: \"#999\",\n      blackKeyHeightAspect: 0.6,\n      blackKeyWidthAspect: 0.66,\n      maxPolyphony: \"no max\",\n      orientation: \"horizontal\",\n      isEditable: true,\n      mouseSensitivity: 1.2\n    };\n\n    // override defaults with provided options\n    super._initOptions(o);\n  }  \n\n  /**\n   * Initialize state constraints\n   * @override\n   * @private\n   */\n  _initStateConstraints() {\n    const _this = this;\n\n    this.stateConstraints = new ConstraintSpec({\n      activeNotes: [{\n        pitch: new Constraint({ min: 0, max: 127 }),\n        vel: new Constraint({ min: 0, max: 127})\n      }]\n    });\n  }\n\n  /**\n   * Initializes the state.\n   * State is represented as an array of active notes, each of which is an object\n   * { pitch, vel }, where pitch is MIDI pitch (0 - 127) and vel is MIDI velocity\n   * (0 - 127). A vel of 0 is reported once for each note-off event, and not\n   * reported on subsequent callback notifications.\n   * @override\n   * @private\n   */\n  _initState() {\n    this.state = {\n      activeNotes: []\n    };\n\n    // Object representing the last note event that occured.\n    this.lastNoteEvent = {};\n  }\n\n  /**\n   * Initialize the svg elements\n   * @override\n   * @private\n   */\n  _initSvgEls() {\n    const _this = this;\n\n    this.svgEls = {\n      keys: []\n    };\n\n    this._update();\n  }\n\n  /**\n   * Updates the SVG elements. \n   * Adds or removes a number of SVG elements to match the current number of keys.\n   */\n   _updateSvgEls() {\n    let numKeys = this._getNumKeys();\n    \n    // add SVG elements representing keys to match current number of keys\n    for (let i = this.svgEls.keys.length; i < numKeys; ++i) {\n      this._addSvgKey();\n    }\n\n    // remove SVG elements representing keys to match current number of keys\n    for (let i = this.svgEls.keys.length; i > numKeys; ++i) {\n      this._removeSvgKey();\n    }\n  }\n\n  /**\n   * Initializes mouse and touch event handlers.\n   * @override\n   * @private\n   */\n  _initHandlers() {\n    const _this = this;\n\n    this.handlers = {\n      touch: function touch(ev) {\n        ev.preventDefault();\n\n        let touchVel = Math.ceil(127 * (_this._getKeyboardHeight() - _this._getRelativeY(ev.clientY)) / _this._getKeyboardHeight());\n        _this._touchKey(ev.target, touchVel);\n\n        for (let i = 0; i < _this.svgEls.keys.length; ++i) {\n          // activate / toggle a key on mouse enter\n          _this.svgEls.keys[i].addEventListener(\"mouseenter\", _this.handlers.touch);\n          _this.svgEls.keys[i].addEventListener(\"touchenter\", _this.handlers.touch);\n\n          _this.svgEls.keys[i].addEventListener(\"mouseup\", _this.handlers.release);\n          _this.svgEls.keys[i].addEventListener(\"touchend\", _this.handlers.release);\n        }\n      },\n      release: function release() {\n        for (let i = 0; i < _this.svgEls.keys.length; ++i) {\n          _this.svgEls.keys[i].removeEventListener(\"mouseenter\", _this.handlers.touch);\n          _this.svgEls.keys[i].removeEventListener(\"touchenter\", _this.handlers.touch);\n        }\n      }\n    };\n\n    for (let i = 0; i < this.svgEls.keys.length; ++i) {\n      this.svgEls.keys[i].addEventListener(\"mousedown\", this.handlers.touch);\n      this.svgEls.keys[i].addEventListener(\"touchdown\", this.handlers.touch);\n    }\n  }\n\n  /**\n   * \n   */\n  _touchKey(targetKey, vel) {\n    const _this = this;\n\n    let keyIdx = this.svgEls.keys.findIndex(key => key === targetKey);\n\n    let newNote = {\n      pitch: keyIdx + _this.o.bottomNote,\n      vel: vel \n    };\n\n    this.setVal(newNote, true);\n  }\n\n  /**\n   * Updates (redraws) component based on state.\n   * @override\n   * @private\n   */\n  _update() {\n    var x, y, width, height, fill, stroke;\n    let blackKeys = [];\n    \n    // an array of velocities representing all possible notes (vel 0 means note is off)\n    let notes = new Array(this._getNumKeys());\n    notes.fill(0);\n\n    // put value of 1 for all active notes in the note array\n    this.getState().activeNotes.forEach(activeNote => {\n      notes[activeNote.pitch - this.getOptions().bottomNote] = 1;  \n    });\n\n    this._updateSvgEls();\n\n    for (let keyIdx = 0, whiteKeyIdx = 0; keyIdx < this.svgEls.keys.length; ++keyIdx) {\n      let pitch = this._getPitchForKeyIdx(keyIdx);\n      let attr = {};\n\n      if (this._isWhiteKey(pitch)) {\n        attr.x = this._getWhiteKeyWidth() * whiteKeyIdx;\n        attr.y = 0;\n        attr.width = this._getWhiteKeyWidth();\n        attr.height = this._getKeyboardHeight();\n        attr.fill = (notes[keyIdx] === 0) ? \n            this.getOptions().whiteKeyColor\n          : this.getOptions().whiteKeyActiveColor;\n        attr.stroke = this.getOptions().keyBorderColor;\n\n        ++whiteKeyIdx;       \n      } else {\n        blackKeys.push(this.svgEls.keys[keyIdx]);\n\n        // black keys are offset by 2/3 of white key width, and are 2/3 width and height of black keys\n        attr.x = (this._getWhiteKeyWidth() * whiteKeyIdx) - ( this.getOptions().blackKeyWidthAspect * this._getWhiteKeyWidth() / 2 );\n        attr.y = 0;\n        attr.width = this.getOptions().blackKeyWidthAspect * this._getWhiteKeyWidth();\n        attr.height = this.getOptions().blackKeyHeightAspect * this._getKeyboardHeight();\n        attr.fill = (notes[keyIdx] === 0) ? \n            this.getOptions().blackKeyColor\n          : this.getOptions().blackKeyActiveColor;\n        attr.stroke = this.getOptions().keyBorderColor;\n      }\n\n      this._setKeyAttributes(keyIdx, attr);\n    }\n\n    // remove and reappend black keys so they are on top of the white keys\n    for (let i = 0; i < blackKeys.length; ++i) {\n      this.svg.removeChild(blackKeys[i]);\n      this.svg.appendChild(blackKeys[i]);\n    }\n  }\n\n  /* ===========================================================================\n  *  INTERNAL FUNCTIONALITY\n  */\n\n  /**\n   * Returns a newState object representing a new keyboard state based on a new note provided. \n   * @param {object} newNote - A note object of format { pitch: number, vel: number }.\n   * @param {number} newNote.pitch\n   * @param {number} newNote.vel\n   * @param {boolean} isVelToggled - A boolean indicating whether a non-zero vel of the same \n   *                                  pitch will turn a note off if it is turned on.\n   * @returns {object} An object representing the new state. \n   */\n  _getNewStateFromNewNote(newNote, isVelToggled) {\n    let newState = this.getState();\n    let noteIdx = newState.activeNotes.findIndex(note => note.pitch === newNote.pitch);\n    \n    if (noteIdx === -1) {\n      if (newNote.vel > 0) {\n        if (this.o.maxPolyphony === \"no max\" || (newState.activeNotes.length < this.o.maxPolyphony)) {\n          newState.activeNotes.push(newNote);\n        } else {\n          newState.activeNotes.splice(0, 1);\n          newState.activeNotes.push(newNote);\n        }\n      }\n    } else {\n      if (newNote.vel <= 0 || isVelToggled) {\n        newState.activeNotes.splice(noteIdx, 1);\n        newNote.vel = 0;\n      } else {\n        newState.activeNotes[noteIdx].vel = newNote.vel;\n      }\n    }\n\n    this.lastNoteEvent = newNote;\n\n    return newState;\n  }\n\n  /**\n   * Adds an SVG element representing a key.\n   */\n  _addSvgKey() {\n    let newKey = document.createElementNS(this.SVG_NS, \"rect\");\n    this.svg.appendChild(newKey);\n    this.svgEls.keys.push(newKey);\n    newKey.addEventListener(\"mousedown\", this.handlers.touch);\n    newKey.addEventListener(\"touchdown\", this.handlers.touch);\n  }\n\n  /**\n   * Removes an SVG element representing a key.\n   */\n  _removeSvgKey() {\n    let key = this.svgEls.keys[this.svgEls.keys.length - 1];\n\n    this.svg.removeChild(key);\n    key = null;\n    this.svgEls.keys.pop();\n  }\n\n  /* ===========================================================================\n  *  HELPER METHODS\n  */\n\n  /**\n   * Sets attributes for an SVG rectangle representing a key with the given index.\n   */\n  _setKeyAttributes(keyIdx, attr) {\n    this.svgEls.keys[keyIdx].setAttribute(\"x\", attr.x);\n    this.svgEls.keys[keyIdx].setAttribute(\"y\", attr.y);\n    this.svgEls.keys[keyIdx].setAttribute(\"width\", attr.width);\n    this.svgEls.keys[keyIdx].setAttribute(\"height\", attr.height);\n    this.svgEls.keys[keyIdx].setAttribute(\"fill\", attr.fill);\n    this.svgEls.keys[keyIdx].setAttribute(\"stroke\", attr.stroke);\n  }\n\n  /**\n   * Returns the width of the keyboard, taking orientation into account.\n   * If orientation is horizontal, width of the keyboard would equal\n   * width of the canvas. If orientation is vertical, width of the\n   * keyboard would equal the height of the canvas.\n   * @private\n   * @throws {Error} if o.orientation is not one of the allowed values.\n   */\n  _getKeyboardWidth() {\n    let orientation = this.getOptions().orientation;\n\n    if (orientation === \"horizontal\" || orientation === \"horizontal-mirrored\") {\n      return this._getWidth();\n    } else if (orientation === \"vertical\" || orientation === \"vertical-mirrored\") {\n      return this._getHeight();\n    } \n  }\n\n  /**\n   * Returns the height of the keyboard, taking orientation into account.\n   * If orientation is horizontal, height of the keyboard would equal\n   * height of the canvas. If orientation is vertical, height of the\n   * keyboard would equal the width of the canvas.\n   * @private\n   * @throws {Error} if o.orientation is not one of the allowed values.\n   */\n  _getKeyboardHeight() {\n    let orientation = this.getOptions().orientation;\n\n    if (orientation === \"horizontal\" || orientation === \"horizontal-mirrored\") {\n      return this._getHeight();\n    } else if (orientation === \"vertical\" || orientation === \"vertical-mirrored\") {\n      return this._getWidth();\n    } \n  }\n\n  /**\n   * Returns the MIDI note number for the given key number.\n   * @private\n   * @param {number} keyIdx - The index of the key to be queried.\n   * @returns {number} - MIDI note number for the given key number\n   */\n  _getPitchForKeyIdx(keyIdx) {\n    return this.getOptions().bottomNote + keyIdx;\n  }\n\n  /** \n   * Returns the total number of keys on the keyboard. \n   * @private\n   * @returns {number} - Total number of keys.\n   */\n  _getNumKeys() {\n    return (this.o.topNote - this.o.bottomNote) + 1;\n  }\n\n  /**  \n   * Returns the number of white keys on the keyboard.\n   * @private\n   * @returns {number} - Number of white keys. \n   */\n  _getNumWhiteKeys() {\n    let whiteKeyCount = 0;\n\n    for (let curNote = this.getOptions().bottomNote; curNote <= this.getOptions().topNote; ++curNote) {\n      if (this._isWhiteKey(curNote)) {\n        ++whiteKeyCount;\n      }\n    }\n\n    return whiteKeyCount;\n  }\n\n  /** \n   * Returns the width of each white key in px.\n   * @private\n   * @returns {number} - Width of each white key in px.\n   */\n  _getWhiteKeyWidth() {\n    return this._getKeyboardWidth() / this._getNumWhiteKeys();\n  }\n\n  /**\n   * Returns true if the given MIDI note number is a white key on the piano.\n   * @private\n   * @param {number} note - The MIDI note number for the given note. \n   * @returns {boolean} - True if the note is a white key, false if not.\n   */\n  _isWhiteKey(note) {\n    if (note % 12 === 0 || \n        note % 12 === 2 || \n        note % 12 === 4 || \n        note % 12 === 5 || \n        note % 12 === 7 || \n        note % 12 === 9 || \n        note % 12 === 11) {\n        return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default Keyboard;\n\n\n// WEBPACK FOOTER //\n// ./src/ui/keyboard.js","import Widget from \"ui/core/widget\";\nimport Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\n\n/**\n * Class representing an Dropmenu widget.\n * @class\n * @implements {Widget}\n */\nclass Dropmenu extends Widget {\n\n  /**\n   * @constructor\n   * @param {object} container - DOM container for the widget.\n   * @param {object} [o] - Options.\n   * @param {object} [o.menuItems=[]] - The items to populate the menu with.\n   * @param {string} [o.backgroundColor=\"#282828\"] - The background color.\n   * @param {string} [o.fontColor=\"#ccc\"] - The font color.\n   * @param {string} [o.fontSize=\"12px\"] - The font size.\n   * @param {string} [o.fontFamily=\"Arial\"] - The font family.\n   * @param {string} [o.menuItemFontSize=\"12px\"] - The font size for items in the opened drop-down menu.\n   * @param {string} [o.menuItemFontFamily=\"Arial\"] - The font family for items in the opened drop-down menu.\n   * @param {string} [o.selectedItemBackgroundColor=\"#f40\"] - The background cover for the selected (hovered) item in the opened drop-down menu.\n   * @param {string} [o.selectedItemFontColor=\"#fff\"] - The font color for the selected (hovered) item in the opened drop-down menu.\n   * @param {number} [o.menuItemHorizontalPadding=10] - Extra horizontal padding to add to each menu item.\n   * @param {number} [o.menuItemVerticalPadding=5] - Extra vertical padding to add to each menu item. \n   */\n  constructor(container, o) {\n    super(container, o);\n    return this;\n  }\n\n  /* ==============================================================================================\n  *  PUBLIC API\n  */\n\n  /**\n   * Returns the currently selected menu item index.\n   * @public @override\n   * @returns {number} - Index of the item currently selected.\n   */\n  getVal() {\n    return this.state.selectedItemIdx;\n  }\n\n  /**\n   * Returns the string representing the currently selected item.\n   * @public\n   * @returns {string} - The string representing the selected item.\n   */\n  getSelectedItem() {\n    return this.state.menuItems[this.state.selectedItemIdx];\n  }\n\n  /**\n   * Sets the currently selected menu item.\n   * Same as setVal(), but will not cause an observer callback trigger.\n   * @public @override\n   * @param {number} itemIdx - Index of the item to be selected.\n   */\n  setInternalVal(itemIdx) {\n    this.setInternalState({ selectedItemIdx: itemIdx });\n  }\n\n  /**\n   * Sets the currently selected menu item.\n   * Same as setInternalVal(), but will cause an observer callback trigger.\n   * @public @override\n   * @param {number} itemIdx - Index of the item to be selected.\n   */\n  setVal(itemIdx) {\n    this.setState({ selectedItemIdx: itemIdx });\n  }\n\n  /**\n   * Sets the selected menu item by index.\n   * Same as setInternalSelectionIdx(), but will cause an observer callback trigger.\n   * @param {number} itemIdx - Index of the item to be selected.\n   */\n  setSelectionIdx(itemIdx) {\n    this.setState({ selectedItemIdx: itemIdx });\n  }\n\n  /**\n   * Sets the selected menu item by index.\n   * Same as setSelectionIdx(), but will not cause an observer callback trigger.\n   * @param {number} itemIdx - Index of the item to be selected.\n   */\n  setInternalSelectionIdx(itemIdx) {\n    this.setInternalState({ selectedItemIdx: itemIdx });\n  }\n\n  /**\n   * Sets the selected menu item according to a string argument specifying which item to select.\n   * If the argument is not one of the menu items, the selection will not change.\n   * Same as setInternalSelectedItem(), but will cause and observer callback trigger.\n   * @param {string} item - The item to select\n   * @returns {number} - Index of the item selected.\n   */\n  setSelectedItem(item) {\n    let idx = this.state.menuItems.findIndex(menuItem => item === menuItem);\n\n    if (idx !== -1) {\n      this.setVal(idx);\n    } else {\n      idx = this.state.selectedItemIdx;\n    }\n\n    return idx;\n  }\n\n  /**\n   * Sets the selected menu item according to a string argument specifying which item to select.\n   * If the argument is not one of the menu items, the selection will not change.\n   * Same as setSelectedItem(), but will not cause and observer callback trigger.\n   * @param {string} item - The item to select\n   * @returns {number} - Index of the item selected.\n   */\n  setInternalSelectedItem(item) {\n    let idx = this.state.menuItems.findIndex(menuItem => item === menuItem);\n    \n    if (idx !== -1) {\n      this.setVal(idx);\n    } else {\n      idx = this.state.selectedItemIdx;\n    }\n\n    return idx;\n  }\n\n  /**\n   * Sets the list of available menu items.\n   * @public @override\n   * @param {array} menuItems - Array of menu items to use.\n   */\n  setMenuItems(menuItems) {\n    this.setState({ menuItems: menuItems});\n  }\n\n  /* ==============================================================================================\n  *  INITIALIZATION METHODS\n  */\n\n  /**\n   * Initializes the options.\n   * @private @override\n   */\n  _initOptions(o) {\n    // set the defaults\n    this.o = {\n      menuItems: [],\n      backgroundColor: \"#282828\",\n      fontColor: \"#ccc\",\n      fontSize: \"12px\",\n      fontFamily: \"Arial\",\n      menuItemFontSize: \"12px\",\n      menuItemFontFamily: \"Arial\",\n      menuItemVerticalPadding: 5, \n      menuItemHorizontalPadding: 10,\n      selectedItemBackgroundColor: \"#f40\",\n      selectedItemFontColor: \"#fff\",\n      mouseSensitivity: 1.2\n    };\n\n    // override defaults with provided options\n    super._initOptions(o);\n  }\n\n  /**\n   * Initializes state constraints.\n   * @private @override\n   */\n  _initStateConstraints() {\n    const _this = this;\n\n    this.stateConstraints = new ConstraintSpec({\n      menuItems: [new Constraint()],\n      selectedItemIdx: new Constraint(),\n      hasFocus: new Constraint()\n    });\n  }\n\n  /**\n   * Initializes the state.\n   * @private @override\n   */\n  _initState() {\n    this.state = {\n      menuItems: this.o.menuItems,\n      selectedItemIdx: 0,\n      hasFocus: false\n    };\n  }\n\n  /**\n   * Initializes the svg elements.\n   * @private @override\n   */\n  _initSvgEls() {\n    const _this = this;\n\n    /* The following components are used:\n     *  Panels are the background\n     *  Text is where the text lives\n     *  Overlays are transparent and are used to listen to mouse events\n     */\n    this.svgEls = {\n      menuTogglePanel: document.createElementNS(_this.SVG_NS, \"rect\"),\n      menuToggleText: document.createElementNS(_this.SVG_NS, \"text\"),\n      menuToggleOverlay: document.createElementNS(_this.SVG_NS, \"rect\"),\n      menuBodyCanvasContainer: document.createElement(\"div\"),\n      menuBodyCanvas: document.createElementNS(_this.SVG_NS, \"svg\"),\n      menuBodyPanel: document.createElementNS(_this.SVG_NS, \"rect\"),\n      menuItemPanels: [],\n      menuItemTextboxes: [],\n      menuItemOverlays: []\n    };\n\n    this.svg.appendChild(this.svgEls.menuTogglePanel);\n    this.svg.appendChild(this.svgEls.menuToggleText);\n    this.svg.appendChild(this.svgEls.menuToggleOverlay);\n\n    this.svgEls.menuToggleText.setAttribute(\"alignment-baseline\", \"middle\");\n\n    // menu body (the part that is hidden unless toggled)\n\n    this.svgEls.menuBodyCanvasContainer.style.position = \"relative\";\n    this.container.appendChild(this.svgEls.menuBodyCanvasContainer);\n    this.svgEls.menuBodyCanvas = document.createElementNS(_this.SVG_NS, \"svg\");\n    this.svgEls.menuBodyCanvasContainer.appendChild(this.svgEls.menuBodyCanvas);\n    this.svgEls.menuBodyCanvas.style.position = \"absolute\";\n    this.svgEls.menuBodyCanvas.style.transform = \"translateY(-5px)\";\n    this.svgEls.menuBodyCanvas.appendChild(this.svgEls.menuBodyPanel);\n\n    this._update();\n  }\n\n  /**\n   * Initializes mouse and touch event handlers.\n   * @private @override\n   */\n  _initHandlers() {\n    const _this = this;\n\n    this.handlers = {\n\n      touch: function touch(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        _this.handlers.focus(ev);\n      },\n\n      focus: function focus(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        _this.setInternalState({ hasFocus: true });\n\n        _this.svgEls.menuToggleOverlay.removeEventListener(\"mousedown\", _this.handlers.touch);\n        _this.svgEls.menuToggleOverlay.removeEventListener(\"touchstart\", _this.handlers.touch);\n        _this.svgEls.menuToggleOverlay.addEventListener(\"mousedown\", _this.handlers.blur);\n        _this.svgEls.menuToggleOverlay.addEventListener(\"touchstart\", _this.handlers.blur);\n       \n        document.body.addEventListener(\"mousedown\", _this.handlers.blur);\n        document.body.addEventListener(\"touchstart\", _this.handlers.blur);\n      },\n\n      blur: function blur(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        _this.setInternalState({ hasFocus: false });\n\n        _this.svgEls.menuToggleOverlay.removeEventListener(\"mousedown\", _this.handlers.blur);\n        _this.svgEls.menuToggleOverlay.removeEventListener(\"touchstart\", _this.handlers.blur);\n        _this.svgEls.menuToggleOverlay.addEventListener(\"mousedown\", _this.handlers.touch);\n        _this.svgEls.menuToggleOverlay.addEventListener(\"touchstart\", _this.handlers.touch);\n        document.body.removeEventListener(\"mousedown\", _this.handlers.blur);\n        document.body.removeEventListener(\"touchstart\", _this.handlers.blur);\n      },\n\n      mouseOverItem: function mouseOverItem(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        let targetOverlay = ev.target;\n        _this._mouseOverItem(targetOverlay);\n\n        targetOverlay.addEventListener(\"mouseleave\", _this.handlers.mouseLeaveItem);\n        targetOverlay.addEventListener(\"mouseup\", (ev) => {\n          _this.handlers.select(ev);\n          _this.handlers.blur(ev);\n        });\n        targetOverlay.addEventListener(\"touchend\", (ev) => {\n          _this.handlers.select(ev);\n          _this.handlers.blur(ev);\n        });\n        \n        document.body.removeEventListener(\"mousedown\", _this.handlers.blur);\n        document.body.removeEventListener(\"touchstart\", _this.handlers.blur);\n      },\n\n      mouseLeaveItem: function mouseLeaveItem(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        let targetOverlay = ev.target;   \n        _this._mouseLeaveItem(ev.target, false);\n\n        targetOverlay.removeEventListener(\"mouseleave\", _this.handlers.hoverOut);\n\n        document.body.addEventListener(\"mousedown\", _this.handlers.blur);\n        document.body.addEventListener(\"touchstart\", _this.handlers.blur);\n      },\n\n      select: function select(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        _this._selectItem(ev.target);\n      }\n    };\n\n    this.svgEls.menuToggleOverlay.addEventListener(\"mousedown\", this.handlers.touch);\n    this.svgEls.menuToggleOverlay.addEventListener(\"touchstart\", this.handlers.touch);\n  }\n\n  /**\n   * Updates (redraws) components based on state.\n   * @private @override\n   */\n  _update() {\n    const _this = this;\n\n    _this._updateEls();\n\n    for (let i = 0; i < _this.state.menuItems.length; ++i) {\n      _this.svgEls.menuItemTextboxes[i].textContent = _this.state.menuItems[i];\n    }\n\n    // Set attributes for the toggle area\n    this.svgEls.menuTogglePanel.setAttribute(\"fill\", _this.o.backgroundColor);\n    this.svgEls.menuTogglePanel.setAttribute(\"width\", _this._getWidth());\n    this.svgEls.menuTogglePanel.setAttribute(\"height\", _this._getHeight());\n\n    this.svgEls.menuToggleText.setAttribute(\"width\", _this._getWidth());\n    this.svgEls.menuToggleText.setAttribute(\"height\", _this._getHeight());\n    this.svgEls.menuToggleText.setAttribute(\"x\", 10);\n    this.svgEls.menuToggleText.setAttribute(\"y\", _this._getHeight() / 2);\n    this.svgEls.menuToggleText.setAttribute(\"fill\", _this.o.fontColor);\n\n    this.svgEls.menuToggleOverlay.setAttribute(\"fill\", \"transparent\");\n    this.svgEls.menuToggleOverlay.setAttribute(\"width\", _this._getWidth());\n    this.svgEls.menuToggleOverlay.setAttribute(\"height\", _this._getHeight());\n\n    this.svgEls.menuToggleText.textContent = _this.state.menuItems[_this.state.selectedItemIdx];\n    \n    // Set attributes for the menu body\n    if (this.state.hasFocus) {\n      this.svgEls.menuBodyCanvas.style.display = \"inline-block\";\n\n      // reappend the svg canvas for the menu body so that it appears on top of other elements\n      this.svgEls.menuBodyCanvasContainer.removeChild(this.svgEls.menuBodyCanvas);\n      this.svgEls.menuBodyCanvasContainer.appendChild(this.svgEls.menuBodyCanvas);\n\n      let menuItemDims = _this._calcMenuItemDims();\n      let menuDims = {\n        height: menuItemDims.height * _this.state.menuItems.length, \n        width: menuItemDims.width\n      };\n\n      this.svgEls.menuBodyCanvas.setAttribute(\"width\", menuDims.width);\n      this.svgEls.menuBodyCanvas.setAttribute(\"height\", menuDims.height);\n      this.svgEls.menuBodyCanvas.style.left = 0;\n\n      this.svgEls.menuBodyPanel.setAttribute(\"width\", menuDims.width);\n      this.svgEls.menuBodyPanel.setAttribute(\"height\", menuDims.height);\n      this.svgEls.menuBodyPanel.setAttribute(\"x\", 0);\n      this.svgEls.menuBodyPanel.setAttribute(\"y\", 0);\n      this.svgEls.menuBodyPanel.setAttribute(\"fill\", this.o.backgroundColor);\n\n      for (let i = 0; i < this.state.menuItems.length; ++i) {\n        let curPanel = this.svgEls.menuItemPanels[i];\n        let curTextbox = this.svgEls.menuItemTextboxes[i];\n        let curOverlay = this.svgEls.menuItemOverlays[i];\n\n        curPanel.setAttribute(\"x\", 0);\n        curPanel.setAttribute(\"y\", i * menuItemDims.height);\n        curPanel.setAttribute(\"width\", menuItemDims.width);\n        curPanel.setAttribute(\"height\", menuItemDims.height);\n        curPanel.setAttribute(\"fill\", \"transparent\");\n        curTextbox.setAttribute(\"alignment-baseline\", \"middle\");\n        curTextbox.setAttribute(\"fill\", _this.o.fontColor);\n        curTextbox.setAttribute(\"x\", 10);\n        curTextbox.setAttribute(\"y\", ((i + 1) * menuItemDims.height) - (menuItemDims.height / 2));\n        curOverlay.setAttribute(\"x\", 0);\n        curOverlay.setAttribute(\"y\", i * menuItemDims.height);\n        curOverlay.setAttribute(\"width\", menuItemDims.width);\n        curOverlay.setAttribute(\"height\", menuItemDims.height);\n        curOverlay.setAttribute(\"fill\", \"transparent\");  \n      }\n    } else {\n      this.svgEls.menuBodyCanvas.style.display = \"none\";\n    }\n  }\n\n  /**\n   * Updates elements to match SVG representation with the state.\n   * @private\n   */\n  _updateEls() {\n    const _this = this;\n\n    for (let i = this.svgEls.menuItemTextboxes.length; i < this.state.menuItems.length; ++i) {\n      _this._addSvgMenuItem();\n    }\n\n    for (let i = this.state.menuItems.length; i > this.svgEls.menuItemTextboxes.length ; --i) {\n      _this._removeSvgMenuItem();\n    }\n  }\n\n  /* ==============================================================================================\n  *  INTERNAL FUNCTIONALITY METHODS\n  */\n\n  /**\n   * Handles mouse over event for menu item.\n   * @private\n   * @param {SvgElement} targetOverlay - The overlay of the item being hovered.\n   */\n  _mouseOverItem(targetOverlay) {\n    const _this = this;\n\n    let idx = _this.svgEls.menuItemOverlays.findIndex(overlay => overlay === targetOverlay);\n\n    if (idx !== -1) {\n      let targetPanel = _this.svgEls.menuItemPanels[idx];\n      let targetTextbox = _this.svgEls.menuItemTextboxes[idx];\n\n      targetPanel.setAttribute(\"fill\", _this.o.selectedItemBackgroundColor);\n      targetTextbox.setAttribute(\"fill\", _this.o.selectedItemFontColor);\n    }\n  }\n\n  /**\n   * Handles mouse leave event for menu item.\n   * @private\n   * @param {SvgElement} targetOverlay - The overlay of the target item.\n   */\n  _mouseLeaveItem(targetOverlay) {\n    const _this = this;\n    \n    let idx = _this.svgEls.menuItemOverlays.findIndex(overlay => overlay === targetOverlay);\n\n    if (idx !== -1) {\n      let targetPanel = _this.svgEls.menuItemPanels[idx];\n      let targetTextbox = _this.svgEls.menuItemTextboxes[idx];\n\n      targetPanel.setAttribute(\"fill\", \"transparent\");\n      targetTextbox.setAttribute(\"fill\", _this.o.fontColor);      \n    }\n  }\n\n  /**\n   * Adds svg elements representing a menu item.\n   * @private\n   */\n  _addSvgMenuItem() {\n    const _this = this;\n\n    let newItemText = document.createElementNS(this.SVG_NS, \"text\");\n    let newItemPanel = document.createElementNS(this.SVG_NS, \"rect\");\n    let newItemOverlay = document.createElementNS(this.SVG_NS, \"rect\");\n    \n    this.svgEls.menuItemTextboxes.push(newItemText);\n    this.svgEls.menuItemPanels.push(newItemPanel);\n    this.svgEls.menuItemOverlays.push(newItemOverlay);\n\n    this.svgEls.menuBodyCanvas.appendChild(newItemPanel);\n    this.svgEls.menuBodyCanvas.appendChild(newItemText);\n    this.svgEls.menuBodyCanvas.appendChild(newItemOverlay);\n\n    newItemOverlay.addEventListener(\"mouseenter\", (ev) => { _this.handlers.mouseOverItem(ev); });\n  }\n\n  /**\n   * Removes svg elements representing a menu item.\n   * @private\n   */\n  _removeSvgMenuItem() {\n    let targetItemTexbox = this.svgEls.menuItemTextboxes.pop();\n    let targetItemPanel = this.svgEls.menuItemPanels.pop();\n    let targetItemOverlay = this.svgEls.menuItemPanels.pop();\n\n    this.svgEls.menuBodyCanvas.removeChild(targetItemTexbox);\n    this.svgEls.menuBodyCanvas.removeChild(targetItemPanel);\n    this.svgEls.menuBodyCanvas.removeChild(targetItemOverlay);\n\n    targetItemTexbox = null;\n    targetItemPanel = null;\n    targetItemOverlay = null;\n  }\n\n  /**\n   * Calculate the height of each menu item.\n   * @private\n   * @returns {number} - Height in px.\n   */\n  _calcMenuItemDims() {\n    let maxHeight = 0;\n    let maxWidth = 0;\n    \n    this.svgEls.menuItemTextboxes.forEach(item => {\n      let bbox = item.getBoundingClientRect();\n      maxHeight = maxHeight > bbox.height ? maxHeight : bbox.height;\n      maxWidth  = maxWidth > bbox.width ? maxWidth : bbox.width;\n    });\n\n    maxWidth = Math.max(maxWidth, this._getWidth());\n\n    // add some extra padding\n    maxHeight += this.o.menuItemVerticalPadding;\n    maxWidth += this.o.menuItemHorizontalPadding;\n\n    return { width: maxWidth, height: maxHeight };\n  }\n\n  /**\n   * Marks a menu element as selected.\n   * @private\n   * @param {SvgElement} targetOverlay \n   */\n  _selectItem(targetOverlay) {\n    const _this = this;\n\n    let idx = _this.svgEls.menuItemOverlays.findIndex(overlay => overlay === targetOverlay);\n\n    if (idx !== -1) {\n      _this.setState({ selectedItemIdx: idx });\n    }\n  }\n\n}\n\nexport default Dropmenu;\n\n\n// WEBPACK FOOTER //\n// ./src/ui/dropmenu.js","import Widget from \"ui/core/widget\";\nimport Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\n\n/**\n * Class representing a Multislider widget.\n * @class\n * @implements {Widget}\n */\nclass Multislider extends Widget {\n\n  /**\n   * @constructor\n   * @param {object} container - DOM container for the widget.\n   * @param {object} [o] - Options.\n   * @param {number} [o.numSliders=10] - Number of sliders.\n   * @param {number} [o.minVal=0] - Minimum slider value.\n   * @param {number} [o.maxVal=127] - Maximum slider value.\n   * @param {array<string>} [o.sliderColors=[\"#000\"]] - Slider colors, specified as an array of color values.\n   *                                                    e.g. to get a black-white-black-white zebra pattern, specify\n   *                                                    ['black', 'white']\n   * @param {string} [o.backgroundColor=\"#fff\"] - Background color.\n   */\n  constructor(container, o) {\n    super(container, o);\n    return this;\n  }\n\n  /* ===========================================================================\n  *  INITIALIZATION METHODS\n  */\n\n  /**\n   * Initialize the options\n   * @override\n   * @protected\n   */\n  _initOptions(o) {\n    // set the defaults\n    this.o = {\n      numSliders: 10,\n      minVal: 0,\n      maxVal: 127,\n      sliderColors: [\"#f40\", \"#f50\"],\n      backgroundColor: \"#fff\",\n      mouseSensitivity: 1.2\n    };\n\n    // override defaults with provided options\n    super._initOptions(o);\n  }\n\n  /**\n   * Initialize state constraints\n   * @override\n   * @protected\n   */\n  _initStateConstraints() {\n    const _this = this;\n\n    this.stateConstraints = new ConstraintSpec({\n      sliderVals: [new Constraint({ \n        min: _this.o.minVal, \n        max: _this.o.maxVal,\n        transform: (num) => num.toFixed(0) \n      })]\n    });\n  }\n\n  /**\n   * Initialize state\n   * @override\n   * @protected\n   */\n  _initState() {\n    this.state = {\n      sliderVals: []\n    };\n  }\n\n  /**\n   * Initialize the svg elements\n   * @override\n   * @protected\n   */\n  _initSvgEls() {\n    const _this = this;\n\n    this.svgEls = {\n      panel: document.createElementNS(this.SVG_NS, \"rect\"),\n      sliders: [],\n      sliderPanels: []\n    };\n\n    this._appendSvgEls();\n    this._update();\n  }\n\n  /**\n   * Initialize mouse and touch event handlers\n   * @override\n   * @protected\n   */\n  _initHandlers() {\n    const _this = this;\n\n    this.handlers = {\n      touch: function touch(ev) {\n        ev.preventDefault();\n\n        let y = _this._getHeight() - _this._getRelativeY(ev.clientY);\n\n        _this._setSliderVal(ev.target, y);\n\n        for (let i = 0; i < _this.svgEls.sliderPanels.length; ++i) {\n          _this.svgEls.sliderPanels[i].addEventListener(\"mousemove\", _this.handlers.move);\n          _this.svgEls.sliderPanels[i].addEventListener(\"touchmove\", _this.handlers.move);\n\n        }\n\n        document.addEventListener(\"mouseup\", _this.handlers.release);\n        document.addEventListener(\"touchend\", _this.handlers.release);\n      },\n\n      move: function move(ev) {\n        ev.preventDefault();\n              \n        let y = _this._getHeight() - _this._getRelativeY(ev.clientY);\n        _this._setSliderVal(ev.target, y);\n      },\n\n      release: function release(ev) {\n        ev.preventDefault();\n\n        for (let i = 0; i < _this.svgEls.sliderPanels.length; ++i) {\n          _this.svgEls.sliderPanels[i].removeEventListener(\"mousemove\", _this.handlers.move);\n          _this.svgEls.sliderPanels[i].removeEventListener(\"touchmove\", _this.handlers.move);\n        }\n      }\n    };\n\n    for (let i = 0; i < this.svgEls.sliderPanels.length; ++i) {\n      this.svgEls.sliderPanels[i].addEventListener(\"mousedown\", this.handlers.touch);\n      this.svgEls.sliderPanels[i].addEventListener(\"touchstart\", this.handlers.touch);\n    }\n  }\n\n  /**\n   * Update (redraw) component based on state.\n   * @override\n   * @protected\n   */\n  _update() {\n    const _this = this;\n\n    _this._updateEls();\n  \n    for (let i = 0; i < this.o.numSliders; ++i) {\n      let sliderPos = _this._calcSliderPos(i);\n\n      this.svgEls.sliders[i].setAttribute(\"x\", sliderPos.x);\n      this.svgEls.sliders[i].setAttribute(\"y\", sliderPos.y);\n      this.svgEls.sliders[i].setAttribute(\"width\", _this._calcSliderWidth());\n      this.svgEls.sliders[i].setAttribute(\"height\", _this._calcSliderHeight(i));\n      this.svgEls.sliders[i].setAttribute(\"fill\", this.o.sliderColors[i % this.o.sliderColors.length]);\n\n      this.svgEls.sliderPanels[i].setAttribute(\"x\", sliderPos.x);\n      this.svgEls.sliderPanels[i].setAttribute(\"y\", 0);\n      this.svgEls.sliderPanels[i].setAttribute(\"width\", _this._calcSliderWidth());\n      this.svgEls.sliderPanels[i].setAttribute(\"height\", _this._getHeight());\n      this.svgEls.sliderPanels[i].setAttribute(\"fill\", \"transparent\");\n    }\n\n    // set background panel color\n    this.svgEls.panel.setAttribute(\"x\", 0);\n    this.svgEls.panel.setAttribute(\"y\", 0);\n    this.svgEls.panel.setAttribute(\"width\", _this._getWidth());\n    this.svgEls.panel.setAttribute(\"height\", _this._getHeight());\n    this.svgEls.panel.setAttribute(\"fill\", this.o.backgroundColor);\n  }\n\n  /**\n   * Updates the SVG elements and state containers. \n   * Adds or removes a number of SVG elements and state containers to match the current number of sliders.\n   * @private\n   */\n  _updateEls() {\n    let numSliders = this.o.numSliders;\n\n    // add SVG elements representing sliders to match current number of sliders\n    for (let i = this.state.sliderVals.length; i < numSliders; ++i) {\n      this.state.sliderVals.push(this.o.minVal);\n      this._addSvgSlider();\n    }\n\n    // remove SVG elements representing sliders to match current number of sliders\n    for (let i = this.state.sliderVals.length; i > numSliders; --i) {\n      this.state.sliderVals.pop();\n      this._removeSvgSlider();\n    }\n  }\n\n  /* ===========================================================================\n  *  PUBLIC API\n  */\n\n  /**\n   * Get public representation of the state.\n   * @abstract\n   * @public\n   * @returns {array} - An array of slider values.\n   */\n  getVal() {\n    return this.getState().sliderVals;\n  }\n\n  /**\n   * Set the current state in a format specific to each widget.\n   * Same as setVal(), but will not cause an observer callback trigger.\n   * @abstract @public\n   * @param {array} newSliderVals - An array representing the new slider values\n   */\n  setInternalVal(newSliderVals) {\n    let newState = {\n      sliderVals: newSliderVals\n    };\n    this.setInternalState(newState);\n  }\n\n  /**\n   * Set the current state in a format specific to each widget.\n   * Same as setInternalVal(), but will cause an observer callback trigger.\n   * @abstract @public\n   * @param {array} newSliderVals - An array representing the new slider values\n   */\n  setVal(newSliderVals) {\n    let newState = {\n      sliderVals: newSliderVals\n    };\n    this.setState(newState);\n  }\n\n  /* ===========================================================================\n  *  HELPER METHODS\n  */\n\n  /**\n   * Adds an svg element representing a slider.\n   * @private \n   */\n  _addSvgSlider() {\n    let _this = this;\n\n    let newSlider = document.createElementNS(this.SVG_NS, \"rect\");\n    let newSliderPanel = document.createElementNS(this.SVG_NS, \"rect\");\n    this.svg.appendChild(newSlider);\n    this.svg.appendChild(newSliderPanel);\n    this.svgEls.sliders.push(newSlider);\n    this.svgEls.sliderPanels.push(newSliderPanel);\n\n    newSliderPanel.addEventListener(\"mousedown\", _this.handlers.touch);\n    newSliderPanel.addEventListener(\"touchstart\", _this.handlers.touch);\n  }\n\n  /**\n   * Remove an SVG slider element.\n   * @private \n   */\n  _removeSvgSlider() {\n    let targetSlider = this.svgEls.sliders.pop();\n    let targetSliderPanel = this.svgEls.sliderPanels.pop();\n    this.svg.removeChild(targetSliderPanel);\n    this.svg.removeChild(targetSlider);\n    targetSlider = null;\n    targetSliderPanel = null;\n  }\n\n  /**\n   * Calculate the width of each slider.\n   * Each slider's width is width of multislider / number of sliders.\n   * @private\n   * @returns {number} - Width of each slider in px. \n   */\n  _calcSliderWidth() {\n    return this._getWidth() / this.o.numSliders;\n  }\n\n  /**\n   * Calculate the position for a given slider.\n   * @private\n   * @param {number} idx - Index of the slider (left to right).\n   * @returns {object} - Object representing the {x, y} position.\n   */\n  _calcSliderPos(idx) {\n    const _this = this;\n\n    return {\n      x: _this._calcSliderWidth() * idx, \n      y: _this._getHeight() - _this._calcSliderHeight(idx)\n    };\n  }\n\n  /**\n   * Calculate the slider height.\n   * @private\n   * @param {number} idx - Index of the slider.\n   * @returns {number} - Height of the slider in px.\n   */\n  _calcSliderHeight(idx) {\n    return (this.state.sliderVals[idx] / (this.o.maxVal - this.o.minVal)) * this._getHeight(); \n  }\n\n  /**\n   * Set value for a slider based on y position of a click event.\n   * @param {object} targetSliderPanel - The panel that registered the event. \n   * @param {number} y - Y-position of the event. \n   */\n  _setSliderVal(targetSliderPanel, y) {\n    const _this = this;\n    \n    let targetIdx = this.svgEls.sliderPanels.findIndex(sliderPanel => sliderPanel === targetSliderPanel);\n    let newVal = (y / (this._getHeight())) * (this.o.maxVal - this.o.minVal) + this.o.minVal;\n\n    let newState = {\n      sliderVals: _this.state.sliderVals.map((val, idx) => {\n        return (idx === targetIdx) ? newVal : val;\n      })\n    };\n\n    this.setState(newState);\n  }\n}\n\nexport default Multislider;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/multislider.js","import Widget from \"ui/core/widget\";\nimport Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\n\n/**\n * Class representing a Volume Meter widget.\n * @class\n * @implements {Widget}\n */\nclass Meter extends Widget {\n\n  /**\n   * @constructor\n   * @param {object} container - DOM container for the widget.\n   * @param {AudioContext} audioContext - The audio context to be used.\n   * @param {object} [o] - Options object.\n   * @param {string} [o.backgroundColor=\"#282828\"] - The background color. \n   * @param {number} [o.initAmplitude=0] - The initial amplitude to be displayed (range of 0. - 1.)\n   */\n  constructor(container, audioCtx, o) {\n    o = o || {};\n\n    super(container, o);\n\n    // remove the svg since we are using canvas here\n    this.container.removeChild(this.svg);\n    this.svg = null;\n\n    this._initCanvasElements();\n    this._initAudioModules(audioCtx);\n    this._initOptions(o);\n\n    return this;\n  }\n\n  /* ===========================================================================\n  *  INITIALIZATION METHODS\n  */\n\n  /**\n   * Initialize the options.\n   * @override\n   * @private\n   */\n  _initOptions(o) {\n    // set the defaults\n    this.o = {\n      backgroundColor: \"#282828\",\n      initAmplitude: 0\n    };\n\n    // override defaults with provided options\n    super._initOptions(o);\n  }\n\n  /**\n   * Initialize the audio modules necessary to analyse the volume.\n   * @param {AudioContext} audioCtx - The audio context to use.\n   */\n  _initAudioModules(audioCtx) {\n    const _this = this;\n\n    this.audioCtx = audioCtx;\n    \n    // keep track of audio values\n    this.amplitude = 0;\n    this.prevAmplitude = 0;\n    this.peak = 0;\n    this.peakSetTime = audioCtx.currentTime;\n    \n    // create the script processor\n    // TODO: ScriptProcessorNode is soon to be derpecated and replaced by AudioWorker\n    this.scriptProcessor = this.audioCtx.createScriptProcessor(512, 1, 1);\n    this.scriptProcessor.connect(this.audioCtx.destination);\n    this.scriptProcessor.onaudioprocess = function(e) {\n      _this.amplitude = _this._calcAmplitude(e.inputBuffer.getChannelData(0));\n      _this.peak = _this._calcPeak();\n    };\n\n    this.input = this.scriptProcessor;\n  }\n\n  /**\n   * Initialize the canvas elements.\n   * @private\n   */\n  _initCanvasElements() {\n    if (this.canvas === undefined) {\n      this.canvas = document.createElement(\"canvas\");\n      this.container.appendChild(this.canvas);\n      this.ctx = this.canvas.getContext(\"2d\");\n    }\n  \n    let containerDims = this.container.getBoundingClientRect();\n    \n    this.canvas.setAttribute(\"width\", containerDims.width);\n    this.canvas.setAttribute(\"height\", containerDims.height);\n\n    this.ledGradient = this.ctx.createLinearGradient(0, this.canvas.height, 0, 0);\n    this.ledGradient.addColorStop(0, 'green');\n    this.ledGradient.addColorStop(0.6, 'lightgreen');\n    this.ledGradient.addColorStop(0.8, 'yellow');\n    this.ledGradient.addColorStop(1, 'red');\n\n    this._update();\n  }\n\n  /**\n   * Update (redraw) component based on state.\n   * @override\n   * @private\n   */\n  _update() {\n    const _this = this;\n\n    let containerDims = this.container.getBoundingClientRect();\n    let width = containerDims.width;\n    let height = containerDims.height;\n\n    redraw();\n\n    function redraw() {\n      let ledHeight = height * _this.amplitude;   \n      let peakYPos = height * _this.peak;\n\n      _this.ctx.clearRect(0, 0, width, height);\n      \n      // draw the background\n      _this.ctx.fillStyle = _this.o.backgroundColor;\n      _this.ctx.fillRect(0, 0, width, height);\n\n      // draw the led\n      _this.ctx.fillStyle = _this.ledGradient;\n      _this.ctx.fillRect(0, height - ledHeight, width, ledHeight);\n\n      // draw the peak\n      _this.ctx.fillStyle = _this.ledGradient;\n      _this.ctx.fillRect(0, peakYPos, width, 10);\n      \n      window.requestAnimationFrame(redraw);\n    } \n  }\n\n  /* ===========================================================================\n  *  PUBLIC API\n  */\n\n  /**\n   * Recieve audio from a source.\n   * @param {AudioNode} audioSource - The audio source to connect.\n   */\n  receiveAudioFrom(audioSource) {\n    audioSource.connect(this.scriptProcessor);\n  }\n\n  /* ===========================================================================\n  *  HELPER METHODS\n  */\n\n  /**\n   * Calculate the amplitude for a given audio buffer\n   * @param {Float32Array} buffer\n   */\n  _calcAmplitude(buffer) {\n    let sum = 0;\n    \n    for (let i = 0; i < buffer.length; ++i) {\n      sum += buffer[i] * buffer[i];\n    }\n\n    return Math.sqrt(sum / buffer.length); \n  }\n\n  /**\n   * Calculate the current peak\n   */\n  _calcPeak() {\n\n    // calculate the peak position\n    // special cases - peak = -1 means peak expired and waiting for amplitude to rise\n    // peak = 0 means amplitude is rising, waiting for peak\n    if (this.amplitude < this.prevAmplitude) {\n      this.peak = this.prevAmplitude;\n      this.peakSetTime = this.audioCtx.currentTime;\n    } else if (this.amplitude > this.prevAmplitude) {\n      this.peak = 0;\n    }\n\n    // draw the peak for 2 seconds, then remove it\n    if (this.audioCtx.currentTime - this.peakSetTime > 2 && this.peak !== 0) {\n      this.peak = -1;\n    }\n\n    this.prevAmplitude = this.amplitude;\n  }\n}\n\nexport default Meter;\n\n\n// WEBPACK FOOTER //\n// ./src/ui/meter.js","import WidgetDial from \"ui/dial\";\nimport EnvelopeGraph from \"ui/graph\";\nimport Keyboard from \"ui/keyboard\";\nimport Multislider from \"ui/multislider\";\nimport Dropmenu from \"ui/dropmenu\";\nimport Slider from \"ui/slider\";\nimport Meter from \"ui/meter\";\nimport Numberbox from \"ui/numberbox\";\n\n// Add toggles to open detail views\nlet detailsToggles = document.getElementsByClassName(\"details-toggle\");\nfor (let i = 0; i < detailsToggles.length; i++) {\n    \n    let toggle = detailsToggles[i];\n    \n    let detailsContainer = toggle.parentNode.getElementsByClassName(\"details\")[0];\n\n    toggle.addEventListener(\"mouseup\", toggleDetails);\n    toggle.addEventListener(\"touchend\", toggleDetails);\n\n    function toggleDetails() {\n        detailsContainer.classList.toggle(\"opened\");\n    }\n}\n\n/** Dial */\nlet dialContainer = document.getElementById(\"dial\");\nlet dialDisplay = dialContainer.nextElementSibling;\nlet dial = new WidgetDial(dialContainer);\ndial.addObserver((state) => {\n    dialDisplay.innerHTML = state;\n});\ndial.setVal(300);\n\n/** Graph */\nlet envelopeGraphContainer = document.getElementById(\"graph\");\nlet envelopeGraphDisplay = document.getElementById(\"graph-display\");\nlet envelopeGraph = new EnvelopeGraph(envelopeGraphContainer);\nenvelopeGraph.addObserver(function (state) {\n    envelopeGraphDisplay.innerHTML = state.map((xyPair) => \" [\" + xyPair[0].toFixed(1) + \", \" + xyPair[1].toFixed(1) + \"]\");\n});\nenvelopeGraph.setVal([[0.0, 0.0], [5.3, 65.9], [10.7, 37.3], [16.5, 26.5], [26.0, 37.9], [35.8, 17.2],\n[45.3, 69.2], [49.8, 53.9], [53.3, 27.2], [61.3, 15.9], [69.3, 25.9], [74.7, 39.9], [79.5, 47.9],\n[83.2, 33.9], [86.2, 25.9], [91.0, 19.2], [92.0, 28.5], [93.0, 44.5], [97.3, 81.9], [100.0, 0.0]]\n);\n\n/** Keyboard */\nlet keyboardContainer = document.getElementById(\"keyboard\");\nlet keyboardDisplay = document.getElementById(\"keyboard-display\");\nkeyboardContainer.style.backgroundColor = \"red\";\nlet keyboard = new Keyboard(keyboardContainer, {\n    bottomNote: 36,\n    topNote: 83\n});\nkeyboard.addObserver(function (note) {\n    keyboardDisplay.innerHTML = \"Pitch: \" + note.pitch + \" Vel: \" + note.vel + \"<br>\" +\n        \"Active Notes: \" + keyboard.getActiveNotes().map(an => \"[ \" + an[0] + \", \" + an[1] + \" ]\");\n});\nkeyboard.setVal({ pitch: 60, vel: 100 });\nkeyboard.setVal({ pitch: 64, vel: 100 });\nkeyboard.setVal({ pitch: 67, vel: 100 });\n\n\n/** Multislider */\nlet multisliderContainer = document.getElementById(\"multislider\");\nlet multisliderDisplay = document.getElementById(\"multislider-display\");\nlet multislider = new Multislider(multisliderContainer, {});\nmultislider.addObserver(function (sliderVals) {\n    multisliderDisplay.innerHTML = sliderVals.map(val => \" \" + val);\n});\nmultislider.setState({ sliderVals: [10, 50, 97, 81, 119, 81, 26, 114, 74, 47] });\n\n/** Slider */\nlet sliderContainer = document.getElementById(\"slider\");\nlet sliderDisplay = document.getElementById(\"slider-display\");\nlet slider = new Slider(sliderContainer, {});\nslider.addObserver(function (sliderVal) {\n    sliderDisplay.innerHTML = sliderVal;\n});\nslider.setVal(30);\n\n/** Meter */\nlet meterContainer = document.getElementById(\"meter\");\nlet meterDisplay = document.getElementById(\"meter-display\");\n\nlet audioCtx = new AudioContext();\n\nlet meter = new Meter(meterContainer, audioCtx, {});\n\nlet osc = audioCtx.createOscillator();\nlet lfo1 = audioCtx.createOscillator();\nlet lfo2 = audioCtx.createOscillator();\nlet amp1 = audioCtx.createGain();\nlet amp2 = audioCtx.createGain();\nlet amp3 = audioCtx.createGain();\n\nlfo1.frequency.value = 0.5;\nlfo2.frequency.value = 0.1;\namp3.gain.value = 0.5;\nosc.frequency.value = 220;\n\nlfo1.connect(amp1.gain);\nlfo2.connect(amp1);\namp1.connect(amp2.gain);\nosc.connect(amp2);\namp2.connect(amp3);\nmeter.receiveAudioFrom(amp3);\n\nlfo1.start();\nlfo2.start();\nosc.start();\n\n/** Dropmenu */\nlet dropmenuContainer = document.getElementById(\"dropmenu\");\nlet dropmenuDisplay = document.getElementById(\"dropmenu-display\");\nlet dropmenu = new Dropmenu(dropmenuContainer, {});\ndropmenu.setMenuItems([\"Zero\", \"One\", \"Two\", \"Three\", \"Four\", \"Five\"]);\ndropmenu.addObserver(function (selectedItem) {\n    dropmenuDisplay.innerHTML = \"Current selection: \" + selectedItem;\n});\n\n/** Numberbox */\nlet numberboxContainer = document.getElementById(\"numberbox\");\nlet numberboxDisplay = document.getElementById(\"numberbox-display\");\nlet numberbox = new Numberbox(numberboxContainer, {\n    precision: 2\n});\nnumberbox.addObserver(function (val) {\n    numberboxDisplay.innerHTML = val.toFixed(2);\n});\n\n\n// WEBPACK FOOTER //\n// ./doc/ui/ui-doc.js"],"sourceRoot":""}