{"version":3,"sources":["webpack:///webpack/bootstrap fee6aea20ea5aa7ef118","webpack:///./src/util/constraint.js","webpack:///./src/util/constraint-def.js","webpack:///./src/ui/core/widget.js","webpack:///./src/util/util-math.js","webpack:///./src/ui/core/widget-mixin-svgns.js","webpack:///./src/ui/core/widget-mixin-state.js","webpack:///./src/ui/core/widget-mixin-options.js","webpack:///./src/ui/core/widget-mixin-observer.js","webpack:///./src/ui/dial.js","webpack:///./src/ui/slider.js","webpack:///./src/ui/graph.js","webpack:///./src/ui/numberbox.js","webpack:///./src/ui/keyboard.js","webpack:///./src/ui/dropmenu.js","webpack:///./src/ui/multislider.js","webpack:///./src/ui/meter.js","webpack:///./doc/ui/ui-doc.js"],"names":["Constraint","spec","min","max","enum","transform","ConstraintSpec","specDefObj","constraintMap","_parseMap","targetObj","_this","forEach","_constrainBranch","keyBranch","target","constraint","key","undefined","Math","Array","find","c","cMap","push","Object","parentBranch","map","x","keys","keyIdx","newKeyBranch","curKey","length","arrFlag","i","keyBranchSlice","slice","j","_applyConstraint","Widget","container","o","document","querySelector","Element","Error","svg","createElementNS","SVG_NS","appendChild","setAttribute","getBoundingClientRect","width","height","svgEls","handlers","state","stateConstraints","observers","_initOptions","_initStateConstraints","_initState","_initSvgEls","_initHandlers","values","appendSvgEls","svgEl","child","arrEl","newVal","newState","_getLeft","y","_getTop","top","left","assign","prototype","MathUtil","getPrecision","val","decStr","split","round","precision","factor","pow","quantize","q","qVal","abs","WidgetStateMixin","getState","setInternalState","isChanged","hasOwnProperty","constrain","_update","setState","_notifyObservers","WidgetOptionsMixin","getOptions","setOptions","WidgetObserverMixin","addObserver","newObserver","observer","removeObserver","targetObserver","idx","splice","addListener","newListener","removeListener","targetListener","getVal","Dial","stepPrecision","step","minVal","maxVal","needleColor","activeColor","arcThicknessAspect","mouseSensitivity","num","bgArc","activeArc","needle","_calcSvgArcPath","_calcNeedleCenter","_calcDialRadius","PI","_calcArcStrokeWidth","_calcNeedleEnd","_calcNeedleWidth","_appendSvgEls","y0","yD","touch","ev","clientY","addEventListener","move","release","preventDefault","_calcMovePrecision","removeEventListener","_calcNeedleAngle","radius","_getWidth","_getHeight","trunc","sin","cos","cx","cy","r","startAngle","endAngle","x1","y1","x2","y2","largeArc","sweep","join","Slider","sliderBodyColor","sliderHandleColor","dims","offsetBottom","offsetTop","bodyWidth","handleWidth","handleHeight","body","overlay","handle","touchBody","stopPropagation","_calcTouchVal","touchHandle","moveHandle","releaseHandle","sliderBodyPos","_calcSliderBodyPos","_calcSliderBodyHeight","sliderHandlePoints","_calcSliderHandlePoints","sliderBodyHeight","x0","valRange","bodyY","_getRelativeY","touchVal","Graph","vertices","vtx","vertexArray","xyPair","newVtx","minXVal","minYVal","isXFixed","isYFixed","xAnchor","yAnchor","maxXVal","maxYVal","newVertices","sort","a","b","addVertex","maxNumVertices","quantizeX","quantizeY","xDecimalPrecision","yDecimalPrecision","isEditable","vertexColor","fixedVertexColor","lineColor","backgroundColor","vertexRadius","lineWidth","panel","lines","targetVtx","targetLine","vtxPos0","dx","dy","touchPanel","xPos","clientX","yPos","vertexState","_calcVertexState","touchVertex","moveVertex","deleteVertex","touchLine","moveLine","endMoveLine","dPos","_moveLine","_deleteVertex","endMoveVertex","_moveVertex","line","idxSortMap","el","_addSvgVertex","_removeSvgVertex","stateVtx","svgVtx","pos","_calcVertexPos","vtxFill","prevVtx","prevPos","removeChild","svgLine","vtxIdx","findIndex","isRemovable","newVertex","_addSvgLine","newLine","vertex","pop","_removeSvgLine","lineIdx","vtx1","vtx2","vtx1curPos","parseInt","getAttribute","vtx2curPos","boundaryBL","boundaryTR","vtx1newPos","vtx2newPos","newPos","vtxState","normalizedWidth","normalizedHeight","vertexPos","Numberbox","toFixed","quantizeInterval","fontColor","fontSize","fontFamily","textSelectBackgroundColor","appendString","mouseFineSensitivity","valConstraintDef","textUnderlay","text","cursor","style","charNum","charBRect","power","prevTouchTime","Date","now","_getSelectedCharNumber","_getPowerOfSelectedDigit","kbdEdit","getExtentOfChar","editStr","toString","textContent","_editText","panelWidth","panelHeight","textWidth","textHeight","textBRect","svgBRect","makeEdit","finishEditing","str","prevTime","checkDoubleTap","showCursorTimeoutID","hideCursorTimeoutID","positionCursor","deletePrev","deleteNext","moveLeft","moveRight","increment","decrement","insertMinus","insertChar","console","log","_editSelectAll","substring","substr","parseFloat","clearTimeout","charEndPos","getEndPositionOfChar","showCursor","window","setTimeout","hideCursor","setVal","numChars","getNumberOfChars","svgX","svgY","svgPoint","createSVGPoint","getCharNumAtPosition","Keyboard","bottomNote","_isWhiteKey","topNote","lastNoteEvent","activeNotes","note","pitch","vel","newNote","isVelToggled","_getNewStateFromNewNote","keyBorderColor","blackKeyColor","whiteKeyColor","blackKeyActiveColor","whiteKeyActiveColor","blackKeyHeightAspect","blackKeyWidthAspect","maxPolyphony","orientation","numKeys","_getNumKeys","_addSvgKey","_removeSvgKey","touchVel","ceil","_getKeyboardHeight","_touchKey","targetKey","fill","stroke","blackKeys","notes","activeNote","_updateSvgEls","whiteKeyIdx","_getPitchForKeyIdx","attr","_getWhiteKeyWidth","_setKeyAttributes","noteIdx","newKey","whiteKeyCount","curNote","_getKeyboardWidth","_getNumWhiteKeys","Dropmenu","selectedItemIdx","menuItems","itemIdx","item","menuItem","menuItemFontSize","menuItemFontFamily","menuItemVerticalPadding","menuItemHorizontalPadding","selectedItemBackgroundColor","selectedItemFontColor","hasFocus","menuTogglePanel","menuToggleText","menuToggleOverlay","menuBodyCanvasContainer","createElement","menuBodyCanvas","menuBodyPanel","menuItemPanels","menuItemTextboxes","menuItemOverlays","position","focus","blur","mouseOverItem","targetOverlay","_mouseOverItem","mouseLeaveItem","select","_mouseLeaveItem","hoverOut","_selectItem","_updateEls","display","menuItemDims","_calcMenuItemDims","menuDims","curPanel","curTextbox","curOverlay","_addSvgMenuItem","_removeSvgMenuItem","targetPanel","targetTextbox","newItemText","newItemPanel","newItemOverlay","targetItemTexbox","targetItemPanel","targetItemOverlay","maxHeight","maxWidth","bbox","Multislider","numSliders","sliderColors","sliderVals","sliders","sliderPanels","_setSliderVal","sliderPos","_calcSliderPos","_calcSliderWidth","_calcSliderHeight","_addSvgSlider","_removeSvgSlider","newSliderVals","newSlider","newSliderPanel","targetSlider","targetSliderPanel","targetIdx","sliderPanel","Meter","audioCtx","_initCanvasElements","_initAudioModules","initAmplitude","amplitude","prevAmplitude","peak","peakSetTime","currentTime","scriptProcessor","createScriptProcessor","connect","destination","onaudioprocess","e","_calcAmplitude","inputBuffer","getChannelData","_calcPeak","input","canvas","ctx","getContext","containerDims","ledGradient","createLinearGradient","addColorStop","redraw","ledHeight","peakYPos","clearRect","fillStyle","fillRect","requestAnimationFrame","audioSource","buffer","sum","sqrt","detailsToggles","getElementsByClassName","toggle","detailsContainer","parentNode","toggleDetails","classList","dialContainer","getElementById","dialDisplay","nextElementSibling","dial","innerHTML","envelopeGraphContainer","envelopeGraphDisplay","envelopeGraph","keyboardContainer","keyboardDisplay","keyboard","getActiveNotes","an","multisliderContainer","multisliderDisplay","multislider","sliderContainer","sliderDisplay","slider","sliderVal","meterContainer","meterDisplay","AudioContext","meter","osc","createOscillator","lfo1","lfo2","amp1","createGain","amp2","amp3","frequency","value","gain","receiveAudioFrom","start","dropmenuContainer","dropmenuDisplay","dropmenu","setMenuItems","selectedItem","numberboxContainer","numberboxDisplay","numberbox"],"mappings":"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","file":"/doc/ui/ui-doc-bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 46);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap fee6aea20ea5aa7ef118","/**\n * @class\n * Constraint object represents constraints on a value.\n * Instances of Constraint are used as leaves on a ConstraintSpec definition.\n * A ConstraintSpec useses Constraints to apply a constraint to leaves of an\n * arbitrarily nested object, whose leaves represent values that may be constrained.\n */\nclass Constraint {\n\n  /**\n   * @constructor\n   * @param {object} [spec] - Spec specifying the constraints.\n   * @param {number} [spec.min] - Minimum value.\n   * @param {number} [spec.max] - Maximum value.\n   * @param {array} [spec.enum] - Array of possible enumerable values.\n   * @param {function} [spec.transform] - A transformation function to apply to the value.\n   */\n  constructor(spec) {\n    spec = spec || {};\n\n    this.min = spec.min;\n    this.max = spec.max;\n    this.enum = spec.enum;\n    this.transform = spec.transform;\n  }\n}\n\nexport default Constraint;\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/constraint.js","import Constraint from \"./constraint\";\n\n/**\n * ConstraintSpec is used to apply a constraining function to a state object of arbitrary nestedness,\n * whose leaves are values that need to be constrained (i.e. to min or max values).\n * In order for ConstraintSpec to work properly, it's constructor must be given an object that\n * exactly mirrors the nested structure of the object to be constrained, with the leaves\n * containing instances of the Constraint class. Additional requirements (i.e. how to deal with nested arrays)\n * are outlined below.\n * TODO: expand explanation\n *\n * @class\n */\nclass ConstraintSpec {\n\n  /**\n   * @constructor\n   * @param {object} specDefObj - The constraint spec definition object, which defines the nesting\n   *                              structure of the objects that need to be constrained. The leaves\n   *                              of this specDef object must be objects of type Constraint, which\n   *                              act as the constraint definitions for each leaf.\n   */\n  constructor(specDefObj) {\n    this.constraintMap = [[]];\n    this._parseMap(specDefObj, this.constraintMap[0], this.constraintMap);\n  }\n\n  /**\n   * Check a constraint map for constraint specs and apply them to obj.\n   * Note: will not mutate the original object. New value is returned.\n   * @public\n   * @param {object} targetObj - The state object to check\n   * @return {number | string | object | array} val - The constrained value.\n   */\n  constrain(targetObj) {\n    const _this = this;\n    _this.constraintMap.forEach(keyBranch => {\n      _this._constrainBranch(targetObj, keyBranch);\n    });\n  }\n\n  /**\n   * Apply a constraint.\n   * @private\n   * @param {object} target - The target object to constrain\n   * @param {Constraint} constraint - The constraint object to use.\n   * @param {symbol} key - The key to use to access the constraint.\n   * @return {number | string | object | array} val - The constrained value.\n   */\n  _applyConstraint(target, constraint, key) {\n    if (constraint.min !== undefined) {\n      target[key] = Math.max(target[key], constraint.min);\n    }\n    if (constraint.max !== undefined) {\n      target[key] = Math.min(target[key], constraint.max);\n    }\n    if (constraint.enum !== undefined && constraint.enum instanceof Array) {\n      target[key] = (constraint.enum.find(target[key]) !== undefined) ? target[key] : constraint.enum[0];\n    }\n    if (constraint.transform !== undefined && typeof constraint.transform === \"function\") {\n      target[key] = constraint.transform(target[key]);\n    }\n\n    return target;\n  }\n\n  /**\n   * Parse a constraint map\n   * @private\n   * @param {object} c - The map object currently being examined.\n   *                     At the top level, this would be the whole map.\n   *                     At the terminal level, this would be an instance of Constraint object.\n   * @param {array} keyBranch - An array of keys that will specify how to get to each Constraint.\n   *                            The last element in this array will be the constraint itself.\n   * @param {array} cMap - An mutable array of key branches.\n   */\n  _parseMap(c, keyBranch, cMap) {\n    const _this = this;\n\n    if (c instanceof Array) {\n      /* if c is an array, add \"_arr_\" to the current map, and examine the first element.\n       * all elements in an array are required to have identical structure, so examining\n       * the first one is enough.\n       */\n      keyBranch.push(\"_arr_\");\n      _this._parseMap(c[0], keyBranch, cMap);\n    } else if (c instanceof Object && !(c instanceof Constraint)) {\n      // keep a copy of the parent branch to create new branches from\n      let parentBranch = keyBranch.map(x=>x);\n\n      // create new branch for each key after the first key using the parentBranch clone\n      Object.keys(c).forEach((key, keyIdx) => {\n        if (keyIdx === 0) {\n          keyBranch.push(key);\n          _this._parseMap(c[key], keyBranch, cMap);\n        } else {\n          let newKeyBranch = parentBranch.map(x=>x);\n          cMap.push(newKeyBranch);\n          newKeyBranch.push(key);\n          _this._parseMap(c[key], newKeyBranch, cMap);\n        }\n      });\n    } else if (c instanceof Constraint) {\n\n      // this will be the last element in the branch - the Constraint object itself\n      keyBranch.push(c);\n    }\n  }\n\n  /**\n   * Apply constraints to one branch of the constraint map.\n   * @private\n   * @param {object} targetObj - The state object to apply the constraint to\n   * @param {object} defObj - The constraint definition object to use.\n   * @param {array} keyBranch - An array of keys representing a path to a constraint object.\n   */\n  _constrainBranch(targetObj, keyBranch) {\n    const _this = this;\n\n    let curKey;\n    let constraint = keyBranch[keyBranch.length - 1];\n    let arrFlag = false;\n\n    /* Drill into targetObj and defObj following keyBranch keys\n     * We go to length - 2, because the next-to-last element might be an\n     * array, and the last element is the Constraint object itself.\n     */\n    for (let i = 0; i < keyBranch.length - 2 && !arrFlag; ++i) {\n      curKey = keyBranch[i];\n\n      // if we encounter an array, drill into each corresponding arry element in targetObj\n      if (curKey === \"_arr_\") {\n        arrFlag = true;\n\n        let keyBranchSlice = keyBranch.slice(i + 1, keyBranch.length);\n\n        for (let j = 0; j < targetObj.length; ++j) {\n          _this._constrainBranch(targetObj[j], keyBranchSlice);\n        }\n      } else {\n        targetObj = targetObj[curKey];\n      }\n    }\n\n    // if arrFlag is set, we've encountered an array somewhere other than on the leaves\n    // in this case we don't need to operate on it\n    if (!arrFlag) {\n      // Apply the constraints\n      curKey = keyBranch[keyBranch.length - 2];\n\n      if (curKey === \"_arr_\") {\n        for (let i = 0; i < targetObj.length; ++i) {\n          _this._applyConstraint(targetObj, constraint, i);\n        }\n      } else {\n        _this._applyConstraint(targetObj, constraint, curKey);\n      }\n    }\n  }\n}\n\nexport default ConstraintSpec;\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/constraint-def.js","import WidgetSvgNsMixin from \"./widget-mixin-svgns\";\nimport WidgetStateMixin from \"./widget-mixin-state\";\nimport WidgetOptionsMixin from \"./widget-mixin-options\";\nimport WidgetObserverMixin from \"./widget-mixin-observer\";\n\n'use strict';\n\n/**\n * Abstract base class representing an SVG widget that can be placed inside a DOM container.\n * @class\n * @abstract\n */\nclass Widget {\n\n  /**\n   * @constructor\n   * @mixes WidgetSvgNsMixin\n   * @mixes WidgetStateMixin\n   * @mixes WidgetOptionsMixin\n   * @mixes WidgetObserverMixin\n   * @param {DOM element | string} container - DOM element that will contain the widget,\n   *                                           or string passed to querySelector to find\n   *                                           said DOM element.\n   * @param {object=} o - Options.\n   */\n  constructor(container, o) {\n    if (typeof container === \"string\") {\n      container = document.querySelector(container);\n    }\n\n    if (container === undefined || !(container instanceof Element)) {\n      throw new Error(\"widget requires a DOM element specifying its container as the first argument\");\n    }\n\n    this.container = container;\n\n    o = o || {};\n\n    this.svg = document.createElementNS(this.SVG_NS, \"svg\");\n    this.container.appendChild(this.svg);\n    this.svg.setAttribute(\"width\", this.container.getBoundingClientRect().width);\n    this.svg.setAttribute(\"height\", this.container.getBoundingClientRect().height);\n\n    /* Manifest of containers and namespaces */\n    this.o = {};                 // options namespace\n    this.svgEls = {};            // svg element namespace\n    this.handlers = {};          // mouse and touch event handler namespace\n    this.state = {};             // state namespace\n    this.stateConstraints = {};  // state constraints namespace\n    this.observers = [];         // observer callback container\n\n    this._initOptions(o);\n    this._initStateConstraints();\n    this._initState();\n    this._initSvgEls();\n    this._initHandlers();\n  }\n\n  /**\n   * Initialize the options\n   * @abstract\n   * @protected\n   */\n  _initOptions(o) {}\n\n  /**\n   * Initialize state constraints\n   * @abstract\n   * @protected\n   */\n  _initStateConstraints() {}\n\n  /**\n   * Initialize state\n   * @abstract\n   * @protected\n   */\n  _initState() {}\n\n  /**\n   * Initialize the svg elements.\n   * Each implementation of this method must end with calls to _appendSvgEls() and _update(),\n   * in that order, as shown in this template\n   * @abstract\n   * @protected\n   */\n  _initSvgEls() {}\n\n  /**\n   * Append the newly created svg elements to the svg container.\n   * This method should be called exctly once by each implementation of the _initSvgEls() method.\n   * @protected\n   */\n  _appendSvgEls() {\n    const _this = this;\n\n    Object.values(_this.svgEls).forEach(svgEl => {\n      appendSvgEls(svgEl);\n    });\n\n    function appendSvgEls(child) {\n      if (child instanceof Array) {\n        child.forEach(arrEl => appendSvgEls(arrEl));\n      } else {\n        _this.svg.appendChild(child);\n        child.setAttribute(\"shape-rendering\", \"geometricPrecision\");\n      }\n    }\n  }\n\n  /**\n   * Initialize mouse and touch event handlers\n   * @abstract\n   * @protected\n   */\n  _initHandlers() {}\n\n  /**\n   * Update (redraw) component based on state\n   * @abstract\n   * @protected\n   */\n  _update() {}\n\n  /* ===========================================================================\n  *  PUBLIC API\n  */\n\n  /**\n   * Get public representation of the state.\n   * @abstract\n   * @public\n   */\n  getVal() {}\n\n  /**\n   * Set the current state in a format specific to each widget.\n   * Same as setVal(), but will not cause an observer callback trigger.\n   * @abstract \n   * @public\n   */\n  setInternalVal(newVal) {}\n\n  /**\n   * Set the current state in a format specific to each widget.\n   * Same as setInternalVal(), but will cause an observer callback trigger.\n   * @abstract @public\n   */\n  setVal(newVal) {}\n\n  /**\n   * Get the current state.\n   * @abstract\n   * @public\n   * @returns {object} - Copy of this.state\n   */\n  getState() {}\n\n  /**\n   * Set the current state and redraw.\n   * @description If no new state argument is provided, will reassign old state, taking into account the stateConstraints.\n   * As opposed to setState(), setInternalState() does not trigger observer notification.\n   * Will use Widget.stateConstraints to constrain each state value to each constraints min, max, or enum\n   * @abstract\n   * @public\n   * @param {object} [newState] - The new state.\n   * @returns {boolean} A flag indicating whether the state has been changed.\n   */\n  setInternalState(newState) {}\n\n  /**\n   * Sets the current state and redraws.\n   * @description As opposed to setInternalState(), setState() will call the observer callback functions,\n   * so may lead to an infinate loop if an observer calls this method.\n   * @abstract\n   * @public\n   * @param {object} [newState] - The new state.\n   * @returns {boolean} A flag indicating whether the state has been changed.\n   */\n  setState(newState) {}\n  \n  /* ===========================================================================\n  *  HELPER METHODS\n  */\n\n  /** Helper method: get x relative to the container */\n  _getRelativeX(x) {\n    return x - this._getLeft();\n  }\n\n  /** Helper method: get y relative to the container */\n  _getRelativeY(y) {\n    return y - this._getTop();\n  }\n\n   /** Helper method: get the width of the svg container */\n   _getWidth() {\n     return this.svg.getBoundingClientRect().width;\n   }\n\n   /** Helper method: get the height of the svg container */\n   _getHeight() {\n     return this.svg.getBoundingClientRect().height;\n   }\n\n   /** Helper method: get the top edge position of the svg container */\n   _getTop() {\n     return this.svg.getBoundingClientRect().top;\n   }\n\n   /** Helper method: get the left edge position of the svg container */\n   _getLeft() {\n     return this.svg.getBoundingClientRect().left;\n   }\n}\n\nObject.assign(Widget.prototype, WidgetSvgNsMixin);\nObject.assign(Widget.prototype, WidgetStateMixin);\nObject.assign(Widget.prototype, WidgetOptionsMixin);\nObject.assign(Widget.prototype, WidgetObserverMixin);\n\nexport default Widget;\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget.js","/**\n * Useful Math Utility functions\n */\nlet MathUtil = {\n\n  /**\n   * Returns the decimal precision of a number.\n   * @param {number} val - The value whose precision to check.\n   * @returns {number} - Number of decimal places.\n   */\n  getPrecision(val) {\n    let decStr = (''+val).split('.')[1];\n    return (decStr ? decStr.length : 0);\n  },\n\n  /**\n   * Round a number to specified decimal precision.\n   * Same as Number.prototype.toFixed, but does not use toString.\n   * @param {nubmer} val - Value to be rounded.\n   * @param {precision} val - \n   * @returns  \n   */\n  round: function round(val, precision) {\n    let factor = Math.pow(10, precision);\n    return Math.round(val * factor) / factor;\n  },\n\n  /**\n   * Quantize a value (set it to the closest value matching the interval)\n   * Note: result will not necessarily reflect the same number of places of\n   * as the q input due to floating point arithmetic.\n   * @param {number} val - Value to quantize.\n   * @param {number} q - The quantization interval.\n   * @param {number} precision - The decimal precision of the result.\n   * @returns {number} qVal - Quantized val.\n   */\n  quantize: function quantize(val, q, precision) {\n    let qVal;\n\n    if (q == 0) {\n      return 0;\n    } else if (q < 0) {\n      q = Math.abs(q);\n    }\n\n    // quantize\n    qVal = ~~(val / q) * q;\n\n    qVal = Math.abs(val - qVal) > (q / 2) ? \n            qVal > 0 ? \n              qVal + q\n            : qVal - q\n          : qVal;\n\n    if (precision !== undefined) {\n      qVal = MathUtil.round(qVal, precision);\n    }\n\n    return qVal;\n  },\n\n  /**\n   * Alias for quantize(val, q)\n   * @param {number} val - Value to quantize\n   * @param {number} q - The quantization interval\n   * @param {number} precision - The decimal precision of the result.\n   * @returns {number} qVal - Quantized val\n   */\n  q: function q(val, q, precision) {\n    return MathUtil.quantize(val, q, precision);\n  }\n};\n\nexport default MathUtil;\n\n\n// WEBPACK FOOTER //\n// ./src/util/util-math.js","/**\n * Mixin specifying the xml namespace for SVG\n * @mixin\n */\nconst SVG_NS = { SVG_NS: \"http://www.w3.org/2000/svg\" };\n\nexport default SVG_NS;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget-mixin-svgns.js","import Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\n\n/**\n * Mixin for methods related to state management\n * @mixin\n */\nlet WidgetStateMixin = {\n\n  /**\n   * Get the current state.\n   *\n   * @public\n   * @returns {object} - Copy of this.state\n   */\n  getState: function getState() {\n    return Object.assign({}, this.state);\n  },\n\n  /**\n   * Set the current state and redraw.\n   *\n   * @description If no new state argument is provided, will reassign old state, taking into account the stateConstraints.\n   * As opposed to setState(), setInternalState() does not trigger observer notification.\n   * Will use Widget.stateConstraints to constrain each state value to each constraints min, max, or enum\n   *\n   * @protected\n   * @param {object=} newState - The new state.\n   * @return {boolean} isChanged - Returns a boolean indicating whether the state has been changed\n   */\n  setInternalState: function setInternalState(newState) {\n    const _this = this;\n    let isChanged = false;\n\n    newState = newState || this.getState();\n\n    Object.keys(newState).forEach(key => {\n      if (_this.state.hasOwnProperty(key) && _this.state[key] !== newState[key]) {\n        _this.state[key] = newState[key];\n        isChanged = true;\n      }\n    });\n\n    _this.stateConstraints.constrain(_this.state);\n    this._update();\n\n    return isChanged;\n  },\n\n  /**\n   * Set the current state and redraw.\n   *\n   * @description As opposed to setInternalState(), setState() will call the observer callback functions,\n   * so may lead to an infinate loop if an observer calls this method.\n   *\n   * @protected\n   * @param {object=} newState - The new state.\n   * @return {boolean} isChanged - Returns a boolean indicating whether the state has been changed\n   */\n  setState: function setState(newState) {\n    const _this = this;\n    let isChanged = false;\n\n    isChanged = this.setInternalState(newState);\n\n    this._notifyObservers();\n\n    return isChanged;\n  }\n};\n\nexport default WidgetStateMixin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget-mixin-state.js","/**\n * Mixin for methods related to options\n * @mixin\n */\nlet WidgetOptionsMixin = {\n\n  /**\n   * Initializes the options.\n   * @private\n   * @param {object} o - Options.\n   */\n  _initOptions: function _initOptions(o) {\n    const _this = this;\n    o = o || {};\n\n    Object.keys(o).forEach(key => {\n      if (_this.o.hasOwnProperty(key) && _this.o[key] !== o[key]) {\n        _this.o[key] = o[key];\n      }\n    });\n  },\n\n  /**\n   * Get the options object\n   * @public\n   * @return {object} this.o - Options\n   */\n  getOptions: function getOptions() {\n    return Object.assign({}, this.o);\n  },\n\n  /**\n   * Set the options\n   * Uses a diffing function, so only specified keys that have new values will be changed\n   * @public\n   * @param {object} o - options\n   * @return {boolean} isChanged - Returns a boolean indicating whether any option has been changed\n   */\n  setOptions: function setOptions(o) {\n    const _this = this;\n    o = o || {};\n    let isChanged = false;\n\n    Object.keys(o).forEach(key => {\n      if (_this.o.hasOwnProperty(key) && _this.o[key] !== o[key]) {\n        _this.o[key] = o[key];\n        isChanged = true;\n      }\n    });\n\n    if (isChanged) {\n      this.setState();\n    }\n\n    return isChanged;\n  }\n};\n\nexport default WidgetOptionsMixin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget-mixin-options.js","/**\n * Mixin for methods related to observer callback support\n * @mixin\n */\nlet WidgetObserverMixin = {\n\n  /**\n   * Register a new observer function that will recieve the state value every time the state is updated.\n   * @public\n   * @param {function} newObserver - The new observer function to be notified every time the state changes.\n   * @return {boolean} isChanged - Indicates whether an observer was added.\n   */\n  addObserver: function addObserver(newObserver) {\n    let isChanged = false;\n\n    if (!(this.observers.find(observer => observer === newObserver))) {\n      this.observers.push(newObserver);\n      isChanged = true;\n    }\n\n    return isChanged;\n  },\n\n  /**\n   * Remove an observer function from being notified when the state changes.\n   * @public\n   * @param {function} targetObserver - The observer function to be removed.\n   * @return {boolean} isChanged - Indicates whether an observer has been removed\n   */\n  removeObserver: function removeObserver(targetObserver) {\n    const _this = this;\n    let isChanged = false;\n\n    this.observers.forEach((observer, idx) => {\n      if (observer === targetObserver) {\n        _this.observers.splice(idx, 1);\n        isChanged = true;\n      }\n    });\n\n    return isChanged;\n  },\n\n  /**\n   * Alias for addObserver. Registers a listener (observer) function.\n   * @param {function} newListener - The new listener (observer) function to be notified every time the state changes.\n   * @return {boolean} isChanged - Indicates whether an observer was added.\n   */\n  addListener: function addListener(newListener) {\n    this.addObserver(newListener);\n  },\n\n  /**\n   * Alias for removeObserver. Removes a listener (observer) function.\n   * @param {function} targetListener - The listener (observer) function to be removed.\n   * @return {boolean} isChanged - Indicates whether an observer has been removed\n   */\n  removeListener: function removeListener(targetListener) {\n    this.removeObserver(targetListener);\n  },\n\n  /**\n   * Notify all observers of new state\n   * @protected\n   */\n  _notifyObservers() {\n    const _this = this;\n    this.observers.forEach(observer => observer(_this.getVal()));\n  }\n};\n\nexport default WidgetObserverMixin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/core/widget-mixin-observer.js","import Widget from \"ui/core/widget\";\nimport Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\nimport MathUtil from \"util/util-math\";\n\n/**\n * Class representing an SVG Dial widget.\n * @class\n * @implements {Widget}\n */\nclass Dial extends Widget {\n\n  /**\n   * @constructor\n   * @param {object} container - DOM container for the widget.\n   * @param {object=} o - options.\n   * @param {number=0} o.minVal - Minimum value constraint.\n   * @param {number=127} o.maxVal - Maximum value constraint.\n   * @param {number=1} o.step - Interval of the steps in which the dial changes value. \n   * @param {string=\"#000\"} o.needleColor - Dial needle color.\n   * @param {string=\"#f40\"} o.activeColor - Dial active color.\n   * @param {number=0.2} o.arcThicknessAspect - The aspect of the arc thickness. \n   */\n  constructor(container, o) {\n    super(container, o);\n    return this;\n  }\n\n  /* ===========================================================================\n  *  PUBLIC API\n  */\n\n  /**\n   * Returns the dial value.\n   * @public @override\n   * @returns {number} - Value of the dial.\n   */\n  getVal() {\n    return this.state.val;\n  }\n\n  /**\n   * Sets the dial value.\n   * Same as setVal(), but will not trigger observer callbacks.\n   * @public @override\n   * @param {number} newVal - The new value.\n   */\n  setInternalVal(newVal) {\n    this.setInternalState({ val: newVal });\n  }\n\n  /**\n   * Sets the dial value.\n   * Same as setInternalVal(), but will trigger observer callbacks.\n   * @public @override\n   * @param {number} newVal - The new value.\n   */\n  setVal(newVal) {\n    this.setState({ val: newVal });\n  }\n\n  /**\n   * Sets the options. \n   * @public @override\n   * @param {object} o - Options.\n   */\n  setOptions(o) {\n    super.setOptions(o);\n    this.o.stepPrecision = MathUtil.getPrecision(this.o.step);\n  }\n\n  /* ==============================================================================================\n  *  INITIALIZATION METHODS\n  */\n\n  /**\n   * Initializes the options.\n   * @override\n   * @private\n   */\n  _initOptions(o) {\n    // set the defaults\n    this.o = {\n      minVal: 0,\n      maxVal: 127,\n      step: 1,\n      needleColor: \"#414141\",\n      activeColor: \"#f40\",\n      arcThicknessAspect: 0.2,\n      mouseSensitivity: 1.2\n    };\n\n    // override defaults with provided options\n    super._initOptions(o);\n\n    // set the precision based on the step interval\n    this.o.stepPrecision =  MathUtil.getPrecision(this.o.step);\n  }\n\n  /**\n   * Initializes state constraints.\n   * @override\n   * @private\n   */\n  _initStateConstraints() {\n    const _this = this;\n\n    this.stateConstraints = new ConstraintSpec({\n      val: new Constraint({\n        min: _this.o.minVal,\n        max: _this.o.maxVal,\n        transform: num => MathUtil.quantize(num, _this.o.step, _this.o.stepPrecision)\n      })\n    });\n  }\n\n  /**\n   * Initializes state.\n   * @override\n   * @private\n   */\n  _initState() {\n    this.state = {\n      val: 0\n    };\n  }\n\n  /**\n   * Initializes the svg elements.\n   * @override\n   * @private\n   */\n  _initSvgEls() {\n    const _this = this;\n\n    this.svgEls = {\n      bgArc: document.createElementNS(this.SVG_NS, \"path\"),\n      activeArc: document.createElementNS(this.SVG_NS, \"path\"),\n      needle: document.createElementNS(this.SVG_NS, \"line\")\n    };\n\n    // draw the background arc\n    this.svgEls.bgArc.setAttribute(\"d\",\n      _this._calcSvgArcPath(\n        _this._calcNeedleCenter().x,\n        _this._calcNeedleCenter().y,\n        _this._calcDialRadius(),\n        0.67 * Math.PI,\n        2.35 * Math.PI\n    ));\n    this.svgEls.bgArc.setAttribute(\"stroke-width\", _this._calcArcStrokeWidth());\n    this.svgEls.bgArc.setAttribute(\"stroke\", _this.o.needleColor);\n    this.svgEls.bgArc.setAttribute(\"fill\", \"transparent\");\n    this.svgEls.bgArc.setAttribute(\"stroke-linecap\", \"round\");\n\n    // draw the active arc\n    this.svgEls.activeArc.setAttribute(\"stroke-width\", _this._calcArcStrokeWidth());\n    this.svgEls.activeArc.setAttribute(\"stroke\", _this.o.activeColor);\n    this.svgEls.activeArc.setAttribute(\"fill\", \"transparent\");\n    this.svgEls.activeArc.setAttribute(\"stroke-linecap\", \"round\");\n\n    // draw the needle\n    this.svgEls.needle.setAttribute(\"x1\", _this._calcNeedleCenter().x);\n    this.svgEls.needle.setAttribute(\"y1\", _this._calcNeedleCenter().y);\n    this.svgEls.needle.setAttribute(\"x2\", _this._calcNeedleEnd().x);\n    this.svgEls.needle.setAttribute(\"y2\", _this._calcNeedleEnd().y);\n    this.svgEls.needle.setAttribute(\"stroke-width\", _this._calcNeedleWidth());\n    this.svgEls.needle.setAttribute(\"stroke\", _this.o.needleColor);\n    this.svgEls.needle.setAttribute(\"z-index\", \"1000\");\n    this.svgEls.needle.setAttribute(\"stroke-linecap\", \"round\");\n\n    this._appendSvgEls();\n    this._update();\n  }\n\n  /**\n   * Initializes mouse and touch event handlers.\n   * @override\n   * @private\n   */\n   _initHandlers() {\n      const _this = this;\n\n      let y0 = 0;\n      let yD = 0;\n      let newVal = _this.getState().val;\n\n      this.handlers = {\n\n       touch: function(ev) {\n          y0 = ev.clientY;\n\n          document.addEventListener(\"mousemove\", _this.handlers.move);\n          document.addEventListener(\"touchmove\", _this.handlers.move);\n          document.addEventListener(\"mouseup\", _this.handlers.release);\n          document.addEventListener(\"touchend\", _this.handlers.release);\n        },\n\n        move: function(ev) {\n          ev.preventDefault();\n\n          yD = y0 - ev.clientY;\n          y0 = ev.clientY;\n\n          newVal = _this.state.val + (yD * _this.o.mouseSensitivity * _this._calcMovePrecision());\n          newVal = Math.max(newVal, _this.o.minVal);\n          newVal = Math.min(newVal, _this.o.maxVal);\n\n          _this.setState({\n            val: newVal\n          });\n        },\n\n        release: function() {\n          document.removeEventListener(\"mousemove\", _this.handlers.move);\n          document.removeEventListener(\"touchmove\", _this.handlers.move);\n        }\n      };\n\n      this.svg.addEventListener(\"mousedown\", _this.handlers.touch);\n      this.svg.addEventListener(\"touchstart\", _this.handlers.touch);\n   }\n\n  /**\n   * Updates (redraws) components based on state.\n   * @override\n   * @private\n   */\n   _update() {\n     // change the needle angle\n     this.svgEls.needle.setAttribute(\"x1\", this._calcNeedleCenter().x);\n     this.svgEls.needle.setAttribute(\"y1\", this._calcNeedleCenter().y);\n     this.svgEls.needle.setAttribute(\"x2\", this._calcNeedleEnd().x);\n     this.svgEls.needle.setAttribute(\"y2\", this._calcNeedleEnd().y);\n\n     // change the active arc length\n     this.svgEls.activeArc.setAttribute(\"d\",\n       this._calcSvgArcPath(\n         this._calcNeedleCenter().x,\n         this._calcNeedleCenter().y,\n         this._calcDialRadius(),\n         0.65 * Math.PI,\n         this._calcNeedleAngle() - 0.5 * Math.PI\n     ));\n\n     // if the value is at min, change the color to match needle color\n     // - otherwise the active part will be visible beneath the needle\n     if (this.state.val === this.o.minVal) {\n       this.svgEls.activeArc.setAttribute(\"stroke\", this.o.needleColor);\n     } else {\n       this.svgEls.activeArc.setAttribute(\"stroke\", this.o.activeColor);\n     }\n   }\n\n  /* ==============================================================================================\n  *  INTERNAL FUNCTIONALITY METHODS\n  */\n\n   /** \n    * Calcultes the stroke width for the background and active arcs.\n    * @private\n    * @returns {number} - Arc stroke width;\n    */\n   _calcArcStrokeWidth() {\n     return this._calcDialRadius() * this.o.arcThicknessAspect;\n   }\n\n   /** \n    * Calculates the dial radius.\n    * @private\n    * @returns {number} - Radius of the dial.\n    */\n   _calcDialRadius() {\n     let radius = (Math.min(this._getWidth(), this._getHeight()) / 2) * 0.89;\n     radius = Math.trunc(radius);\n     return radius;\n   }\n\n   /** \n    * Calculates the needle angle for a given state val.\n    * @private\n    * @returns {number} - Angle of the needle.\n    */\n   _calcNeedleAngle() {\n     const _this = this;\n\n     return (\n              // protect against divide by 0:\n              ((this.o.maxVal - _this.o.minVal) !== 0) ?\n                  (  \n                    (_this.state.val - _this.o.minVal) / (_this.o.maxVal - _this.o.minVal) * (1.7 * Math.PI) + \n                    (1.15 * Math.PI)\n                  )  \n                : ( 0.5 * (1.7 * Math.PI) + (1.15 * Math.PI) )\n            );\n   }\n\n   /** \n    * Calculates the center of the needle.\n    * @private\n    * @returns {object} - {x, y} object representing the needle center coordinates.\n    */\n   _calcNeedleCenter() {\n     const _this = this;\n     return {\n       x: Math.trunc(_this._getWidth() / 2),\n       y: Math.trunc(_this._getHeight() / 2)\n     };\n   }\n\n   /** \n    * Calculates the position of end of the needle\n    * @private\n    * @returns {object} - {x, y} object representing the end of the needle. \n    */\n   _calcNeedleEnd() {\n     const _this = this;\n     return {\n       x: _this._calcNeedleCenter().x + (Math.sin(_this._calcNeedleAngle()) * _this._calcDialRadius()),\n       y: _this._calcNeedleCenter().y - (Math.cos(_this._calcNeedleAngle()) * _this._calcDialRadius())\n     };\n   }\n\n   /** \n    * Calculates the needle width.\n    * @private\n    * @returns {number} - The width of the needle in px.\n    */\n   _calcNeedleWidth() {\n     return this._calcDialRadius() / 5;\n   }\n\n   /** \n    * Calculates the path for an svg arc based on cx, cy, r, startAngle, endAngle.\n    * The input parameters are the way arcs are represented in HTML canvas.\n    * @private\n    * @param {number} cx - Center X.\n    * @param {number} cy - Center Y.\n    * @param {number} r - Radius.\n    * @param {number} startAngle - Start angle in radians.\n    * @param {number} endAngle - End angle in radians.\n    * @returns {string} - A string to be used for the arc path by an SVG arc object.\n    */\n   _calcSvgArcPath(cx, cy, r, startAngle, endAngle) {\n     let x1 = cx + (r * Math.cos(startAngle));\n     let y1 = cy + (r * Math.sin(startAngle));\n     let x2 = cx + (r * Math.cos(endAngle));\n     let y2 = cy + (r * Math.sin(endAngle));\n     let largeArc = (endAngle - startAngle) < Math.PI ? 0 : 1;\n     let sweep = (endAngle - startAngle) < Math.PI ? 1 : 1;\n\n     return [\"M\", x1, y1, \"A\", r, r, 0, largeArc, sweep, x2, y2].join(\" \");\n   }\n\n   /**\n    * Calculates the precision with which the state value changes when moved.\n    */\n   _calcMovePrecision() {\n     let precision = (this.o.maxVal - this.o.minVal) / 127;\n     return precision;\n   }\n}\n\nexport default Dial;\n\n\n// WEBPACK FOOTER //\n// ./src/ui/dial.js","import Widget from \"ui/core/widget\";\nimport Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\nimport MathUtil from \"util/util-math\";\n\n/**\n * Class representing a Slider widget.\n * @class\n * @implements {Widget}\n */\nclass Slider extends Widget {\n\n  /**\n   * @constructor\n   * @param {object} container - DOM container for the widget.\n   * @param {object} [o] - Options.\n   * @param {number} [o.minVal=0] - The minimum possible value the slider can represent.\n   * @param {number} [o.maxVal=127] - The maximum possible value teh slider can represent.\n   * @param {number} [o.step=1] - Step granularity.\n   * @param {string} [o.sliderBodyColor=\"#484848\"] - The color of the slider bar.\n   * @param {string} [o.sliderHandleColor=\"#484848\"] - The color of the triangle used as the slider's needle.\n   */\n  constructor(container, o) {\n    super(container, o);\n    return this;\n  }\n\n  /* ===========================================================================\n  *  INITIALIZATION METHODS\n  */\n\n  /**\n   * Initialize the options\n   * @override\n   * @protected\n   */\n  _initOptions(o) {\n    // set the defaults\n    this.o = {\n      minVal: 0,\n      maxVal: 127,\n      step: 1,\n      sliderBodyColor: \"#484848\",\n      sliderHandleColor: \"#484848\",\n      mouseSensitivity: 1.2\n    };\n\n    // override defaults with provided options\n    super._initOptions(o);\n\n    // set the precision (num of decimal places used) based on the step interval\n    this.o.stepPrecision =  MathUtil.getPrecision(this.o.step);\n  }\n\n  /**\n   * Initialize state constraints\n   * @override\n   * @protected\n   */\n  _initStateConstraints() {\n    const _this = this;\n\n    this.stateConstraints = new ConstraintSpec({\n      val: new Constraint({ \n        min: _this.o.minVal, \n        max: _this.o.maxVal, \n        transform: (num) => MathUtil.quantize(num, _this.o.step, _this.o.stepPrecision) \n      })   \n    });\n  }\n\n  /**\n   * Initialize state.\n   * @override\n   * @protected\n   */\n  _initState() {\n    this.state = {\n      val: this.o.minVal\n    };\n\n    // keep track of dimensions\n    this.dims = {\n      offsetBottom: 5,\n      offsetTop: 5,\n      bodyWidth: 2,\n      handleWidth: 10,\n      handleHeight: 10\n    };\n  }\n\n  /**\n   * Initialize the svg elements\n   * @override\n   * @protected\n   */\n  _initSvgEls() {\n    const _this = this;\n\n    this.svgEls = {\n      body: document.createElementNS(_this.SVG_NS, \"rect\"),\n      overlay: document.createElementNS(_this.SVG_NS, \"rect\"),\n      handle: document.createElementNS(_this.SVG_NS, \"polygon\")\n    };\n\n    this._appendSvgEls();\n    this._update();\n  }\n\n  /**\n   * Initialize mouse and touch event handlers\n   * @override\n   * @protected\n   */\n  _initHandlers() {\n    const _this = this;\n\n    this.handlers = {\n\n      touchBody: function touchBody(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        let newVal = _this._calcTouchVal(ev.clientY);\n        _this.setState({ val: newVal });\n        \n        _this.handlers.touchHandle(ev);\n      },\n\n      touchHandle: function touchHandle(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n        \n        document.body.addEventListener(\"mousemove\", _this.handlers.moveHandle);\n        document.body.addEventListener(\"touchmove\", _this.handlers.moveHandle);\n        document.body.addEventListener(\"mouseup\", _this.handlers.releaseHandle); \n        document.body.addEventListener(\"touchend\", _this.handlers.releaseHandle); \n      },\n\n      moveHandle: function moveHandle(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        let newVal = _this._calcTouchVal(ev.clientY);\n        \n        _this.setState({ val: newVal });\n      },\n\n      releaseHandle: function releaseHandle(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        document.body.removeEventListener(\"touchmove\", _this.handlers.moveHandle); \n        document.body.removeEventListener(\"mousemove\", _this.handlers.moveHandle);\n        document.body.removeEventListener(\"mouseup\", _this.handlers.releaseHandle); \n        document.body.removeEventListener(\"touchend\", _this.handlers.releaseHandle); \n      }\n    };\n\n    this.svgEls.overlay.addEventListener(\"mousedown\", _this.handlers.touchBody);\n    this.svgEls.overlay.addEventListener(\"touchstart\", _this.handlers.touchBody);\n    this.svgEls.handle.addEventListener(\"mousedown\", _this.handlers.touchHandle);\n    this.svgEls.handle.addEventListener(\"touchstart\", _this.handlers.touchHandle);\n  }\n\n  /**\n   * Update (redraw) component based on state\n   * @override\n   * @protected\n   */\n  _update() {\n    const _this = this;\n\n    let sliderBodyPos = _this._calcSliderBodyPos();\n\n    this.svgEls.body.setAttribute(\"x\", sliderBodyPos.x);\n    this.svgEls.body.setAttribute(\"y\", sliderBodyPos.y);\n    this.svgEls.body.setAttribute(\"width\", _this.dims.bodyWidth);\n    this.svgEls.body.setAttribute(\"height\", _this._calcSliderBodyHeight());\n    this.svgEls.body.setAttribute(\"fill\", _this.o.sliderBodyColor);\n\n    this.svgEls.overlay.setAttribute(\"x\", sliderBodyPos.x);\n    this.svgEls.overlay.setAttribute(\"y\", sliderBodyPos.y);\n    this.svgEls.overlay.setAttribute(\"width\", _this.dims.bodyWidth + _this.dims.handleWidth);\n    this.svgEls.overlay.setAttribute(\"height\", _this._calcSliderBodyHeight());\n    this.svgEls.overlay.setAttribute(\"fill\", \"transparent\");\n\n    let sliderHandlePoints = _this._calcSliderHandlePoints();\n\n    this.svgEls.handle.setAttribute(\"points\", sliderHandlePoints);\n    this.svgEls.handle.setAttribute(\"fill\", _this.o.sliderHandleColor);\n  }\n\n  /* ===========================================================================\n  *  PUBLIC API\n  */\n\n  /**\n   * Get the slider value.\n   * @public\n   */\n  getVal() {\n    return this.state.val;\n  }\n\n  /**\n   * Set the current slider value.\n   * Same as setVal(), but will not cause an observer callback trigger.\n   * @public\n   * @param {number} newVal - The new slider value.\n   */\n  setInternalVal(newVal) {\n    this.setInternalState({ val: newVal });\n  }\n\n  /**\n   * Set the current slider value.\n   * Same as setInternalVal(), but will cause an observer callback trigger.\n   * @public\n   * @param {number} newVal - The new slider value.\n   */\n  setVal(newVal) {\n    this.setState({ val: newVal });\n  }\n\n  /* ===========================================================================\n  *  HELPER METHODS\n  */\n\n  /**\n   * Returns the position and dimensions for the slider body.\n   * @private\n   * @returns {object} - {x, y} position.\n   */\n  _calcSliderBodyPos() {\n    const _this = this;\n\n    return {\n      x: _this._getWidth() / 2 - 1,\n      y: _this.dims.offsetTop\n    };\n  }\n\n  /**\n   * Returns the height of the slider body.\n   * @private\n   * @returns {number} - Height of the slider body.\n   */\n  _calcSliderBodyHeight() {\n    return this._getHeight() - this.dims.offsetTop - this.dims.offsetBottom;\n  }\n\n  /**\n   * Returns the height of the slider body.\n   * @private\n   * @returns {number} - Width of the slider body.\n   */\n  _calcSliderBodyWidth() {\n    return this.dims.bodyWidth;\n  }\n\n    /**\n   * Returns the position and dimensions for the slider body.\n   * @private\n   * @returns {object} - {x, y} position.\n   */\n  _calcSliderHandlePoints() {\n    const _this = this;\n\n    let sliderBodyHeight = _this._calcSliderBodyHeight();\n\n    let x0 = (_this._getWidth() / 2) + 1;\n    let y0 = (sliderBodyHeight - (_this.state.val / (_this.o.maxVal - _this.o.minVal)) * sliderBodyHeight) + _this.dims.offsetBottom;\n    let x1 = x0 + this.dims.handleWidth;\n    let y1 = y0 - this.dims.handleHeight / 2;\n    let x2 = x1;\n    let y2 = y0 + this.dims.handleHeight / 2;\n\n    return x0 + \",\" + y0 + \" \" +\n           x1 + \",\" + y1 + \" \" +\n           x2 + \",\" + y2;\n  }\n\n  /**\n   * Calculate the value of the slider touched at position y.\n   * @private\n   * @param {number} y - Y-value of the touch location.\n   * @returns {number} - Value of the slider at the touched location.\n   */\n  _calcTouchVal(y) {\n    let valRange = this.o.maxVal - this.o.minVal;\n    let bodyY = (this._getHeight() - this._getRelativeY(y)) - this.dims.offsetBottom;\n    let touchVal = ((bodyY / this._calcSliderBodyHeight()) * valRange) + this.o.minVal; \n\n    return touchVal;\n  }\n\n  /**\n   * Calculates the precision with which the state value changes when moved.\n   */\n  _calcMovePrecision() {\n    let precision = (this.o.maxVal - this.o.minVal) / 127;\n    return precision;\n  }\n}\n\nexport default Slider;\n\n\n// WEBPACK FOOTER //\n// ./src/ui/slider.js","import Widget from \"ui/core/widget\";\nimport Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\nimport MathUtil from \"util/util-math\";\n\n/**\n * Class representing a Graph widget.\n * @class \n * @implements {Widget}\n */\nclass Graph extends Widget {\n\n  /**\n   * @constructor\n   * @param {object} container - DOM container for the widget.\n   * @param {object} [o] - Options.\n   * @param {number} [o.minXVal=0] - Minimum X value.\n   * @param {number} [o.minYVal=0] - Minimum Y value.\n   * @param {number} [o.maxXVal=100] - Maximum X value.\n   * @param {number} [o.maxYVal=100] - Maximum Y value.\n   * @param {number} [o.maxNumVertices=-1] - Maximum number of vertices.\n   * @param {number} [o.quantizeX=0.1] - X-quantization (\"grid\") value.\n   * @param {number} [o.quantizeY=0.1] - Y-quantization (\"grid\") value.\n   * @param {number} [o.xDecimalPrecision=1] - Number of decimal places for output of the X values.\n   * @param {number} [o.yDecimalPrecision=1] - Number of decimal places for output of the Y values.\n   * @param {boolean} [o.isEditable=true] - Is the graph editable?\n   * @param {string} [o.vertexColor=\"#f40\"] - Color of vertex points.\n   * @param {string} [o.lineColor=\"#484848\"] - Color of lines connecting the vertices.\n   * @param {string} [o.backgroundColor=\"#fff\"] - Background color.\n   * @param {number} [o.lineWidth=2] - Width of the connecting lines.\n   * @param {number} [o.vertexRadius=4] - Radius of the vertex points.\n   * @param {number} [o.mouseSensitivity=1.2] - Mouse sensitivity (how much moving the mouse affects the interaction).\n   */\n  constructor(container, o) {\n    super(container, o);\n    return this;\n  }\n\n  /* ===========================================================================\n  *  PUBLIC API\n  */\n\n  /**\n   * Sets the options.\n   * @public @override\n   */\n  setOptions(o) {\n    o = o || {};\n\n    super.setOptions(o);\n  }\n\n  /**\n  * Returns the state as an array of [x, y] pairs.\n  * @public @override\n  */\n  getVal() {\n    return this.state.vertices.map(vtx => [vtx.x, vtx.y]);\n  }\n\n  /**\n  * Sets the state as an array of [x, y] vertex pairs.\n  * Same as setVal(), but will not trigger observer callback methods.\n  * @public @override\n  * @param {array} - An array of [x, y] points\n  */\n  setInternalVal(vertexArray) {\n   let vertices = vertexArray.map(xyPair => { return {x: xyPair[0], y: xyPair[1]}; });\n\n   this.setInternalState({ vertices: vertices });\n  }\n\n  /**\n  * Sets the state as an array of [x, y] vertex pairs.\n  * Same as setInternalVal(), but will trigger observer callback methods.\n  * @public @override\n  * @param {array} - An array of [x, y] points.\n  */\n  setVal(vertexArray) {\n    let vertices = vertexArray.map(xyPair => { return {x: xyPair[0], y: xyPair[1]}; });\n\n    this.setState({ vertices: vertices });\n  }\n\n  /**\n   * Sets the value of a particular vertex, selected by its index. \n   * Note: will not trigger observer notifications.\n   * @public\n   * @param {number} val - Value to set.\n   * @param {number} idx - Index of the vertex to set the value for.\n   * @returns {number} - Index of the vertex that has been set, or -1 if no such vertex exists.\n   */\n  setVertexVal(val, idx) {\n    if (idx >= 0 && idx < this.state.vertices.length) {\n      let vertices = this.state.vertices.map(vtx => vtx);\n      vertices[idx].y = val;\n      this.setInternalState({ vertices: vertices });\n      return idx;\n    } else {\n      return -1;\n    }\n  }\n\n  /**\n   * Returns the number of vertices set on this graph.\n   * @public\n   * @return {number} - Number of vertices.\n   */\n  getNumVertices() {\n    return this.state.vertices.length;\n  }\n\n  /**\n   * Adds new vertices to the state.\n   * Each vertex is represented as x and y values, as well as optional boolean flags\n   * specifying whether the x, y, or both values should be fixed (unchangeble).\n   * The x and y values may also take the strings \"min\", \"max\" to specify that the coordinates \n   * should be tied to the minimum or maximum possible x or y values for the graph.\n   * @public\n   * @param {...object} vtx - Object representing the new vertex to add.\n   * @param {number} [vtx.x=minXVal] - X coordinate for the new vertex.\n   * @param {number} [vtx.y=minYVal] - Y coordinate for the new vertex.\n   * @param {boolean} [vtx.isXFixed=false] - Is the X coordinate fixed (unable to move)?\n   * @param {boolean} [vtx.isYFixed=false] - Is the Y coordinate fixed (unable to move)?\n   */\n  addVertex(...vtx) {\n    for (let i = 0; i < vtx.length; i++) {\n      let newVtx = vtx[i];\n\n      newVtx = (typeof newVtx !== 'undefined') ? newVtx : {};\n      newVtx.x = (typeof newVtx.x !== 'undefined') ? newVtx.x : this.o.minXVal;\n      newVtx.y = (typeof newVtx.y !== 'undefined') ? newVtx.y : this.o.minYVal;\n      newVtx.isXFixed = (typeof newVtx.isXFixed !== 'undefined') ? newVtx.isXFixed : false;\n      newVtx.isYFixed = (typeof newVtx.isYFixed !== 'undefined') ? newVtx.isYFixed : false;\n      newVtx.xAnchor = \"\";\n      newVtx.yAnchor = \"\";\n\n      if (newVtx.x === \"max\") {\n        newVtx.isXFixed = true;\n        newVtx.x = this.o.maxXVal;\n        newVtx.xAnchor = \"max\";\n      } else if (newVtx.x === \"min\") {\n        newVtx.isXFixed = true;\n        newVtx.x = this.o.minXVal;\n        newVtx.xAnchor = \"min\";\n      }\n\n      if (newVtx.y === \"max\") {\n        newVtx.isYFixed = true;\n        newVtx.y = this.o.maxYVal;\n        newVtx.yAnchor = \"max\";\n      } else if (newVtx.x === \"min\") {\n        newVtx.isYFixed = true;\n        newVtx.y = this.o.minYVal;\n        newVtx.yAnchor = \"min\";\n      }\n\n      let newVertices = this.getState().vertices.map(x=>x);\n\n      newVertices.push(newVtx);\n      newVertices.sort((a, b) => a.x - b.x);\n\n      this.setState({\n        vertices: newVertices\n      });\n    }\n  }\n\n  /**\n   * Adds a vertex with fixed x and y coordinates.\n   * @param {object} vtx - Vertex coordinates in format {x, y}\n   * @param {number} vtx.x - X coordinate of the vertex.\n   * @param {number} vtx.y - Y coordinate of the vertex.\n   */\n  addFixedVertex(...vtx) {\n    for (let i = 0; i < vtx.length; i++) {\n      let newVtx = vtx[i];\n      this.addVertex({ x: newVtx.x, y: newVtx.y, isXFixed: true, isYFixed: true });\n    }\n  }\n\n  /**\n   * Adds a vertex with fixed y coordinate.\n   * @param {object} vtx - Vertex coordinates in format {x, y}\n   * @param {number} vtx.x - X coordinate of the vertex.\n   * @param {number} vtx.y - Y coordinate of the vertex.\n   */\n  addFixedXVertex(...vtx) {\n    for (let i = 0; i < vtx.length; i++) {\n      let newVtx = vtx[i];\n      this.addVertex({ x: newVtx.x, y: newVtx.y, isXFixed: true, isYFixed: false });\n    }\n  }\n\n\n  /**\n   * Adds a vertex with fixed y coordinate.\n   * @param {object} vtx - Vertex coordinates in format {x, y}\n   * @param {number} vtx.x - X coordinate of the vertex.\n   * @param {number} vtx.y - Y coordinate of the vertex.\n   */\n  addFixedYVertex(...vtx) {\n    for (let i = 0; i < vtx.length; i++) {\n      let newVtx = vtx[i];\n      this.addVertex({ x: newVtx.x, y: newVtx.y, isXFixed: false, isYFixed: true });\n    }\n  }\n\n  /* ============================================================================================= */\n  /* INITIALIZATION METHODS\n  /* ============================================================================================= */\n\n  /**\n   * Initializes the options.\n   * @override\n   * @private\n   */\n  _initOptions(o) {\n    // set defaults\n    this.o = {};\n\n    this.o.minXVal = 0;\n    this.o.minYVal = 0;\n    this.o.maxXVal = 100;\n    this.o.maxYVal = 100;\n    this.o.maxNumVertices = -1;\n    this.o.quantizeX = 0.1;\n    this.o.quantizeY = 0.1;\n    this.o.xDecimalPrecision = 1;\n    this.o.yDecimalPrecision = 1;\n    this.o.isEditable = true;\n    this.o.vertexColor = \"#f40\";\n    this.o.fixedVertexColor = this.o.vertexColor;\n    this.o.lineColor = \"#484848\";\n    this.o.backgroundColor = \"#fff\";\n    this.o.vertexRadius = 4;\n    this.o.lineWidth = 2;\n    this.o.mouseSensitivity = 1.2;\n\n    // override defaults with provided options\n    super._initOptions(o);\n  }\n\n  /**\n   * Initializes state constraints.\n   * @override\n   * @private\n   */\n  _initStateConstraints() {\n    const _this = this;\n\n    this.stateConstraints = new ConstraintSpec({\n      vertices: [{\n        x: new Constraint({\n          min: _this.o.minXVal,\n          max: _this.o.maxXVal,\n          transform: (num) => {\n            return MathUtil.quantize(num, _this.o.quantizeX);\n          }\n        }),\n        y: new Constraint({\n          min: _this.o.minYVal,\n          max: _this.o.maxYVal,\n          transform: (num) => {\n            return MathUtil.quantize(num, _this.o.quantizeY);\n          }\n        })\n      }]\n    });\n  }\n\n  /**\n   * Initializes state.\n   * @override\n   * @private\n   */\n  _initState() {\n    this.state = {\n      // verices contains an array of vertices\n      // each vertex is an object of form \n      // {\n      //   x: numbber, \n      //   y: number, \n      //   isXFixed: boolean, \n      //   isYFixed: boolean,\n      //   xAnchor: string,\n      //   yAnchor: string\n      // }\n      // isXFixed and isYFixed are boolean values that tell if a given\n      // vertex may be moved in the x and y planes\n      vertices: []\n    };\n  }\n\n  /**\n   * Initializes the svg elements.\n   * @override\n   * @private\n   */\n  _initSvgEls() {\n    const _this = this;\n\n    this.svgEls = {\n      panel: document.createElementNS(this.SVG_NS, \"rect\"),\n      vertices: [],\n      lines: []\n    };\n\n    this.svgEls.panel.setAttribute(\"width\", this._getWidth());\n    this.svgEls.panel.setAttribute(\"height\", this._getHeight());\n    this.svgEls.panel.setAttribute(\"fill\", this.o.backgroundColor);\n    this.svgEls.panel.setAttribute(\"stroke\", this.o.lineColor);\n\n    this._appendSvgEls();\n    this._update();\n  }\n\n  /**\n   * Initializes mouse and touch event handlers.\n   * @override\n   * @private\n   */\n  _initHandlers() {\n    const _this = this;\n\n    let targetVtx = null;\n    let targetLine = null;\n    let vtxPos0 = {}; // original poisition of two vertices affected by a line move\n    let x0 = 0;\n    let y0 = 0;\n    let x1 = 0;\n    let y1 = 0;\n    let dx = 0;\n    let dy = 0;\n\n    this.handlers = {\n\n       touchPanel: function touchPanel(ev) {\n         ev.preventDefault();\n\n         let xPos = ev.clientX - _this._getLeft();\n         let yPos = ev.clientY - _this._getTop();\n         let vertexState = _this._calcVertexState({x: xPos, y: yPos});\n\n         _this.addVertex(vertexState);\n       },\n\n       touchVertex: function touchVertex(ev) {\n         ev.preventDefault();\n\n         targetVtx = ev.target;\n\n         document.addEventListener(\"mousemove\", _this.handlers.moveVertex);\n         document.addEventListener(\"touchmove\", _this.handlers.moveVertex);\n         ev.target.addEventListener(\"mouseup\", _this.handlers.deleteVertex);\n         ev.target.addEventListener(\"touchend\", _this.handlers.deleteVertex);\n       },\n\n       touchLine: function touchLine(ev) {\n         ev.preventDefault();\n\n         targetLine = ev.target;\n\n         x0 = ev.clientX - _this._getLeft();\n         y0 = ev.clientY - _this._getTop();\n         vtxPos0 = null;\n\n         document.addEventListener(\"mousemove\", _this.handlers.moveLine);\n         document.addEventListener(\"touchmove\", _this.handlers.moveLine);\n       },\n\n       moveLine: function moveLine(ev) {\n         ev.preventDefault();\n\n         document.addEventListener(\"mouseup\", _this.handlers.endMoveLine);\n         document.addEventListener(\"touchend\", _this.handlers.endMoveLine);\n\n         x1 = ev.clientX - _this._getLeft();\n         y1 = ev.clientY - _this._getTop();\n\n         // delta position (change in position)\n         let dPos = {\n           x: x1 - x0,\n           y: y1 - y0\n         };\n\n         vtxPos0 = _this._moveLine(targetLine, dPos, vtxPos0);\n       },\n\n       endMoveLine: function endMoveLine(ev) {\n         ev.preventDefault();\n\n         vtxPos0 = null;\n\n         document.removeEventListener(\"mousemove\", _this.handlers.moveLine);\n         document.removeEventListener(\"touchmove\", _this.handlers.moveLine);\n       },\n\n       deleteVertex: function deleteVertex(ev) {\n         ev.preventDefault();\n\n         document.removeEventListener(\"mousemove\", _this.handlers.moveVertex);\n         document.removeEventListener(\"touchmove\", _this.handlers.moveVertex);\n\n         _this._deleteVertex(ev.target);\n\n         ev.target.removeEventListener(\"mouseup\", _this.handlers.deleteVertex);\n         ev.target.removeEventListener(\"touchend\", _this.handlers.deleteVertex);\n       },\n\n       moveVertex: function moveVertex(ev) {\n         ev.preventDefault();\n\n         targetVtx.removeEventListener(\"mouseup\", _this.handlers.deleteVertex);\n         targetVtx.removeEventListener(\"touchend\", _this.handlers.deleteVertex);\n\n         document.addEventListener(\"mouseup\", _this.handlers.endMoveVertex);\n         document.addEventListener(\"touchend\", _this.handlers.endMoveVertex);\n\n         let xPos = ev.clientX - _this._getLeft();\n         let yPos = ev.clientY - _this._getTop();\n\n         _this._moveVertex(targetVtx, {x: xPos, y: yPos});\n       },\n\n       endMoveVertex: function endMoveVertex(ev) {\n         ev.preventDefault();\n\n         document.removeEventListener(\"mousemove\", _this.handlers.moveVertex);\n         document.removeEventListener(\"touchmove\", _this.handlers.moveVertex);\n       }\n    };\n\n    this.svgEls.panel.addEventListener(\"mousedown\", _this.handlers.touchPanel);\n    this.svgEls.panel.addEventListener(\"touchdown\", _this.handlers.touchPanel);\n\n    this.svgEls.vertices.forEach(vtx => {\n      vtx.addEventListener(\"mousedown\", _this.handlers.touchVertex);\n      vtx.addEventListener(\"touchdown\", _this.handlers.touchVertex);\n    });\n\n    this.svgEls.lines.forEach(line => {\n      line.addEventListener(\"mousedown\", _this.handlers.touchLine);\n      line.addEventListener(\"touchdown\", _this.handlers.touchLine);\n    });\n  }\n\n  /**\n   * Updates (redraws) component based on state.\n   * @override\n   * @private\n   */\n  _update() {\n    const _this = this;\n\n    // update vertices to have min and max values if specified\n    _this.state.vertices.forEach(vtx => {\n      vtx.x = (vtx.xAnchor === \"max\") ? _this.o.maxXVal :\n                (vtx.xAnchor === \"min\") ? _this.o.minXVal :\n                vtx.x;\n\n      vtx.y = (vtx.yAnchor === \"max\") ? _this.o.maxYVal :\n                (vtx.yAnchor === \"min\") ? _this.o.minYVal :\n                vtx.y;\n    });\n\n    // sort svg vertexes using a sort map\n    let idxSortMap = _this.state.vertices.map((vtx, idx) => { return { vtx: vtx, idx: idx }; });\n    idxSortMap.sort((a, b) => a.vtx.x - b.vtx.x);\n    _this.state.vertices = idxSortMap.map(el => _this.state.vertices[el.idx]);\n\n    // if there are more state vertices than svg vertices, add a corresponding number of svg vertices and lines\n    for (let i = _this.svgEls.vertices.length; i < _this.state.vertices.length; ++i) {\n      _this._addSvgVertex();\n    }\n\n    // if there are more svg vertices than state vertices, remove a corresponding number of svg vertices and lines\n    for (let i = _this.svgEls.vertices.length; i > _this.state.vertices.length; --i) {\n      _this._removeSvgVertex();\n    }\n\n    // sort the svg vertices according to the vertex sort map\n    _this.svgEls.vertices = idxSortMap.map(el => _this.svgEls.vertices[el.idx]);\n\n    // set the correct position coordinates for every vertex\n    _this.state.vertices.forEach((stateVtx, idx) => {\n      let svgVtx = _this.svgEls.vertices[idx];\n      let pos = _this._calcVertexPos(stateVtx);\n\n      svgVtx.setAttribute(\"cx\", pos.x);\n      svgVtx.setAttribute(\"cy\", pos.y);\n      svgVtx.setAttribute(\"r\", _this.o.vertexRadius);\n\n      let vtxFill = (_this.state.vertices[idx].isXFixed || _this.state.vertices[idx].isYFixed) ?\n                    _this.o.fixedVertexColor :\n                    _this.o.vertexColor;\n\n      svgVtx.setAttribute(\"fill\", vtxFill);\n\n      // for every vertex other than the first, draw a line to the previous vertex\n      if (idx > 0) {\n        let prevVtx = _this.state.vertices[idx - 1];\n        let prevPos = _this._calcVertexPos(prevVtx);\n        let line = _this.svgEls.lines[idx - 1];\n\n        line.setAttribute(\"d\", \"M \" + pos.x + \" \" + pos.y + \" L \" + prevPos.x + \" \" + prevPos.y);\n        line.setAttribute(\"fill\", \"transparent\");\n        line.setAttribute(\"stroke-width\", _this.o.lineWidth);\n        line.setAttribute(\"stroke\", _this.o.lineColor);\n      }\n    });\n\n    // remove and reappend all svg elements so that vertices are on top of lines\n    _this.svgEls.lines.forEach(svgLine => {\n      _this.svg.removeChild(svgLine);\n      _this.svg.appendChild(svgLine);\n    });\n\n    _this.svgEls.vertices.forEach(svgVtx => {\n      _this.svg.removeChild(svgVtx);\n      _this.svg.appendChild(svgVtx);\n    });\n\n    // reassign listeners\n    _this.svgEls.vertices.forEach(vtx => {\n      vtx.addEventListener(\"mousedown\", _this.handlers.touchVertex);\n      vtx.addEventListener(\"touchdown\", _this.handlers.touchVertex);\n    });\n\n    _this.svgEls.lines.forEach(line => {\n      line.addEventListener(\"mousedown\", _this.handlers.touchLine);\n      line.addEventListener(\"touchdown\", _this.handlers.touchLine);\n    });\n  }\n\n  /* ==============================================================================================\n  *  INTERNAL FUNCTIONALITY METHODS\n  */\n\n  /**\n   * Deletes a vertex.\n   * @private\n   * @param {SVGElement} targetVtx - Vertex to Delete\n   */\n  _deleteVertex(targetVtx) {\n    const _this = this;\n\n    let vtxIdx = this.svgEls.vertices.findIndex(vtx => vtx === targetVtx);\n    let isRemovable = !(this.state.vertices[vtxIdx].isXFixed || this.state.vertices[vtxIdx].isYFixed)\n\n    if (vtxIdx !== -1 && isRemovable) {\n      let newVertices = this.getState().vertices.map(x=>x);\n\n      newVertices.splice(vtxIdx, 1);\n      _this.setState({\n        vertices: newVertices\n      });\n    }\n  }\n\n  /**\n   * Adds a new SVG vertex representation.\n   * @private\n   */\n  _addSvgVertex() {\n    const _this = this;\n\n    let newVertex = document.createElementNS(_this.SVG_NS, \"circle\");\n    _this.svgEls.vertices.push(newVertex);\n    _this.svg.appendChild(newVertex);\n\n    // if there is more than 1 svg vertex, we also need to draw lines between them\n    if (_this.svgEls.vertices.length > 1) {\n      this._addSvgLine();\n    }\n  }\n\n  /**\n   * Adds an SVG line connecting two vertices.\n   * @private\n   */\n  _addSvgLine() {\n    let newLine = document.createElementNS(this.SVG_NS, \"path\");\n    this.svg.appendChild(newLine);\n    this.svgEls.lines.push(newLine);\n  }\n\n  /**\n   * Removes an SVG vertex.\n   * @private\n   */\n  _removeSvgVertex() {\n    let vertex = this.svgEls.vertices[this.svgEls.vertices.length - 1];\n\n    this.svg.removeChild(vertex);\n    vertex = null;\n    this.svgEls.vertices.pop();\n\n    if (this.svgEls.lines.length > 0) {\n     this._removeSvgLine();\n    }\n  }\n\n  /**\n   * Removes an SVG line connecting two vertices.\n   * @private\n   */\n  _removeSvgLine() {\n    let line = this.svgEls.lines[this.svgEls.lines.length - 1];\n\n    this.svg.removeChild(line);\n    line = null;\n    this.svgEls.lines.pop();\n  }\n\n  /**\n    * Moves a line.\n    * @private\n    * @param {SVGElement} targetLine - The target line\n    * @param {object} dPos -\n    * @param {number} dPos.x\n    * @param {number} dPos.y\n    * @param {object} vtxPos0 - Original position (before moving)\n    *                           of the two vertices immediately to the left\n    *                           and right of the line being moved in the\n    *                           form { vtx1: {x, y}, vtx2: {x, y}, boundaryBL: {x, y}, boundaryTR: {x, y} }\n    *                           If null, will be calculated from the\n    *                           corresponding svg element.\n    * @param {obect} [vtxPos0.vtx1]\n    * @param {number} [vtxPos0.vtx1.x]\n    * @param {number} [vtxPos0.vtx1.y]\n    * @param {obect} [vtxPos0.vtx2]\n    * @param {number} [vtxPos0.vtx2.x]\n    * @param {number} [vtxPos0.vtx2.y]\n    * @returns {object} Original position of the two vertices affected by the line move in the form\n    *                   { vtx1: {x, y}, vtx2: {x, y}, boundaryBL: {x, y}, boundaryTR: {x, y} }.\n    */\n  _moveLine(targetLine, dPos, vtxPos0) {\n    const _this = this;\n\n    let lineIdx = _this.svgEls.lines.findIndex(line => line === targetLine);\n\n    // get vertices to the left and right of the selected line\n    let vtx1 = _this.svgEls.vertices[lineIdx];\n    let vtx2 = _this.svgEls.vertices[lineIdx + 1];\n\n    let vtx1curPos = {\n      x: parseInt(_this.svgEls.vertices[lineIdx].getAttribute(\"cx\")),\n      y: parseInt(_this.svgEls.vertices[lineIdx].getAttribute(\"cy\"))\n    };\n    let vtx2curPos = {\n      x: parseInt(_this.svgEls.vertices[lineIdx + 1].getAttribute(\"cx\")),\n      y: parseInt(_this.svgEls.vertices[lineIdx + 1].getAttribute(\"cy\"))\n    };\n\n    // if vtxPos0 is null or undefined, this is the first time this function\n    // was called in the line move, and we need to get the position of affected\n    // vertices from the svg attributes.\n    // vtx1 and vtx2 are the left and right vertices bounding the line\n    // boundaryBL is the bottom left boundary restricting movement of the line\n    // boundaryTR is the top right boundary restricting movement of the line\n    if (vtxPos0 === null || vtxPos0 === undefined) {\n\n      let boundaryBL = {\n        x: (lineIdx > 0) ? \n               parseInt(_this.svgEls.vertices[lineIdx - 1].getAttribute(\"cx\"))\n            : _this._calcVertexPos({x: _this.o.minXVal, y: _this.o.minYVal}).x,\n        y: _this._calcVertexPos({x: _this.o.minXVal, y: _this.o.minYVal}).y\n      };\n\n      let boundaryTR = {\n        x: (lineIdx + 2 < _this.svgEls.vertices.length) ? \n              parseInt(_this.svgEls.vertices[lineIdx + 2].getAttribute(\"cx\"))\n            : _this._calcVertexPos({x: _this.o.maxXVal, y: _this.o.maxYVal}).x,\n        y: _this._calcVertexPos({x: _this.o.maxXVal, y: _this.o.maxYVal}).y\n      };\n\n      vtxPos0 = {\n       vtx1: vtx1curPos,\n       vtx2: vtx2curPos,\n       boundaryBL: boundaryBL,\n       boundaryTR: boundaryTR\n      };\n    }\n\n    // calculate the new positions for the two affected vertices\n    let vtx1newPos = {\n      x: vtxPos0.vtx1.x + dPos.x,\n      y: vtxPos0.vtx1.y + dPos.y\n    };\n\n    let vtx2newPos = {\n      x: vtxPos0.vtx2.x + dPos.x,\n      y: vtxPos0.vtx2.y + dPos.y\n    };\n\n    // if moving would take x values outside of boundaries, keep x values the same\n    if (vtx1newPos.x < vtxPos0.boundaryBL.x || \n        vtx2newPos.x < vtxPos0.boundaryBL.x || \n        vtx1newPos.x > vtxPos0.boundaryTR.x || \n        vtx2newPos.x > vtxPos0.boundaryTR.x) {\n      vtx1newPos.x = vtx1curPos.x;\n      vtx2newPos.x = vtx2curPos.x;\n    }\n\n    // if moving would take y values outside of boundaries, keep y values the same\n    // remember that y-coordinates are inverted when dealing with the canvas\n    if (vtx1newPos.y > vtxPos0.boundaryBL.y || \n        vtx2newPos.y > vtxPos0.boundaryBL.y || \n        vtx1newPos.y < vtxPos0.boundaryTR.y || \n        vtx2newPos.y < vtxPos0.boundaryTR.y) {\n      vtx1newPos.y = vtx1curPos.y;\n      vtx2newPos.y = vtx2curPos.y;\n    }\n\n    this._moveVertex(vtx1, vtx1newPos);\n    this._moveVertex(vtx2, vtx2newPos);\n\n    // return the original position so that it may be used again if the line move is not finished\n    return vtxPos0;\n  }\n\n  /**\n  * Moves a vertex.\n  * @private\n  * @param {SVGElement} targetVtx - The target vertex\n  * @param {Object} newPos - The new position\n  * @param {number} newPos.x\n  * @param {number} newPos.y\n  */\n  _moveVertex(targetVtx, newPos) {\n    const _this = this;\n\n    let vtxState = _this._calcVertexState(newPos);\n    let vtxIdx = _this.svgEls.vertices.findIndex(vtx => vtx === targetVtx);\n\n    let vertices = _this.getState().vertices.map(x=>x);\n\n    // move the vertex if it's not fixed in x or y direction\n    vertices[vtxIdx].x = (vertices[vtxIdx].isXFixed) ? vertices[vtxIdx].x : vtxState.x;\n    vertices[vtxIdx].y = (vertices[vtxIdx].isYFixed) ? vertices[vtxIdx].y : vtxState.y;\n\n    _this.setState({\n      vertices: vertices\n    });\n  }\n\n  /* ===========================================================================\n  *  HELPER METHODS\n  */\n\n  /**\n   * Calculates the x and y for a vertex in the graph according to its state value.\n   * @private\n   */\n  _calcVertexPos(vertexState) {\n    let normalizedWidth = this._getWidth() - (2 * this.o.vertexRadius);\n    let normalizedHeight = this._getHeight() - (2 * this.o.vertexRadius);\n\n    return {\n     x: (normalizedWidth * (vertexState.x / this.o.maxXVal)) + this.o.vertexRadius,\n     y: (normalizedHeight - (normalizedHeight * (vertexState.y / this.o.maxYVal))) + this.o.vertexRadius\n    };\n  }\n\n  /**\n   * Calculates the x and y for a vertex state based on position on the graph.\n   * (inverse of _calcVertexPos).\n   * @private\n   */\n  _calcVertexState(vertexPos) {\n    let normalizedWidth = this._getWidth() - (2 * this.o.vertexRadius);\n    let normalizedHeight = this._getHeight() - (2 * this.o.vertexRadius);\n\n    return {\n      x: this.o.maxXVal * ((vertexPos.x - this.o.vertexRadius) / normalizedWidth),\n      y: this.o.maxYVal - (this.o.maxYVal * (vertexPos.y / normalizedHeight))\n    };\n  }\n\n  /**\n   * Converts on-screen x distance to scaled x state-value.\n   * @private\n   */\n  _xPxToVal(x) {\n    return ((x - this.o.vertexRadius) / (this._getWidth() + (2 * this.o.vertexRadius))) \n              * (this.o.maxXVal - this.o.minXVal);\n  }\n\n  /**\n   * Converts on-screen y distance to scaled y state-value.\n   * @private\n   */\n  _yPxToVal(y) {\n    return (y / (this._getHeight() + (2 * this.o.vertexRadius))) * (this.o.maxYVal - this.o.minYVal);\n  }\n}\n\nexport default Graph;\n\n\n// WEBPACK FOOTER //\n// ./src/ui/graph.js","import Widget from \"ui/core/widget\";\nimport Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\n\n/**\n * Class representing an Numberbox widget.\n * @class\n * @implements {Widget}\n */\nclass Numberbox extends Widget {\n\n    /**\n     * @constructor\n     * @param {object} container - DOM container for the widget.\n     * @param {object} [o] - Options.\n     * @param {number} [o.minVal=null] - Minimum value. \n     * @param {number} [o.maxVal=null] - Maximum value.\n     * @param {number} [o.precision=0] - Number of decimal places to use.\n     * @param {string} [o.backgroundColor=\"#282828\"] - The background color.\n     * @param {string} [o.fontColor=\"#aaa\"] - The font color.\n     * @param {string} [o.fontSize=\"12px\"] - The font size.\n     * @param {string} [o.fontFamily=\"Arial\"] - The font family.\n     * @param {string} [o.appendString=\"\"] - String to append to the value when displaying (i.e. \" Hz\").\n     */\n    constructor(container, o) {\n        super(container, o);\n        return this;\n    }\n\n/* ============================================================================================== */\n/*  PUBLIC API\n/* ============================================================================================== */\n\n    /**\n     * Returns the current value.\n     * @public @override\n     * @returns {number} - Current value.\n     */\n    getVal() {\n        return this.state.val;\n    }\n\n    /**\n     * Sets the current value.\n     * Same as setVal(), but will not cause an observer callback trigger.\n     * @public @override\n     * @param {number} newVal - The new value.\n     */\n    setInternalVal(newVal) {\n        this.setInternalState({ val: newVal });\n    }\n\n    /**\n     * Sets the current value.\n     * Same as setInternalVal(), but will cause an observer callback trigger.\n     * @public @override\n     * @param {number} newVal - The new value.\n     */\n    setVal(newVal) {\n        this.setState({ val: newVal });\n    }\n\n    /**\n     * Returns a string representation of the value.\n     * @returns {string} - String representation of the value.\n     */\n    toString() {\n        return this.state.val.toFixed(this.o.precision);\n    }\n\n/* ============================================================================================== */\n/* INITIALIZATION METHODS\n/* ============================================================================================== */\n\n    /**\n     * Initializes the options.\n     * @private @override\n     */\n    _initOptions(o) {\n        // set the defaults\n        this.o = {\n            minVal: 0,\n            maxVal: 127,\n            precision: 4,\n            quantizeInterval: 1,\n            backgroundColor: \"#282828\",\n            fontColor: \"#ccc\",\n            fontSize: \"12px\",\n            fontFamily: \"Arial\",\n            textSelectBackgroundColor: \"#f00\",\n            appendString: \"\",\n            mouseSensitivity: 0.01,\n            mouseFineSensitivity: 0.001     // Fine sensitivity is used when shift key is held\n        };\n\n        // override defaults with provided options\n        super._initOptions(o);\n    }\n\n    /**\n     * Initializes state constraints.\n     * @private @override\n     */\n    _initStateConstraints() {\n        const _this = this;\n\n        let valConstraintDef = {};\n\n        if (this.o.minVal !== null) {\n            valConstraintDef.minVal = this.o.minVal;\n        }\n\n        if (this.o.maxVal !== null) {\n            valConstraintDef.maxVal = this.o.maxVal;\n        }\n\n        this.stateConstraints = new ConstraintSpec({\n            val: new Constraint(valConstraintDef)\n        });\n    }\n\n    /**\n     * Initializes the state.\n     * @private @override\n     */\n    _initState() {\n        this.state = {\n            val: 0\n        };\n    }\n\n    /**\n     * Initializes the svg elements.\n     * @private @override\n     */\n    _initSvgEls() {\n        const _this = this;\n\n        this.svgEls = {\n            panel: document.createElementNS(_this.SVG_NS, \"rect\"),\n            textUnderlay: document.createElementNS(_this.SVG_NS, \"rect\"),\n            text: document.createElementNS(_this.SVG_NS, \"text\"),\n            cursor: document.createElementNS(_this.SVG_NS, \"rect\"),      \n            overlay: document.createElementNS(_this.SVG_NS, \"rect\")\n        };\n\n        this.svgEls.text.setAttribute(\"alignment-baseline\", \"middle\");\n        this.svgEls.text.setAttribute(\"text-anchor\", \"middle\");\n        this.svg.addEventListener(\"mouseover\", function() {\n            _this.svg.style.cursor = \"text\";\n        });\n\n        this.svgEls.textUnderlay.setAttribute(\"fill\", \"transparent\");\n\n        this.svgEls.cursor.setAttribute(\"fill\", \"rgba(0,0,0,0)\");\n        this.svgEls.cursor.setAttribute(\"stroke\", \"rgba(0,0,0,0)\");\n\n\n        this._appendSvgEls();\n        this._update();\n    }\n\n    /**\n     * Initializes mouse and touch event handlers.\n     * @private @override\n     */\n    _initHandlers() {\n        const _this = this;\n\n        let x0 = 0;\n        let y0 = 0;\n        let yD = 0;\n        let newVal = _this.getState().val;\n        let charNum;\n        let charBRect;\n        let power;\n        let prevTouchTime = Date.now();\n\n        this.handlers = {\n\n            touch: function touch(ev) {\n\n                ev.preventDefault();\n                ev.stopPropagation();\n\n                y0 = ev.clientY;\n                x0 = ev.clientX;\n\n                charNum = _this._getSelectedCharNumber(x0, y0);\n                power = _this._getPowerOfSelectedDigit(charNum);\n\n                document.addEventListener(\"mousemove\", _this.handlers.move);\n                document.addEventListener(\"touchmove\", _this.handlers.move);\n                _this.svg.addEventListener(\"mouseup\", _this.handlers.kbdEdit);\n                _this.svg.addEventListener(\"touchend\", _this.handlers.kbdEdit);\n            },\n\n            move: function move(ev) {\n                ev.preventDefault();\n                ev.stopPropagation();\n\n                let clientX = ev.clientX;\n                let clientY = ev.clientY;\n                \n                yD = y0 - clientY;\n\n                let newVal = _this.getVal() + (yD * Math.pow(10, power) * _this.o.mouseSensitivity);\n\n                _this.setState({ val: newVal });\n\n                _this.svg.removeEventListener(\"mouseup\", _this.handlers.kbdEdit);\n                _this.svg.removeEventListener(\"touchend\", _this.handlers.kbdEdit);\n                document.addEventListener(\"mouseup\", _this.handlers.release);\n                document.addEventListener(\"touchend\", _this.handlers.release);\n            },\n\n            // Edit the value by typing on a keyboard\n            kbdEdit: function kbdEdit(ev) {\n                ev.preventDefault();\n                ev.stopPropagation();\n\n                _this.svg.removeEventListener(\"mouseup\", _this.handlers.kbdEdit);\n                _this.svg.removeEventListener(\"touchend\", _this.handlers.kbdEdit);\n                document.removeEventListener(\"mousemove\", _this.handlers.move);\n                document.removeEventListener(\"touchmove\", _this.handlers.move);\n\n                charNum = _this._getSelectedCharNumber(ev.clientX, ev.clientY);\n                charBRect = _this.svgEls.text.getExtentOfChar(Math.min(charNum, _this.svgEls.text.length - 1));\n                \n                let editStr = _this.toString();\n\n                // If the click is past the mid-point of the character, we select the next char, bounded by the length of the string\n                if (ev.clientX > ((charBRect.x + (charBRect.x + charBRect.width)) * 0.55)) {\n                    charNum = charNum + 1;\n                }\n    \n                _this.svgEls.text.textContent = _this._editText(editStr, charNum); \n            },\n\n            release: function release(ev) {\n                ev.preventDefault();\n                ev.stopPropagation();\n\n                document.removeEventListener(\"mousemove\", _this.handlers.move);\n                document.removeEventListener(\"touchmove\", _this.handlers.move);\n            }\n        };\n\n        this.svg.addEventListener(\"mousedown\", _this.handlers.touch);\n        this.svg.addEventListener(\"touchstart\", _this.handlers.touch);\n    }\n\n    /**\n     * Updates (redraws) components based on state.\n     * @private @override\n     */\n    _update() {\n        const _this = this;\n\n        this.svgEls.text.textContent = this.toString() + this.o.appendString;\n\n        let panelWidth = _this._getWidth();\n        let panelHeight = _this._getHeight();\n        let textWidth = this.svgEls.text.getBoundingClientRect().width;\n        let textHeight = this.svgEls.text.getBoundingClientRect().height;\n\n        this.svgEls.panel.setAttribute(\"fill\", _this.o.backgroundColor);\n        this.svgEls.panel.setAttribute(\"width\", panelWidth);\n        this.svgEls.panel.setAttribute(\"height\", panelHeight);\n\n        this.svgEls.text.setAttribute(\"x\", panelWidth / 2);\n        this.svgEls.text.setAttribute(\"y\", panelHeight / 2);\n        this.svgEls.text.setAttribute(\"fill\", _this.o.fontColor);\n\n        this.svgEls.overlay.setAttribute(\"fill\", \"transparent\");\n        this.svgEls.overlay.setAttribute(\"width\", _this._getWidth());\n        this.svgEls.overlay.setAttribute(\"height\", _this._getHeight());\n    }\n\n    /* ============================================================================================== */\n    /*  INTERNAL FUNCTIONALITY METHODS\n    /* ============================================================================================== */\n\n    /**\n     * Function called when 'select all' is invoked.\n     */\n    _editSelectAll(ev) {\n        const _this = this;\n\n        ev.preventDefault();\n        ev.stopPropagation();\n        \n        this.svgEls.text.textContent = this.toString();\n\n        let textBRect = _this.svgEls.text.getBoundingClientRect();\n        let svgBRect = _this.svg.getBoundingClientRect();\n\n        _this.svgEls.textUnderlay.setAttribute(\"fill\", \"#f00\");\n        _this.svgEls.textUnderlay.setAttribute(\"x\", textBRect.x - svgBRect.x);\n        _this.svgEls.textUnderlay.setAttribute(\"y\", textBRect.y - svgBRect.y);\n        _this.svgEls.textUnderlay.setAttribute(\"width\", textBRect.width);\n        _this.svgEls.textUnderlay.setAttribute(\"height\", textBRect.height);\n\n        document.addEventListener(\"keydown\", makeEdit);\n        document.addEventListener(\"mousedown\", finishEditing);\n        document.addEventListener(\"touchstart\", finishEditing);\n\n        function makeEdit(ev) {\n            \n            let key = ev.key;\n            let str = \"\";\n\n            switch(key) {\n                \n                case \"-\":\n                case \"1\": case \"2\": case \"3\": case \"4\": case \"5\": \n                case \"6\": case \"7\": case \"8\": case \"9\": case \".\":\n                    str = str + key;\n                case \"Backspace\":\n                case \"Delete\":\n                    finishEditing(ev);\n                    _this._editText(str, 1);\n                    break;\n                case \"Enter\":\n                case \"Escape\":\n                    finishEditing(ev);\n                    break;\n                default: \n                    break;\n            }\n        }\n        \n        // Finish editing\n        function finishEditing(ev) {\n            ev.preventDefault();\n            ev.stopPropagation();\n\n            document.removeEventListener(\"keydown\", makeEdit);\n            document.removeEventListener(\"mousedown\", finishEditing);\n            document.removeEventListener(\"touchstart\", finishEditing);\n            _this.svgEls.textUnderlay.setAttribute(\"fill\", \"transparent\");\n        }\n    }\n\n    _editText(str, charNum) {\n    \n        const _this = this;\n\n        let prevTime = Date.now();\n\n        this.svg.removeEventListener(\"mousedown\", _this.handlers.touch);\n        this.svg.removeEventListener(\"touchstart\", _this.handlers.touch);\n        this.svg.addEventListener(\"mousedown\", checkDoubleTap);\n        this.svg.addEventListener(\"touchstart\", checkDoubleTap);\n        \n        this.svgEls.text.textContent = str;\n\n        let showCursorTimeoutID = null;\n        let hideCursorTimeoutID = null;\n\n        positionCursor();\n\n        document.addEventListener(\"keydown\", makeEdit);\n        document.addEventListener(\"mousedown\", finishEditing);\n        document.addEventListener(\"touchstart\", finishEditing);\n\n        function makeEdit(ev) {\n\n            let key = ev.key;\n            \n            switch(key) {     \n\n                case \"Backspace\":\n                    str = deletePrev();\n                    positionCursor();\n                    break;\n                case \"Delete\":\n                    str = deleteNext();\n                    positionCursor();\n                    break;\n                case \"ArrowLeft\":\n                    moveLeft();\n                    positionCursor();\n                    break;\n                case \"ArrowRight\":\n                    moveRight();\n                    positionCursor();\n                    break;\n                case \"ArrowUp\":\n                    increment();\n                    positionCursor();\n                    break;\n                case \"ArrowDown\":\n                    decrement();\n                    positionCursor();\n                    break;\n                case \"-\":\n                    str = insertMinus();\n                    positionCursor();\n                    break;\n                case \"1\": case \"2\": case \"3\": case \"4\": case \"5\": \n                case \"6\": case \"7\": case \"8\": case \"9\": case \".\":\n                    str = insertChar(key);\n                    positionCursor();\n                    break;\n                case \"Enter\":\n                case \"Escape\":\n                    console.log(\"Enter or escape\");\n                    finishEditing(ev);\n                    break;\n                default: \n                    break;\n            }\n\n            _this.svgEls.text.textContent = str;\n        }\n\n        // Check if the gesture is a double-tap\n        function checkDoubleTap(ev) {\n\n            if ((Date.now() - prevTime) < 250) {\n\n                finishEditing(ev);\n                _this._editSelectAll(ev);\n\n            } else {\n                \n                finishEditing(ev);\n                _this.handlers.touch(ev);\n            }\n\n            prevTime = Date.now();\n        }\n\n        // Delete previous character\n        function deletePrev() {\n            str = str.substring(0, charNum - 1) + str.substr(charNum);\n            charNum--;\n            return str;\n        }\n\n        // Delete next character\n        function deleteNext() {\n            str = str.substring(0, charNum) + str.substr(charNum + 1);\n            return str;\n        }\n\n        // Move cursor left\n        function moveLeft() {\n            charNum = Math.max(0, charNum - 1);\n        }\n\n        // Move cursor right\n        function moveRight() {\n            charNum = Math.min(str.length, charNum + 1);\n        }\n\n        // Increment current character\n        function increment() {\n            let power = _this._getPowerOfSelectedDigit(charNum);\n            str = (parseFloat(str) + Math.pow(10, power))\n                    .toFixed(_this.o.precision);\n        }\n\n        // Decrement current character\n        function decrement() {\n            let power = _this._getPowerOfSelectedDigit(charNum);\n            str = (parseFloat(str) - Math.pow(10, power))\n                    .toFixed(_this.o.precision);\n        }\n\n        // Insert minus sign\n        function insertMinus() {\n            if (charNum === 0) {\n                str = \"-\" + str;\n                charNum++;\n            }\n\n            return str;\n        }\n\n        // Insert a charactor\n        function insertChar(key) {\n            str = str.substring(0, charNum) + key + str.substr(charNum);\n            charNum++;\n            return str;\n        }\n\n        // Position the cursor\n        function positionCursor() {\n\n            if (showCursorTimeoutID !== null) {\n                clearTimeout(showCursorTimeoutID);\n                showCursorTimeoutID = null;\n            }\n\n            if (hideCursorTimeoutID !== null) {\n                clearTimeout(hideCursorTimeoutID);\n                hideCursorTimeoutID = null;\n            }\n\n            _this.svgEls.text.textContent = str;\n            let charBRect = _this.svgEls.text.getExtentOfChar(Math.min(charNum, (str.length - 1)));\n\n            _this.svgEls.cursor.setAttribute(\"height\", charBRect.height);\n\n            if (charNum == str.length) {\n                let charEndPos = _this.svgEls.text.getEndPositionOfChar(str.length - 1);\n                _this.svgEls.cursor.setAttribute(\"x\", charBRect.x + charBRect.width);\n            } else {\n                _this.svgEls.cursor.setAttribute(\"x\", charBRect.x - 0.5);\n            }\n            _this.svgEls.cursor.setAttribute(\"y\", charBRect.y);\n            _this.svgEls.cursor.setAttribute(\"width\", 1);\n\n            showCursor();\n        }\n\n        // Show the cursor\n        function showCursor() {\n            _this.svgEls.cursor.setAttribute(\"stroke\", _this.o.fontColor);\n            \n            if (hideCursorTimeoutID !== null) {\n                window.clearTimeout(hideCursorTimeoutID);\n                hideCursorTimeoutID = null;\n            }\n\n            hideCursorTimeoutID = window.setTimeout(hideCursor, 500);\n        }\n\n        // Hide the cursor\n        function hideCursor() {\n            _this.svgEls.cursor.setAttribute(\"stroke\", \"rgba(0,0,0,0)\");\n\n            if (showCursorTimeoutID !== null) {\n                window.clearTimeout(showCursorTimeoutID);\n                showCursorTimeoutID = null;\n            }\n\n            showCursorTimeoutID = window.setTimeout(showCursor, 500);\n        }\n\n        // Finish editing\n        function finishEditing(ev) {\n\n            ev.preventDefault();\n            ev.stopPropagation();\n\n            document.removeEventListener(\"keydown\", makeEdit);\n            document.removeEventListener(\"mousedown\", finishEditing);\n            document.removeEventListener(\"touchstart\", finishEditing);\n\n            if (showCursorTimeoutID !== null) {\n                window.clearTimeout(showCursorTimeoutID);\n                showCursorTimeoutID = null;\n            }\n\n            if (hideCursorTimeoutID !== null) {\n                window.clearTimeout(hideCursorTimeoutID);\n                hideCursorTimeoutID = null;\n            }\n\n            _this.svgEls.cursor.setAttribute(\"stroke\", \"rgba(0,0,0,0)\");\n            _this.svgEls.cursor.setAttribute(\"fill\", \"rgba(0,0,0,0)\");\n\n            _this.svg.removeEventListener(\"mousedown\", checkDoubleTap);\n            _this.svg.removeEventListener(\"touchstart\", checkDoubleTap);\n            _this.svg.addEventListener(\"mousedown\", _this.handlers.touch);\n            _this.svg.addEventListener(\"touchstart\", _this.handlers.touch);\n\n            if (ev.target === _this.svgEls.overlay) {\n\n                let charNum = _this._getSelectedCharNumber(ev.clientX, ev.clientY);\n                let charBRect = _this.svgEls.text.getExtentOfChar(Math.min(charNum, _this.svgEls.text.length - 1));\n                \n                let editStr = str\n\n                // If the click is past the mid-point of the character, we select the next char, bounded by the length of the string\n                if (ev.clientX > ((charBRect.x + (charBRect.x + charBRect.width)) * 0.55)) {\n                    charNum = charNum + 1;\n                }\n    \n                _this.svgEls.text.textContent = _this._editText(editStr, charNum); \n\n            } else {\n                \n                _this.setVal(parseFloat(str));\n            }         \n        }\n\n        return str;\n    }\n\n    /**\n     * Returns the number of the selected character in the text box based on the client mouse x and y position.\n     * @private\n     * @param {number} clientX \n     * @param {number} clientY \n     * @returns {number} - Index of the selected digit.\n     */\n    _getSelectedCharNumber(clientX, clientY) {\n\n        let svgBRect = this.svg.getBoundingClientRect();\n        let textBRect = this.svgEls.text.getBoundingClientRect();\n        let numChars = this.svgEls.text.getNumberOfChars();\n        let charNum = 0;\n\n        if (clientX <= textBRect.x) {\n            charNum = 0;\n        } else if (clientX >= (textBRect.x + textBRect.width)) {\n            charNum = numChars - 1;\n        } else {\n            let svgX = clientX - svgBRect.x;\n            let svgY = clientY - svgBRect.y;\n\n            let svgPoint = this.svg.createSVGPoint();\n            svgPoint.x = svgX;\n            svgPoint.y = svgY;\n\n            charNum = this.svgEls.text.getCharNumAtPosition(svgPoint);\n        }\n\n        // if we selected the \"minus\" sign of a negative number, select the first digit instead\n        if (this.getVal() < 0 && charNum == 0) {\n            charNum = 1;\n        }\n\n        return charNum;\n    }\n\n    /**\n     * Returns the power of the selected digit. \n     * @private\n     * @param {number} charNum - The index of the selected digit.\n     * @returns {number} - Power of the selected digit.\n     */\n    _getPowerOfSelectedDigit(charNum) {\n\n        let power;\n        let precision = this.o.precision;\n        let numChars = this.svgEls.text.getNumberOfChars();\n\n        if (precision > 0) {\n\n            // if the digit selected is to the left of the decimal point\n            if ((numChars - charNum) > (this.o.precision + 1)) {\n                power = ((numChars - (precision + 1)) - charNum) - 1;\n            } else {\n                power = -1 * ((precision + 1) - (numChars - charNum));\n            }\n        } else {\n            power = (numChars - charNum) - 1;\n        }\n\n        return power;\n    }\n\n\n}\n\nexport default Numberbox;\n\n\n// WEBPACK FOOTER //\n// ./src/ui/numberbox.js","import Widget from \"ui/core/widget\";\nimport Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\n\n/**\n * Class representing an piano keyboard widget\n *\n * @class\n * @implements {Widget}\n */\nclass Keyboard extends Widget {\n\n  /**\n   * @constructor\n   * @param {object} container - DOM container for the widget.\n   * @param {object} [o] - Options.\n   * @param {number} [o.bottomNote=48] - The bottom note (MIDI pitch) of the keyboard.\n   * @param {number} [o.topNote=71] - The top note (MIDI pitch) of the keyboard.\n   * @param {string} [o.keyBorderColor=\"#484848\"] - The color of the border separating the keys.\n   * @param {string} [o.blackKeyColor=\"#484848\"] - The color used for the black keys.\n   * @param {string} [o.whiteKeyColor=\"#fff\"] - The color used for the white keys.\n   * @param {string} [o.blackKeyActiveColor=\"#888\"] - The color used to represent an active black key.\n   * @param {string} [o.whiteKeyActiveColor=\"#333\"] - The color used to represent an active white key.\n   * @param {number} [o.blackKeyHeightAspect=0.6] - The aspect ratio of black key height to white key height.\n   * @param {number} [o.blackKeyWidthAspect=0.66] - The aspect ratio of black key width to white key width.\n   * @param {string} [o.orientation=\"horizontal\"] - The keyboard orientation. sible values are 'monophonic'\n   *                                       (only one active note at a time), or 'polyphonic'\n   *                                       (can have several active notes at a time).\n   * @param {boolean} [o.isEditable=true] - Boolean specifying whether the keyboard\n   *                                      is editable by the mouse or touch interactions.\n   *                                      A non-editable keyboard may be used as a visual\n   *                                      diagram, for example.\n   * @param {number | string} [o.maxPolyphony=\"no max\"] - The maximum number of keys that can be active at the\n   *                                                      same time. Values can be a number, or \"no max\".\n   */\n  constructor(container, o) {\n    super(container, o);\n    return this;\n  }\n\n  /* ==============================================================================================\n  *  PUBLIC API\n  */\n\n  /**\n   * Sets the options.\n   * @public\n   * @override\n   * @param {object} [o] - Options to set. See {@link Keyboard#constructor} for list of options. \n   */\n  setOptions(o) {\n    o = o || {};\n\n    // ensure that the bottom note is a white key (a black key cannot be at the edge when drawing the keyboard)\n    if (o.bottomNote !== undefined && !this._isWhiteKey(o.bottomNote)) {\n      --o.bottomNote;\n    }\n\n    // ensure that the bottom note is a white key (a black key cannot be at the edge when drawing the keyboard)\n    if (o.topNote !== undefined && !this._isWhiteKey(o.topNote)) {\n      ++o.topNote;\n    }\n\n    super.setOptions(o);\n  }\n\n  /**\n   * Returns the last note event.\n   * @public\n   * @override\n   * @returns {object} - An object representing the last note event that occured as {pitch, vel}\n   */\n  getVal() {\n    return Object.assign({}, this.lastNoteEvent);\n  }\n\n  /**\n   * Returns the currently active notes.\n   * @public\n   * @override\n   * @returns {array} - An array of active notes. Each element is a [pitch, vel] pair.\n   */\n  getActiveNotes() {\n    return this.getState().activeNotes.map(note => [ note.pitch, note.vel ]);\n  }\n\n  /**\n   * Sets the current keyboard state using an array of {pitch, val} objects.\n   * Same as setVal(), but will not cause an observer callback trigger.\n   * @public\n   * @override\n   * @param {array} newNote - New value (array representing active notes with each entry in the form {pitch, val}).\n   * @param {boolean} isVelToggled - A boolean indicating whether a non-zero vel of the same \n   *                                  pitch will turn a note off if it is turned on.\n   */\n  setInternalVal(newNote, isVelToggled) {\n    let newState = this._getNewStateFromNewNote(newNote, isVelToggled);\n    this.setInternalState(newState);\n  }\n\n  /**\n   * Sets the current keyboard state using an array of {pitch, val} objects.\n   * Same as setInternalVal(), but will cause an observer callback trigger.\n   * @public\n   * @param {array} newVal - New value (array representing active notes with each entry in the form {pitch, val}).\n   * @param {boolean} isVelToggled - A boolean indicating whether a non-zero vel of the same \n   *                                  pitch will turn a note off if it is turned on.\n   */\n  setVal(newNote, isVelToggled) {\n    let newState = this._getNewStateFromNewNote(newNote, isVelToggled);\n    this.setState(newState);\n  }\n\n  /* ==============================================================================================\n  *  INITIALIZATION METHODS\n  */\n\n  /**\n   * Initialize the options\n   * @override\n   * @private\n   */\n  _initOptions(o) {\n    // set the defaults\n    this.o = {\n      bottomNote: 48,\n      topNote: 71,\n      keyBorderColor: \"#484848\",\n      blackKeyColor: \"#484848\",\n      whiteKeyColor: \"#fff\",\n      blackKeyActiveColor: \"#999\",\n      whiteKeyActiveColor: \"#999\",\n      blackKeyHeightAspect: 0.6,\n      blackKeyWidthAspect: 0.66,\n      maxPolyphony: \"no max\",\n      orientation: \"horizontal\",\n      isEditable: true,\n      mouseSensitivity: 1.2\n    };\n\n    // override defaults with provided options\n    super._initOptions(o);\n  }  \n\n  /**\n   * Initialize state constraints\n   * @override\n   * @private\n   */\n  _initStateConstraints() {\n    const _this = this;\n\n    this.stateConstraints = new ConstraintSpec({\n      activeNotes: [{\n        pitch: new Constraint({ min: 0, max: 127 }),\n        vel: new Constraint({ min: 0, max: 127})\n      }]\n    });\n  }\n\n  /**\n   * Initializes the state.\n   * State is represented as an array of active notes, each of which is an object\n   * { pitch, vel }, where pitch is MIDI pitch (0 - 127) and vel is MIDI velocity\n   * (0 - 127). A vel of 0 is reported once for each note-off event, and not\n   * reported on subsequent callback notifications.\n   * @override\n   * @private\n   */\n  _initState() {\n    this.state = {\n      activeNotes: []\n    };\n\n    // Object representing the last note event that occured.\n    this.lastNoteEvent = {};\n  }\n\n  /**\n   * Initialize the svg elements\n   * @override\n   * @private\n   */\n  _initSvgEls() {\n    const _this = this;\n\n    this.svgEls = {\n      keys: []\n    };\n\n    this._update();\n  }\n\n  /**\n   * Updates the SVG elements. \n   * Adds or removes a number of SVG elements to match the current number of keys.\n   */\n   _updateSvgEls() {\n    let numKeys = this._getNumKeys();\n    \n    // add SVG elements representing keys to match current number of keys\n    for (let i = this.svgEls.keys.length; i < numKeys; ++i) {\n      this._addSvgKey();\n    }\n\n    // remove SVG elements representing keys to match current number of keys\n    for (let i = this.svgEls.keys.length; i > numKeys; ++i) {\n      this._removeSvgKey();\n    }\n  }\n\n  /**\n   * Initializes mouse and touch event handlers.\n   * @override\n   * @private\n   */\n  _initHandlers() {\n    const _this = this;\n\n    this.handlers = {\n      touch: function touch(ev) {\n        ev.preventDefault();\n\n        let touchVel = Math.ceil(127 * (_this._getKeyboardHeight() - _this._getRelativeY(ev.clientY)) / _this._getKeyboardHeight());\n        _this._touchKey(ev.target, touchVel);\n\n        for (let i = 0; i < _this.svgEls.keys.length; ++i) {\n          // activate / toggle a key on mouse enter\n          _this.svgEls.keys[i].addEventListener(\"mouseenter\", _this.handlers.touch);\n          _this.svgEls.keys[i].addEventListener(\"touchenter\", _this.handlers.touch);\n\n          _this.svgEls.keys[i].addEventListener(\"mouseup\", _this.handlers.release);\n          _this.svgEls.keys[i].addEventListener(\"touchend\", _this.handlers.release);\n        }\n      },\n      release: function release() {\n        for (let i = 0; i < _this.svgEls.keys.length; ++i) {\n          _this.svgEls.keys[i].removeEventListener(\"mouseenter\", _this.handlers.touch);\n          _this.svgEls.keys[i].removeEventListener(\"touchenter\", _this.handlers.touch);\n        }\n      }\n    };\n\n    for (let i = 0; i < this.svgEls.keys.length; ++i) {\n      this.svgEls.keys[i].addEventListener(\"mousedown\", this.handlers.touch);\n      this.svgEls.keys[i].addEventListener(\"touchdown\", this.handlers.touch);\n    }\n  }\n\n  /**\n   * \n   */\n  _touchKey(targetKey, vel) {\n    const _this = this;\n\n    let keyIdx = this.svgEls.keys.findIndex(key => key === targetKey);\n\n    let newNote = {\n      pitch: keyIdx + _this.o.bottomNote,\n      vel: vel \n    };\n\n    this.setVal(newNote, true);\n  }\n\n  /**\n   * Updates (redraws) component based on state.\n   * @override\n   * @private\n   */\n  _update() {\n    var x, y, width, height, fill, stroke;\n    let blackKeys = [];\n    \n    // an array of velocities representing all possible notes (vel 0 means note is off)\n    let notes = new Array(this._getNumKeys());\n    notes.fill(0);\n\n    // put value of 1 for all active notes in the note array\n    this.getState().activeNotes.forEach(activeNote => {\n      notes[activeNote.pitch - this.getOptions().bottomNote] = 1;  \n    });\n\n    this._updateSvgEls();\n\n    for (let keyIdx = 0, whiteKeyIdx = 0; keyIdx < this.svgEls.keys.length; ++keyIdx) {\n      let pitch = this._getPitchForKeyIdx(keyIdx);\n      let attr = {};\n\n      if (this._isWhiteKey(pitch)) {\n        attr.x = this._getWhiteKeyWidth() * whiteKeyIdx;\n        attr.y = 0;\n        attr.width = this._getWhiteKeyWidth();\n        attr.height = this._getKeyboardHeight();\n        attr.fill = (notes[keyIdx] === 0) ? \n            this.getOptions().whiteKeyColor\n          : this.getOptions().whiteKeyActiveColor;\n        attr.stroke = this.getOptions().keyBorderColor;\n\n        ++whiteKeyIdx;       \n      } else {\n        blackKeys.push(this.svgEls.keys[keyIdx]);\n\n        // black keys are offset by 2/3 of white key width, and are 2/3 width and height of black keys\n        attr.x = (this._getWhiteKeyWidth() * whiteKeyIdx) - ( this.getOptions().blackKeyWidthAspect * this._getWhiteKeyWidth() / 2 );\n        attr.y = 0;\n        attr.width = this.getOptions().blackKeyWidthAspect * this._getWhiteKeyWidth();\n        attr.height = this.getOptions().blackKeyHeightAspect * this._getKeyboardHeight();\n        attr.fill = (notes[keyIdx] === 0) ? \n            this.getOptions().blackKeyColor\n          : this.getOptions().blackKeyActiveColor;\n        attr.stroke = this.getOptions().keyBorderColor;\n      }\n\n      this._setKeyAttributes(keyIdx, attr);\n    }\n\n    // remove and reappend black keys so they are on top of the white keys\n    for (let i = 0; i < blackKeys.length; ++i) {\n      this.svg.removeChild(blackKeys[i]);\n      this.svg.appendChild(blackKeys[i]);\n    }\n  }\n\n  /* ===========================================================================\n  *  INTERNAL FUNCTIONALITY\n  */\n\n  /**\n   * Returns a newState object representing a new keyboard state based on a new note provided. \n   * @param {object} newNote - A note object of format { pitch: number, vel: number }.\n   * @param {number} newNote.pitch\n   * @param {number} newNote.vel\n   * @param {boolean} isVelToggled - A boolean indicating whether a non-zero vel of the same \n   *                                  pitch will turn a note off if it is turned on.\n   * @returns {object} An object representing the new state. \n   */\n  _getNewStateFromNewNote(newNote, isVelToggled) {\n    let newState = this.getState();\n    let noteIdx = newState.activeNotes.findIndex(note => note.pitch === newNote.pitch);\n    \n    if (noteIdx === -1) {\n      if (newNote.vel > 0) {\n        if (this.o.maxPolyphony === \"no max\" || (newState.activeNotes.length < this.o.maxPolyphony)) {\n          newState.activeNotes.push(newNote);\n        } else {\n          newState.activeNotes.splice(0, 1);\n          newState.activeNotes.push(newNote);\n        }\n      }\n    } else {\n      if (newNote.vel <= 0 || isVelToggled) {\n        newState.activeNotes.splice(noteIdx, 1);\n        newNote.vel = 0;\n      } else {\n        newState.activeNotes[noteIdx].vel = newNote.vel;\n      }\n    }\n\n    this.lastNoteEvent = newNote;\n\n    return newState;\n  }\n\n  /**\n   * Adds an SVG element representing a key.\n   */\n  _addSvgKey() {\n    let newKey = document.createElementNS(this.SVG_NS, \"rect\");\n    this.svg.appendChild(newKey);\n    this.svgEls.keys.push(newKey);\n    newKey.addEventListener(\"mousedown\", this.handlers.touch);\n    newKey.addEventListener(\"touchdown\", this.handlers.touch);\n  }\n\n  /**\n   * Removes an SVG element representing a key.\n   */\n  _removeSvgKey() {\n    let key = this.svgEls.keys[this.svgEls.keys.length - 1];\n\n    this.svg.removeChild(key);\n    key = null;\n    this.svgEls.keys.pop();\n  }\n\n  /* ===========================================================================\n  *  HELPER METHODS\n  */\n\n  /**\n   * Sets attributes for an SVG rectangle representing a key with the given index.\n   */\n  _setKeyAttributes(keyIdx, attr) {\n    this.svgEls.keys[keyIdx].setAttribute(\"x\", attr.x);\n    this.svgEls.keys[keyIdx].setAttribute(\"y\", attr.y);\n    this.svgEls.keys[keyIdx].setAttribute(\"width\", attr.width);\n    this.svgEls.keys[keyIdx].setAttribute(\"height\", attr.height);\n    this.svgEls.keys[keyIdx].setAttribute(\"fill\", attr.fill);\n    this.svgEls.keys[keyIdx].setAttribute(\"stroke\", attr.stroke);\n  }\n\n  /**\n   * Returns the width of the keyboard, taking orientation into account.\n   * If orientation is horizontal, width of the keyboard would equal\n   * width of the canvas. If orientation is vertical, width of the\n   * keyboard would equal the height of the canvas.\n   * @private\n   * @throws {Error} if o.orientation is not one of the allowed values.\n   */\n  _getKeyboardWidth() {\n    let orientation = this.getOptions().orientation;\n\n    if (orientation === \"horizontal\" || orientation === \"horizontal-mirrored\") {\n      return this._getWidth();\n    } else if (orientation === \"vertical\" || orientation === \"vertical-mirrored\") {\n      return this._getHeight();\n    } \n  }\n\n  /**\n   * Returns the height of the keyboard, taking orientation into account.\n   * If orientation is horizontal, height of the keyboard would equal\n   * height of the canvas. If orientation is vertical, height of the\n   * keyboard would equal the width of the canvas.\n   * @private\n   * @throws {Error} if o.orientation is not one of the allowed values.\n   */\n  _getKeyboardHeight() {\n    let orientation = this.getOptions().orientation;\n\n    if (orientation === \"horizontal\" || orientation === \"horizontal-mirrored\") {\n      return this._getHeight();\n    } else if (orientation === \"vertical\" || orientation === \"vertical-mirrored\") {\n      return this._getWidth();\n    } \n  }\n\n  /**\n   * Returns the MIDI note number for the given key number.\n   * @private\n   * @param {number} keyIdx - The index of the key to be queried.\n   * @returns {number} - MIDI note number for the given key number\n   */\n  _getPitchForKeyIdx(keyIdx) {\n    return this.getOptions().bottomNote + keyIdx;\n  }\n\n  /** \n   * Returns the total number of keys on the keyboard. \n   * @private\n   * @returns {number} - Total number of keys.\n   */\n  _getNumKeys() {\n    return (this.o.topNote - this.o.bottomNote) + 1;\n  }\n\n  /**  \n   * Returns the number of white keys on the keyboard.\n   * @private\n   * @returns {number} - Number of white keys. \n   */\n  _getNumWhiteKeys() {\n    let whiteKeyCount = 0;\n\n    for (let curNote = this.getOptions().bottomNote; curNote <= this.getOptions().topNote; ++curNote) {\n      if (this._isWhiteKey(curNote)) {\n        ++whiteKeyCount;\n      }\n    }\n\n    return whiteKeyCount;\n  }\n\n  /** \n   * Returns the width of each white key in px.\n   * @private\n   * @returns {number} - Width of each white key in px.\n   */\n  _getWhiteKeyWidth() {\n    return this._getKeyboardWidth() / this._getNumWhiteKeys();\n  }\n\n  /**\n   * Returns true if the given MIDI note number is a white key on the piano.\n   * @private\n   * @param {number} note - The MIDI note number for the given note. \n   * @returns {boolean} - True if the note is a white key, false if not.\n   */\n  _isWhiteKey(note) {\n    if (note % 12 === 0 || \n        note % 12 === 2 || \n        note % 12 === 4 || \n        note % 12 === 5 || \n        note % 12 === 7 || \n        note % 12 === 9 || \n        note % 12 === 11) {\n        return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default Keyboard;\n\n\n// WEBPACK FOOTER //\n// ./src/ui/keyboard.js","import Widget from \"ui/core/widget\";\nimport Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\n\n/**\n * Class representing an Dropmenu widget.\n * @class\n * @implements {Widget}\n */\nclass Dropmenu extends Widget {\n\n  /**\n   * @constructor\n   * @param {object} container - DOM container for the widget.\n   * @param {object} [o] - Options.\n   * @param {object} [o.menuItems=[]] - The items to populate the menu with.\n   * @param {string} [o.backgroundColor=\"#282828\"] - The background color.\n   * @param {string} [o.fontColor=\"#ccc\"] - The font color.\n   * @param {string} [o.fontSize=\"12px\"] - The font size.\n   * @param {string} [o.fontFamily=\"Arial\"] - The font family.\n   * @param {string} [o.menuItemFontSize=\"12px\"] - The font size for items in the opened drop-down menu.\n   * @param {string} [o.menuItemFontFamily=\"Arial\"] - The font family for items in the opened drop-down menu.\n   * @param {string} [o.selectedItemBackgroundColor=\"#f40\"] - The background cover for the selected (hovered) item in the opened drop-down menu.\n   * @param {string} [o.selectedItemFontColor=\"#fff\"] - The font color for the selected (hovered) item in the opened drop-down menu.\n   * @param {number} [o.menuItemHorizontalPadding=10] - Extra horizontal padding to add to each menu item.\n   * @param {number} [o.menuItemVerticalPadding=5] - Extra vertical padding to add to each menu item. \n   */\n  constructor(container, o) {\n    super(container, o);\n    return this;\n  }\n\n  /* ==============================================================================================\n  *  PUBLIC API\n  */\n\n  /**\n   * Returns the currently selected menu item index.\n   * @public @override\n   * @returns {number} - Index of the item currently selected.\n   */\n  getVal() {\n    return this.state.selectedItemIdx;\n  }\n\n  /**\n   * Returns the string representing the currently selected item.\n   * @public\n   * @returns {string} - The string representing the selected item.\n   */\n  getSelectedItem() {\n    return this.state.menuItems[this.state.selectedItemIdx];\n  }\n\n  /**\n   * Sets the currently selected menu item.\n   * Same as setVal(), but will not cause an observer callback trigger.\n   * @public @override\n   * @param {number} itemIdx - Index of the item to be selected.\n   */\n  setInternalVal(itemIdx) {\n    this.setInternalState({ selectedItemIdx: itemIdx });\n  }\n\n  /**\n   * Sets the currently selected menu item.\n   * Same as setInternalVal(), but will cause an observer callback trigger.\n   * @public @override\n   * @param {number} itemIdx - Index of the item to be selected.\n   */\n  setVal(itemIdx) {\n    this.setState({ selectedItemIdx: itemIdx });\n  }\n\n  /**\n   * Sets the selected menu item by index.\n   * Same as setInternalSelectionIdx(), but will cause an observer callback trigger.\n   * @param {number} itemIdx - Index of the item to be selected.\n   */\n  setSelectionIdx(itemIdx) {\n    this.setState({ selectedItemIdx: itemIdx });\n  }\n\n  /**\n   * Sets the selected menu item by index.\n   * Same as setSelectionIdx(), but will not cause an observer callback trigger.\n   * @param {number} itemIdx - Index of the item to be selected.\n   */\n  setInternalSelectionIdx(itemIdx) {\n    this.setInternalState({ selectedItemIdx: itemIdx });\n  }\n\n  /**\n   * Sets the selected menu item according to a string argument specifying which item to select.\n   * If the argument is not one of the menu items, the selection will not change.\n   * Same as setInternalSelectedItem(), but will cause and observer callback trigger.\n   * @param {string} item - The item to select\n   * @returns {number} - Index of the item selected.\n   */\n  setSelectedItem(item) {\n    let idx = this.state.menuItems.findIndex(menuItem => item === menuItem);\n\n    if (idx !== -1) {\n      this.setVal(idx);\n    } else {\n      idx = this.state.selectedItemIdx;\n    }\n\n    return idx;\n  }\n\n  /**\n   * Sets the selected menu item according to a string argument specifying which item to select.\n   * If the argument is not one of the menu items, the selection will not change.\n   * Same as setSelectedItem(), but will not cause and observer callback trigger.\n   * @param {string} item - The item to select\n   * @returns {number} - Index of the item selected.\n   */\n  setInternalSelectedItem(item) {\n    let idx = this.state.menuItems.findIndex(menuItem => item === menuItem);\n    \n    if (idx !== -1) {\n      this.setVal(idx);\n    } else {\n      idx = this.state.selectedItemIdx;\n    }\n\n    return idx;\n  }\n\n  /**\n   * Sets the list of available menu items.\n   * @public @override\n   * @param {array} menuItems - Array of menu items to use.\n   */\n  setMenuItems(menuItems) {\n    this.setState({ menuItems: menuItems});\n  }\n\n  /* ==============================================================================================\n  *  INITIALIZATION METHODS\n  */\n\n  /**\n   * Initializes the options.\n   * @private @override\n   */\n  _initOptions(o) {\n    // set the defaults\n    this.o = {\n      menuItems: [],\n      backgroundColor: \"#282828\",\n      fontColor: \"#ccc\",\n      fontSize: \"12px\",\n      fontFamily: \"Arial\",\n      menuItemFontSize: \"12px\",\n      menuItemFontFamily: \"Arial\",\n      menuItemVerticalPadding: 5, \n      menuItemHorizontalPadding: 10,\n      selectedItemBackgroundColor: \"#f40\",\n      selectedItemFontColor: \"#fff\",\n      mouseSensitivity: 1.2\n    };\n\n    // override defaults with provided options\n    super._initOptions(o);\n  }\n\n  /**\n   * Initializes state constraints.\n   * @private @override\n   */\n  _initStateConstraints() {\n    const _this = this;\n\n    this.stateConstraints = new ConstraintSpec({\n      menuItems: [new Constraint()],\n      selectedItemIdx: new Constraint(),\n      hasFocus: new Constraint()\n    });\n  }\n\n  /**\n   * Initializes the state.\n   * @private @override\n   */\n  _initState() {\n    this.state = {\n      menuItems: this.o.menuItems,\n      selectedItemIdx: 0,\n      hasFocus: false\n    };\n  }\n\n  /**\n   * Initializes the svg elements.\n   * @private @override\n   */\n  _initSvgEls() {\n    const _this = this;\n\n    /* The following components are used:\n     *  Panels are the background\n     *  Text is where the text lives\n     *  Overlays are transparent and are used to listen to mouse events\n     */\n    this.svgEls = {\n      menuTogglePanel: document.createElementNS(_this.SVG_NS, \"rect\"),\n      menuToggleText: document.createElementNS(_this.SVG_NS, \"text\"),\n      menuToggleOverlay: document.createElementNS(_this.SVG_NS, \"rect\"),\n      menuBodyCanvasContainer: document.createElement(\"div\"),\n      menuBodyCanvas: document.createElementNS(_this.SVG_NS, \"svg\"),\n      menuBodyPanel: document.createElementNS(_this.SVG_NS, \"rect\"),\n      menuItemPanels: [],\n      menuItemTextboxes: [],\n      menuItemOverlays: []\n    };\n\n    this.svg.appendChild(this.svgEls.menuTogglePanel);\n    this.svg.appendChild(this.svgEls.menuToggleText);\n    this.svg.appendChild(this.svgEls.menuToggleOverlay);\n\n    this.svgEls.menuToggleText.setAttribute(\"alignment-baseline\", \"middle\");\n\n    // menu body (the part that is hidden unless toggled)\n\n    this.svgEls.menuBodyCanvasContainer.style.position = \"relative\";\n    this.container.appendChild(this.svgEls.menuBodyCanvasContainer);\n    this.svgEls.menuBodyCanvas = document.createElementNS(_this.SVG_NS, \"svg\");\n    this.svgEls.menuBodyCanvasContainer.appendChild(this.svgEls.menuBodyCanvas);\n    this.svgEls.menuBodyCanvas.style.position = \"absolute\";\n    this.svgEls.menuBodyCanvas.style.transform = \"translateY(-5px)\";\n    this.svgEls.menuBodyCanvas.appendChild(this.svgEls.menuBodyPanel);\n\n    this._update();\n  }\n\n  /**\n   * Initializes mouse and touch event handlers.\n   * @private @override\n   */\n  _initHandlers() {\n    const _this = this;\n\n    this.handlers = {\n\n      touch: function touch(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        _this.handlers.focus(ev);\n      },\n\n      focus: function focus(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        _this.setInternalState({ hasFocus: true });\n\n        _this.svgEls.menuToggleOverlay.removeEventListener(\"mousedown\", _this.handlers.touch);\n        _this.svgEls.menuToggleOverlay.removeEventListener(\"touchstart\", _this.handlers.touch);\n        _this.svgEls.menuToggleOverlay.addEventListener(\"mousedown\", _this.handlers.blur);\n        _this.svgEls.menuToggleOverlay.addEventListener(\"touchstart\", _this.handlers.blur);\n       \n        document.body.addEventListener(\"mousedown\", _this.handlers.blur);\n        document.body.addEventListener(\"touchstart\", _this.handlers.blur);\n      },\n\n      blur: function blur(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        _this.setInternalState({ hasFocus: false });\n\n        _this.svgEls.menuToggleOverlay.removeEventListener(\"mousedown\", _this.handlers.blur);\n        _this.svgEls.menuToggleOverlay.removeEventListener(\"touchstart\", _this.handlers.blur);\n        _this.svgEls.menuToggleOverlay.addEventListener(\"mousedown\", _this.handlers.touch);\n        _this.svgEls.menuToggleOverlay.addEventListener(\"touchstart\", _this.handlers.touch);\n        document.body.removeEventListener(\"mousedown\", _this.handlers.blur);\n        document.body.removeEventListener(\"touchstart\", _this.handlers.blur);\n      },\n\n      mouseOverItem: function mouseOverItem(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        let targetOverlay = ev.target;\n        _this._mouseOverItem(targetOverlay);\n\n        targetOverlay.addEventListener(\"mouseleave\", _this.handlers.mouseLeaveItem);\n        targetOverlay.addEventListener(\"mouseup\", (ev) => {\n          _this.handlers.select(ev);\n          _this.handlers.blur(ev);\n        });\n        targetOverlay.addEventListener(\"touchend\", (ev) => {\n          _this.handlers.select(ev);\n          _this.handlers.blur(ev);\n        });\n        \n        document.body.removeEventListener(\"mousedown\", _this.handlers.blur);\n        document.body.removeEventListener(\"touchstart\", _this.handlers.blur);\n      },\n\n      mouseLeaveItem: function mouseLeaveItem(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        let targetOverlay = ev.target;   \n        _this._mouseLeaveItem(ev.target, false);\n\n        targetOverlay.removeEventListener(\"mouseleave\", _this.handlers.hoverOut);\n\n        document.body.addEventListener(\"mousedown\", _this.handlers.blur);\n        document.body.addEventListener(\"touchstart\", _this.handlers.blur);\n      },\n\n      select: function select(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        _this._selectItem(ev.target);\n      }\n    };\n\n    this.svgEls.menuToggleOverlay.addEventListener(\"mousedown\", this.handlers.touch);\n    this.svgEls.menuToggleOverlay.addEventListener(\"touchstart\", this.handlers.touch);\n  }\n\n  /**\n   * Updates (redraws) components based on state.\n   * @private @override\n   */\n  _update() {\n    const _this = this;\n\n    _this._updateEls();\n\n    for (let i = 0; i < _this.state.menuItems.length; ++i) {\n      _this.svgEls.menuItemTextboxes[i].textContent = _this.state.menuItems[i];\n    }\n\n    // Set attributes for the toggle area\n    this.svgEls.menuTogglePanel.setAttribute(\"fill\", _this.o.backgroundColor);\n    this.svgEls.menuTogglePanel.setAttribute(\"width\", _this._getWidth());\n    this.svgEls.menuTogglePanel.setAttribute(\"height\", _this._getHeight());\n\n    this.svgEls.menuToggleText.setAttribute(\"width\", _this._getWidth());\n    this.svgEls.menuToggleText.setAttribute(\"height\", _this._getHeight());\n    this.svgEls.menuToggleText.setAttribute(\"x\", 10);\n    this.svgEls.menuToggleText.setAttribute(\"y\", _this._getHeight() / 2);\n    this.svgEls.menuToggleText.setAttribute(\"fill\", _this.o.fontColor);\n\n    this.svgEls.menuToggleOverlay.setAttribute(\"fill\", \"transparent\");\n    this.svgEls.menuToggleOverlay.setAttribute(\"width\", _this._getWidth());\n    this.svgEls.menuToggleOverlay.setAttribute(\"height\", _this._getHeight());\n\n    this.svgEls.menuToggleText.textContent = _this.state.menuItems[_this.state.selectedItemIdx];\n    \n    // Set attributes for the menu body\n    if (this.state.hasFocus) {\n      this.svgEls.menuBodyCanvas.style.display = \"inline-block\";\n\n      // reappend the svg canvas for the menu body so that it appears on top of other elements\n      this.svgEls.menuBodyCanvasContainer.removeChild(this.svgEls.menuBodyCanvas);\n      this.svgEls.menuBodyCanvasContainer.appendChild(this.svgEls.menuBodyCanvas);\n\n      let menuItemDims = _this._calcMenuItemDims();\n      let menuDims = {\n        height: menuItemDims.height * _this.state.menuItems.length, \n        width: menuItemDims.width\n      };\n\n      this.svgEls.menuBodyCanvas.setAttribute(\"width\", menuDims.width);\n      this.svgEls.menuBodyCanvas.setAttribute(\"height\", menuDims.height);\n      this.svgEls.menuBodyCanvas.style.left = 0;\n\n      this.svgEls.menuBodyPanel.setAttribute(\"width\", menuDims.width);\n      this.svgEls.menuBodyPanel.setAttribute(\"height\", menuDims.height);\n      this.svgEls.menuBodyPanel.setAttribute(\"x\", 0);\n      this.svgEls.menuBodyPanel.setAttribute(\"y\", 0);\n      this.svgEls.menuBodyPanel.setAttribute(\"fill\", this.o.backgroundColor);\n\n      for (let i = 0; i < this.state.menuItems.length; ++i) {\n        let curPanel = this.svgEls.menuItemPanels[i];\n        let curTextbox = this.svgEls.menuItemTextboxes[i];\n        let curOverlay = this.svgEls.menuItemOverlays[i];\n\n        curPanel.setAttribute(\"x\", 0);\n        curPanel.setAttribute(\"y\", i * menuItemDims.height);\n        curPanel.setAttribute(\"width\", menuItemDims.width);\n        curPanel.setAttribute(\"height\", menuItemDims.height);\n        curPanel.setAttribute(\"fill\", \"transparent\");\n        curTextbox.setAttribute(\"alignment-baseline\", \"middle\");\n        curTextbox.setAttribute(\"fill\", _this.o.fontColor);\n        curTextbox.setAttribute(\"x\", 10);\n        curTextbox.setAttribute(\"y\", ((i + 1) * menuItemDims.height) - (menuItemDims.height / 2));\n        curOverlay.setAttribute(\"x\", 0);\n        curOverlay.setAttribute(\"y\", i * menuItemDims.height);\n        curOverlay.setAttribute(\"width\", menuItemDims.width);\n        curOverlay.setAttribute(\"height\", menuItemDims.height);\n        curOverlay.setAttribute(\"fill\", \"transparent\");  \n      }\n    } else {\n      this.svgEls.menuBodyCanvas.style.display = \"none\";\n    }\n  }\n\n  /**\n   * Updates elements to match SVG representation with the state.\n   * @private\n   */\n  _updateEls() {\n    const _this = this;\n\n    for (let i = this.svgEls.menuItemTextboxes.length; i < this.state.menuItems.length; ++i) {\n      _this._addSvgMenuItem();\n    }\n\n    for (let i = this.state.menuItems.length; i > this.svgEls.menuItemTextboxes.length ; --i) {\n      _this._removeSvgMenuItem();\n    }\n  }\n\n  /* ==============================================================================================\n  *  INTERNAL FUNCTIONALITY METHODS\n  */\n\n  /**\n   * Handles mouse over event for menu item.\n   * @private\n   * @param {SvgElement} targetOverlay - The overlay of the item being hovered.\n   */\n  _mouseOverItem(targetOverlay) {\n    const _this = this;\n\n    let idx = _this.svgEls.menuItemOverlays.findIndex(overlay => overlay === targetOverlay);\n\n    if (idx !== -1) {\n      let targetPanel = _this.svgEls.menuItemPanels[idx];\n      let targetTextbox = _this.svgEls.menuItemTextboxes[idx];\n\n      targetPanel.setAttribute(\"fill\", _this.o.selectedItemBackgroundColor);\n      targetTextbox.setAttribute(\"fill\", _this.o.selectedItemFontColor);\n    }\n  }\n\n  /**\n   * Handles mouse leave event for menu item.\n   * @private\n   * @param {SvgElement} targetOverlay - The overlay of the target item.\n   */\n  _mouseLeaveItem(targetOverlay) {\n    const _this = this;\n    \n    let idx = _this.svgEls.menuItemOverlays.findIndex(overlay => overlay === targetOverlay);\n\n    if (idx !== -1) {\n      let targetPanel = _this.svgEls.menuItemPanels[idx];\n      let targetTextbox = _this.svgEls.menuItemTextboxes[idx];\n\n      targetPanel.setAttribute(\"fill\", \"transparent\");\n      targetTextbox.setAttribute(\"fill\", _this.o.fontColor);      \n    }\n  }\n\n  /**\n   * Adds svg elements representing a menu item.\n   * @private\n   */\n  _addSvgMenuItem() {\n    const _this = this;\n\n    let newItemText = document.createElementNS(this.SVG_NS, \"text\");\n    let newItemPanel = document.createElementNS(this.SVG_NS, \"rect\");\n    let newItemOverlay = document.createElementNS(this.SVG_NS, \"rect\");\n    \n    this.svgEls.menuItemTextboxes.push(newItemText);\n    this.svgEls.menuItemPanels.push(newItemPanel);\n    this.svgEls.menuItemOverlays.push(newItemOverlay);\n\n    this.svgEls.menuBodyCanvas.appendChild(newItemPanel);\n    this.svgEls.menuBodyCanvas.appendChild(newItemText);\n    this.svgEls.menuBodyCanvas.appendChild(newItemOverlay);\n\n    newItemOverlay.addEventListener(\"mouseenter\", (ev) => { _this.handlers.mouseOverItem(ev); });\n  }\n\n  /**\n   * Removes svg elements representing a menu item.\n   * @private\n   */\n  _removeSvgMenuItem() {\n    let targetItemTexbox = this.svgEls.menuItemTextboxes.pop();\n    let targetItemPanel = this.svgEls.menuItemPanels.pop();\n    let targetItemOverlay = this.svgEls.menuItemPanels.pop();\n\n    this.svgEls.menuBodyCanvas.removeChild(targetItemTexbox);\n    this.svgEls.menuBodyCanvas.removeChild(targetItemPanel);\n    this.svgEls.menuBodyCanvas.removeChild(targetItemOverlay);\n\n    targetItemTexbox = null;\n    targetItemPanel = null;\n    targetItemOverlay = null;\n  }\n\n  /**\n   * Calculate the height of each menu item.\n   * @private\n   * @returns {number} - Height in px.\n   */\n  _calcMenuItemDims() {\n    let maxHeight = 0;\n    let maxWidth = 0;\n    \n    this.svgEls.menuItemTextboxes.forEach(item => {\n      let bbox = item.getBoundingClientRect();\n      maxHeight = maxHeight > bbox.height ? maxHeight : bbox.height;\n      maxWidth  = maxWidth > bbox.width ? maxWidth : bbox.width;\n    });\n\n    maxWidth = Math.max(maxWidth, this._getWidth());\n\n    // add some extra padding\n    maxHeight += this.o.menuItemVerticalPadding;\n    maxWidth += this.o.menuItemHorizontalPadding;\n\n    return { width: maxWidth, height: maxHeight };\n  }\n\n  /**\n   * Marks a menu element as selected.\n   * @private\n   * @param {SvgElement} targetOverlay \n   */\n  _selectItem(targetOverlay) {\n    const _this = this;\n\n    let idx = _this.svgEls.menuItemOverlays.findIndex(overlay => overlay === targetOverlay);\n\n    if (idx !== -1) {\n      _this.setState({ selectedItemIdx: idx });\n    }\n  }\n\n}\n\nexport default Dropmenu;\n\n\n// WEBPACK FOOTER //\n// ./src/ui/dropmenu.js","import Widget from \"ui/core/widget\";\nimport Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\n\n/**\n * Class representing a Multislider widget.\n * @class\n * @implements {Widget}\n */\nclass Multislider extends Widget {\n\n  /**\n   * @constructor\n   * @param {object} container - DOM container for the widget.\n   * @param {object} [o] - Options.\n   * @param {number} [o.numSliders=10] - Number of sliders.\n   * @param {number} [o.minVal=0] - Minimum slider value.\n   * @param {number} [o.maxVal=127] - Maximum slider value.\n   * @param {array<string>} [o.sliderColors=[\"#000\"]] - Slider colors, specified as an array of color values.\n   *                                                    e.g. to get a black-white-black-white zebra pattern, specify\n   *                                                    ['black', 'white']\n   * @param {string} [o.backgroundColor=\"#fff\"] - Background color.\n   */\n  constructor(container, o) {\n    super(container, o);\n    return this;\n  }\n\n  /* ===========================================================================\n  *  INITIALIZATION METHODS\n  */\n\n  /**\n   * Initialize the options\n   * @override\n   * @protected\n   */\n  _initOptions(o) {\n    // set the defaults\n    this.o = {\n      numSliders: 10,\n      minVal: 0,\n      maxVal: 127,\n      sliderColors: [\"#f40\", \"#f50\"],\n      backgroundColor: \"#fff\",\n      mouseSensitivity: 1.2\n    };\n\n    // override defaults with provided options\n    super._initOptions(o);\n  }\n\n  /**\n   * Initialize state constraints\n   * @override\n   * @protected\n   */\n  _initStateConstraints() {\n    const _this = this;\n\n    this.stateConstraints = new ConstraintSpec({\n      sliderVals: [new Constraint({ \n        min: _this.o.minVal, \n        max: _this.o.maxVal,\n        transform: (num) => num.toFixed(0) \n      })]\n    });\n  }\n\n  /**\n   * Initialize state\n   * @override\n   * @protected\n   */\n  _initState() {\n    this.state = {\n      sliderVals: []\n    };\n  }\n\n  /**\n   * Initialize the svg elements\n   * @override\n   * @protected\n   */\n  _initSvgEls() {\n    const _this = this;\n\n    this.svgEls = {\n      panel: document.createElementNS(this.SVG_NS, \"rect\"),\n      sliders: [],\n      sliderPanels: []\n    };\n\n    this._appendSvgEls();\n    this._update();\n  }\n\n  /**\n   * Initialize mouse and touch event handlers\n   * @override\n   * @protected\n   */\n  _initHandlers() {\n    const _this = this;\n\n    this.handlers = {\n      touch: function touch(ev) {\n        ev.preventDefault();\n\n        let y = _this._getHeight() - _this._getRelativeY(ev.clientY);\n\n        _this._setSliderVal(ev.target, y);\n\n        for (let i = 0; i < _this.svgEls.sliderPanels.length; ++i) {\n          _this.svgEls.sliderPanels[i].addEventListener(\"mousemove\", _this.handlers.move);\n          _this.svgEls.sliderPanels[i].addEventListener(\"touchmove\", _this.handlers.move);\n\n        }\n\n        document.addEventListener(\"mouseup\", _this.handlers.release);\n        document.addEventListener(\"touchend\", _this.handlers.release);\n      },\n\n      move: function move(ev) {\n        ev.preventDefault();\n              \n        let y = _this._getHeight() - _this._getRelativeY(ev.clientY);\n        _this._setSliderVal(ev.target, y);\n      },\n\n      release: function release(ev) {\n        ev.preventDefault();\n\n        for (let i = 0; i < _this.svgEls.sliderPanels.length; ++i) {\n          _this.svgEls.sliderPanels[i].removeEventListener(\"mousemove\", _this.handlers.move);\n          _this.svgEls.sliderPanels[i].removeEventListener(\"touchmove\", _this.handlers.move);\n        }\n      }\n    };\n\n    for (let i = 0; i < this.svgEls.sliderPanels.length; ++i) {\n      this.svgEls.sliderPanels[i].addEventListener(\"mousedown\", this.handlers.touch);\n      this.svgEls.sliderPanels[i].addEventListener(\"touchstart\", this.handlers.touch);\n    }\n  }\n\n  /**\n   * Update (redraw) component based on state.\n   * @override\n   * @protected\n   */\n  _update() {\n    const _this = this;\n\n    _this._updateEls();\n  \n    for (let i = 0; i < this.o.numSliders; ++i) {\n      let sliderPos = _this._calcSliderPos(i);\n\n      this.svgEls.sliders[i].setAttribute(\"x\", sliderPos.x);\n      this.svgEls.sliders[i].setAttribute(\"y\", sliderPos.y);\n      this.svgEls.sliders[i].setAttribute(\"width\", _this._calcSliderWidth());\n      this.svgEls.sliders[i].setAttribute(\"height\", _this._calcSliderHeight(i));\n      this.svgEls.sliders[i].setAttribute(\"fill\", this.o.sliderColors[i % this.o.sliderColors.length]);\n\n      this.svgEls.sliderPanels[i].setAttribute(\"x\", sliderPos.x);\n      this.svgEls.sliderPanels[i].setAttribute(\"y\", 0);\n      this.svgEls.sliderPanels[i].setAttribute(\"width\", _this._calcSliderWidth());\n      this.svgEls.sliderPanels[i].setAttribute(\"height\", _this._getHeight());\n      this.svgEls.sliderPanels[i].setAttribute(\"fill\", \"transparent\");\n    }\n\n    // set background panel color\n    this.svgEls.panel.setAttribute(\"x\", 0);\n    this.svgEls.panel.setAttribute(\"y\", 0);\n    this.svgEls.panel.setAttribute(\"width\", _this._getWidth());\n    this.svgEls.panel.setAttribute(\"height\", _this._getHeight());\n    this.svgEls.panel.setAttribute(\"fill\", this.o.backgroundColor);\n  }\n\n  /**\n   * Updates the SVG elements and state containers. \n   * Adds or removes a number of SVG elements and state containers to match the current number of sliders.\n   * @private\n   */\n  _updateEls() {\n    let numSliders = this.o.numSliders;\n\n    // add SVG elements representing sliders to match current number of sliders\n    for (let i = this.state.sliderVals.length; i < numSliders; ++i) {\n      this.state.sliderVals.push(this.o.minVal);\n      this._addSvgSlider();\n    }\n\n    // remove SVG elements representing sliders to match current number of sliders\n    for (let i = this.state.sliderVals.length; i > numSliders; --i) {\n      this.state.sliderVals.pop();\n      this._removeSvgSlider();\n    }\n  }\n\n  /* ===========================================================================\n  *  PUBLIC API\n  */\n\n  /**\n   * Get public representation of the state.\n   * @abstract\n   * @public\n   * @returns {array} - An array of slider values.\n   */\n  getVal() {\n    return this.getState().sliderVals;\n  }\n\n  /**\n   * Set the current state in a format specific to each widget.\n   * Same as setVal(), but will not cause an observer callback trigger.\n   * @abstract @public\n   * @param {array} newSliderVals - An array representing the new slider values\n   */\n  setInternalVal(newSliderVals) {\n    let newState = {\n      sliderVals: newSliderVals\n    };\n    this.setInternalState(newState);\n  }\n\n  /**\n   * Set the current state in a format specific to each widget.\n   * Same as setInternalVal(), but will cause an observer callback trigger.\n   * @abstract @public\n   * @param {array} newSliderVals - An array representing the new slider values\n   */\n  setVal(newSliderVals) {\n    let newState = {\n      sliderVals: newSliderVals\n    };\n    this.setState(newState);\n  }\n\n  /* ===========================================================================\n  *  HELPER METHODS\n  */\n\n  /**\n   * Adds an svg element representing a slider.\n   * @private \n   */\n  _addSvgSlider() {\n    let _this = this;\n\n    let newSlider = document.createElementNS(this.SVG_NS, \"rect\");\n    let newSliderPanel = document.createElementNS(this.SVG_NS, \"rect\");\n    this.svg.appendChild(newSlider);\n    this.svg.appendChild(newSliderPanel);\n    this.svgEls.sliders.push(newSlider);\n    this.svgEls.sliderPanels.push(newSliderPanel);\n\n    newSliderPanel.addEventListener(\"mousedown\", _this.handlers.touch);\n    newSliderPanel.addEventListener(\"touchstart\", _this.handlers.touch);\n  }\n\n  /**\n   * Remove an SVG slider element.\n   * @private \n   */\n  _removeSvgSlider() {\n    let targetSlider = this.svgEls.sliders.pop();\n    let targetSliderPanel = this.svgEls.sliderPanels.pop();\n    this.svg.removeChild(targetSliderPanel);\n    this.svg.removeChild(targetSlider);\n    targetSlider = null;\n    targetSliderPanel = null;\n  }\n\n  /**\n   * Calculate the width of each slider.\n   * Each slider's width is width of multislider / number of sliders.\n   * @private\n   * @returns {number} - Width of each slider in px. \n   */\n  _calcSliderWidth() {\n    return this._getWidth() / this.o.numSliders;\n  }\n\n  /**\n   * Calculate the position for a given slider.\n   * @private\n   * @param {number} idx - Index of the slider (left to right).\n   * @returns {object} - Object representing the {x, y} position.\n   */\n  _calcSliderPos(idx) {\n    const _this = this;\n\n    return {\n      x: _this._calcSliderWidth() * idx, \n      y: _this._getHeight() - _this._calcSliderHeight(idx)\n    };\n  }\n\n  /**\n   * Calculate the slider height.\n   * @private\n   * @param {number} idx - Index of the slider.\n   * @returns {number} - Height of the slider in px.\n   */\n  _calcSliderHeight(idx) {\n    return (this.state.sliderVals[idx] / (this.o.maxVal - this.o.minVal)) * this._getHeight(); \n  }\n\n  /**\n   * Set value for a slider based on y position of a click event.\n   * @param {object} targetSliderPanel - The panel that registered the event. \n   * @param {number} y - Y-position of the event. \n   */\n  _setSliderVal(targetSliderPanel, y) {\n    const _this = this;\n    \n    let targetIdx = this.svgEls.sliderPanels.findIndex(sliderPanel => sliderPanel === targetSliderPanel);\n    let newVal = (y / (this._getHeight())) * (this.o.maxVal - this.o.minVal) + this.o.minVal;\n\n    let newState = {\n      sliderVals: _this.state.sliderVals.map((val, idx) => {\n        return (idx === targetIdx) ? newVal : val;\n      })\n    };\n\n    this.setState(newState);\n  }\n}\n\nexport default Multislider;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/multislider.js","import Widget from \"ui/core/widget\";\nimport Constraint from \"util/constraint\";\nimport ConstraintSpec from \"util/constraint-def\";\n\n/**\n * Class representing a Volume Meter widget.\n * @class\n * @implements {Widget}\n */\nclass Meter extends Widget {\n\n  /**\n   * @constructor\n   * @param {object} container - DOM container for the widget.\n   * @param {AudioContext} audioContext - The audio context to be used.\n   * @param {object} [o] - Options object.\n   * @param {string} [o.backgroundColor=\"#282828\"] - The background color. \n   * @param {number} [o.initAmplitude=0] - The initial amplitude to be displayed (range of 0. - 1.)\n   */\n  constructor(container, audioCtx, o) {\n    o = o || {};\n\n    super(container, o);\n\n    // remove the svg since we are using canvas here\n    this.container.removeChild(this.svg);\n    this.svg = null;\n\n    this._initCanvasElements();\n    this._initAudioModules(audioCtx);\n    this._initOptions(o);\n\n    return this;\n  }\n\n  /* ===========================================================================\n  *  INITIALIZATION METHODS\n  */\n\n  /**\n   * Initialize the options.\n   * @override\n   * @private\n   */\n  _initOptions(o) {\n    // set the defaults\n    this.o = {\n      backgroundColor: \"#282828\",\n      initAmplitude: 0\n    };\n\n    // override defaults with provided options\n    super._initOptions(o);\n  }\n\n  /**\n   * Initialize the audio modules necessary to analyse the volume.\n   * @param {AudioContext} audioCtx - The audio context to use.\n   */\n  _initAudioModules(audioCtx) {\n    const _this = this;\n\n    this.audioCtx = audioCtx;\n    \n    // keep track of audio values\n    this.amplitude = 0;\n    this.prevAmplitude = 0;\n    this.peak = 0;\n    this.peakSetTime = audioCtx.currentTime;\n    \n    // create the script processor\n    // TODO: ScriptProcessorNode is soon to be derpecated and replaced by AudioWorker\n    this.scriptProcessor = this.audioCtx.createScriptProcessor(512, 1, 1);\n    this.scriptProcessor.connect(this.audioCtx.destination);\n    this.scriptProcessor.onaudioprocess = function(e) {\n      _this.amplitude = _this._calcAmplitude(e.inputBuffer.getChannelData(0));\n      _this.peak = _this._calcPeak();\n    };\n\n    this.input = this.scriptProcessor;\n  }\n\n  /**\n   * Initialize the canvas elements.\n   * @private\n   */\n  _initCanvasElements() {\n    if (this.canvas === undefined) {\n      this.canvas = document.createElement(\"canvas\");\n      this.container.appendChild(this.canvas);\n      this.ctx = this.canvas.getContext(\"2d\");\n    }\n  \n    let containerDims = this.container.getBoundingClientRect();\n    \n    this.canvas.setAttribute(\"width\", containerDims.width);\n    this.canvas.setAttribute(\"height\", containerDims.height);\n\n    this.ledGradient = this.ctx.createLinearGradient(0, this.canvas.height, 0, 0);\n    this.ledGradient.addColorStop(0, 'green');\n    this.ledGradient.addColorStop(0.6, 'lightgreen');\n    this.ledGradient.addColorStop(0.8, 'yellow');\n    this.ledGradient.addColorStop(1, 'red');\n\n    this._update();\n  }\n\n  /**\n   * Update (redraw) component based on state.\n   * @override\n   * @private\n   */\n  _update() {\n    const _this = this;\n\n    let containerDims = this.container.getBoundingClientRect();\n    let width = containerDims.width;\n    let height = containerDims.height;\n\n    redraw();\n\n    function redraw() {\n      let ledHeight = height * _this.amplitude;   \n      let peakYPos = height * _this.peak;\n\n      _this.ctx.clearRect(0, 0, width, height);\n      \n      // draw the background\n      _this.ctx.fillStyle = _this.o.backgroundColor;\n      _this.ctx.fillRect(0, 0, width, height);\n\n      // draw the led\n      _this.ctx.fillStyle = _this.ledGradient;\n      _this.ctx.fillRect(0, height - ledHeight, width, ledHeight);\n\n      // draw the peak\n      _this.ctx.fillStyle = _this.ledGradient;\n      _this.ctx.fillRect(0, peakYPos, width, 10);\n      \n      window.requestAnimationFrame(redraw);\n    } \n  }\n\n  /* ===========================================================================\n  *  PUBLIC API\n  */\n\n  /**\n   * Recieve audio from a source.\n   * @param {AudioNode} audioSource - The audio source to connect.\n   */\n  receiveAudioFrom(audioSource) {\n    audioSource.connect(this.scriptProcessor);\n  }\n\n  /* ===========================================================================\n  *  HELPER METHODS\n  */\n\n  /**\n   * Calculate the amplitude for a given audio buffer\n   * @param {Float32Array} buffer\n   */\n  _calcAmplitude(buffer) {\n    let sum = 0;\n    \n    for (let i = 0; i < buffer.length; ++i) {\n      sum += buffer[i] * buffer[i];\n    }\n\n    return Math.sqrt(sum / buffer.length); \n  }\n\n  /**\n   * Calculate the current peak\n   */\n  _calcPeak() {\n\n    // calculate the peak position\n    // special cases - peak = -1 means peak expired and waiting for amplitude to rise\n    // peak = 0 means amplitude is rising, waiting for peak\n    if (this.amplitude < this.prevAmplitude) {\n      this.peak = this.prevAmplitude;\n      this.peakSetTime = this.audioCtx.currentTime;\n    } else if (this.amplitude > this.prevAmplitude) {\n      this.peak = 0;\n    }\n\n    // draw the peak for 2 seconds, then remove it\n    if (this.audioCtx.currentTime - this.peakSetTime > 2 && this.peak !== 0) {\n      this.peak = -1;\n    }\n\n    this.prevAmplitude = this.amplitude;\n  }\n}\n\nexport default Meter;\n\n\n// WEBPACK FOOTER //\n// ./src/ui/meter.js","import WidgetDial from \"ui/dial\";\nimport EnvelopeGraph from \"ui/graph\";\nimport Keyboard from \"ui/keyboard\";\nimport Multislider from \"ui/multislider\";\nimport Dropmenu from \"ui/dropmenu\";\nimport Slider from \"ui/slider\";\nimport Meter from \"ui/meter\";\nimport Numberbox from \"ui/numberbox\";\n\n// Add toggles to open detail views\nlet detailsToggles = document.getElementsByClassName(\"details-toggle\");\nfor (let i = 0; i < detailsToggles.length; i++) {\n    \n    let toggle = detailsToggles[i];\n    \n    let detailsContainer = toggle.parentNode.getElementsByClassName(\"details\")[0];\n\n    toggle.addEventListener(\"mouseup\", toggleDetails);\n    toggle.addEventListener(\"touchend\", toggleDetails);\n\n    function toggleDetails() {\n        detailsContainer.classList.toggle(\"opened\");\n    }\n}\n\n/** Dial */\nlet dialContainer = document.getElementById(\"dial\");\nlet dialDisplay = dialContainer.nextElementSibling;\nlet dial = new WidgetDial(dialContainer);\ndial.addObserver((state) => {\n    dialDisplay.innerHTML = state;\n});\ndial.setVal(300);\n\n/** Graph */\nlet envelopeGraphContainer = document.getElementById(\"graph\");\nlet envelopeGraphDisplay = document.getElementById(\"graph-display\");\nlet envelopeGraph = new EnvelopeGraph(envelopeGraphContainer);\nenvelopeGraph.addObserver(function (state) {\n    envelopeGraphDisplay.innerHTML = state.map((xyPair) => \" [\" + xyPair[0].toFixed(1) + \", \" + xyPair[1].toFixed(1) + \"]\");\n});\nenvelopeGraph.setVal([[0.0, 0.0], [5.3, 65.9], [10.7, 37.3], [16.5, 26.5], [26.0, 37.9], [35.8, 17.2],\n[45.3, 69.2], [49.8, 53.9], [53.3, 27.2], [61.3, 15.9], [69.3, 25.9], [74.7, 39.9], [79.5, 47.9],\n[83.2, 33.9], [86.2, 25.9], [91.0, 19.2], [92.0, 28.5], [93.0, 44.5], [97.3, 81.9], [100.0, 0.0]]\n);\n\n/** Keyboard */\nlet keyboardContainer = document.getElementById(\"keyboard\");\nlet keyboardDisplay = document.getElementById(\"keyboard-display\");\nkeyboardContainer.style.backgroundColor = \"red\";\nlet keyboard = new Keyboard(keyboardContainer, {\n    bottomNote: 36,\n    topNote: 83\n});\nkeyboard.addObserver(function (note) {\n    keyboardDisplay.innerHTML = \"Pitch: \" + note.pitch + \" Vel: \" + note.vel + \"<br>\" +\n        \"Active Notes: \" + keyboard.getActiveNotes().map(an => \"[ \" + an[0] + \", \" + an[1] + \" ]\");\n});\nkeyboard.setVal({ pitch: 60, vel: 100 });\nkeyboard.setVal({ pitch: 64, vel: 100 });\nkeyboard.setVal({ pitch: 67, vel: 100 });\n\n\n/** Multislider */\nlet multisliderContainer = document.getElementById(\"multislider\");\nlet multisliderDisplay = document.getElementById(\"multislider-display\");\nlet multislider = new Multislider(multisliderContainer, {});\nmultislider.addObserver(function (sliderVals) {\n    multisliderDisplay.innerHTML = sliderVals.map(val => \" \" + val);\n});\nmultislider.setState({ sliderVals: [10, 50, 97, 81, 119, 81, 26, 114, 74, 47] });\n\n/** Slider */\nlet sliderContainer = document.getElementById(\"slider\");\nlet sliderDisplay = document.getElementById(\"slider-display\");\nlet slider = new Slider(sliderContainer, {});\nslider.addObserver(function (sliderVal) {\n    sliderDisplay.innerHTML = sliderVal;\n});\nslider.setVal(30);\n\n/** Meter */\nlet meterContainer = document.getElementById(\"meter\");\nlet meterDisplay = document.getElementById(\"meter-display\");\n\nlet audioCtx = new AudioContext();\n\nlet meter = new Meter(meterContainer, audioCtx, {});\n\nlet osc = audioCtx.createOscillator();\nlet lfo1 = audioCtx.createOscillator();\nlet lfo2 = audioCtx.createOscillator();\nlet amp1 = audioCtx.createGain();\nlet amp2 = audioCtx.createGain();\nlet amp3 = audioCtx.createGain();\n\nlfo1.frequency.value = 0.5;\nlfo2.frequency.value = 0.1;\namp3.gain.value = 0.5;\nosc.frequency.value = 220;\n\nlfo1.connect(amp1.gain);\nlfo2.connect(amp1);\namp1.connect(amp2.gain);\nosc.connect(amp2);\namp2.connect(amp3);\nmeter.receiveAudioFrom(amp3);\n\nlfo1.start();\nlfo2.start();\nosc.start();\n\n/** Dropmenu */\nlet dropmenuContainer = document.getElementById(\"dropmenu\");\nlet dropmenuDisplay = document.getElementById(\"dropmenu-display\");\nlet dropmenu = new Dropmenu(dropmenuContainer, {});\ndropmenu.setMenuItems([\"Zero\", \"One\", \"Two\", \"Three\", \"Four\", \"Five\"]);\ndropmenu.addObserver(function (selectedItem) {\n    dropmenuDisplay.innerHTML = \"Current selection: \" + selectedItem;\n});\n\n/** Numberbox */\nlet numberboxContainer = document.getElementById(\"numberbox\");\nlet numberboxDisplay = document.getElementById(\"numberbox-display\");\nlet numberbox = new Numberbox(numberboxContainer, {\n    precision: 2\n});\nnumberbox.addObserver(function (val) {\n    numberboxDisplay.innerHTML = val.toFixed(2);\n});\n\n\n// WEBPACK FOOTER //\n// ./doc/ui/ui-doc.js"],"sourceRoot":""}